import TriggerEditor.SCArchive as sca;
import TriggerEditor.SCAWrapper as scw;

function SCmp(cp){
	var value = cp;
}
const SCAStr = EUDArray(60*8);
const str1 = StringBuffer(1024);
const SubtitleData = [Db(60*4),Db(60*4),Db(60*4),Db(60*4),Db(60*4),Db(60*4),Db(60*4),Db(60*4)];
const AnnounceData = [Db(60*4),Db(60*4),Db(60*4),Db(60*4),Db(60*4),Db(60*4),Db(60*4),Db(60*4)];
const WhisperData = [Db(60*4),Db(60*4),Db(60*4),Db(60*4),Db(60*4),Db(60*4),Db(60*4),Db(60*4)];
const LSpeakerData = [Db(60*4),Db(60*4),Db(60*4),Db(60*4),Db(60*4),Db(60*4),Db(60*4),Db(60*4)];




const MapMakerFlag = PVariable();
const PLevel = PVariable();
const StatP = PVariable();
const StatIncome = PVariable();
const StatTotalEPer = PVariable();
const StatTotalEPer2 = PVariable();
const StatTotalEPer3 = PVariable();
const StatUpgrade = PVariable();
const Credit32 = PVariable();
const Credit64 = PVariable();
const PEXP32 = PVariable();
const PEXP64 = PVariable();
const TotalExp32 = PVariable();
const TotalExp64 = PVariable();
const CurEXP32 = PVariable();
const CurEXP64 = PVariable();
const TesterFlag = PVariable();
const BanFlag = PVariable();
const AddSc = PVariable();
const PStatVer = PVariable();
const PlayTime = PVariable();
const PlayTime2 = PVariable();
const LV5Cool = PVariable();
const BanFlag2 = PVariable();
const BanFlag3 = PVariable();
const BanFlag4 = PVariable();
const StatTotalEPer4 = PVariable();
const StatBreakShield = PVariable();
const StatTotalEPerEx = PVariable();
const TimeAttackScore = PVariable();
const PUnitLevel = PVariable();
const PUnitClass = PVariable();
const VaccItem = PVariable();
const CSCooldown = PVariable();
const CSAtk = PVariable();
const CSEXP = PVariable();
const CSTotalEPer = PVariable();
const CSTotalEper4 = PVariable();
const CSDPSLV = PVariable();
const StatTotalEPerEx2 = PVariable();
const StatTotalEPerEx3 = PVariable();
const StatSCCool = PVariable();
const PETicket = PVariable();
const CSBreakShield = PVariable();
const SellTicket = PVariable();
const CurMission = PVariable();
const DayCheck = PVariable();
const DayCheck2 = PVariable();
const YearCheck = PVariable();
const MonthCheck = PVariable();
const BanFlag5 = PVariable();
const BanFlag6 = PVariable();
const BanFlag7 = PVariable();
const BanFlag8 = PVariable();
const RankTitle = PVariable();
const StatTotalEPer4X = PVariable();
const StatBreakShield2 = PVariable();
const FfragItem = PVariable();
const FfragItem32 = PVariable();
const FfragItemUsed = PVariable();
const TimeAttackScore48 = PVariable();
const FirstRewardLim = PVariable();
const FXPer44 = PVariable();
const FXPer45 = PVariable();
const FXPer46 = PVariable();
const FIncm = PVariable();
const FSEXP = PVariable();
const FXEPer = PVariable();
const FMEPer = PVariable();
const FBrSh = PVariable();
const StatBossSFrg = PVariable();
const StatXEPer44 = PVariable();
const StatXEPer45 = PVariable();
const StatXEPer46 = PVariable();
const StatXEPer47 = PVariable();
const FfragItem64 = PVariable();
const FfragItemUsed64 = PVariable();
const FStatVer = PVariable();
const PLevel2 = PVariable();
const AwakItem = PVariable();
const CSX_LV3Incm = PVariable();
const PETicket2 = PVariable();
const FXPer48 = PVariable();
const FMin = PVariable();
const WeekCheck = PVariable();
const FirstRewardLim2 = PVariable();
const TimeAttackScore50 = PVariable();
const FfragItemRank = PVariable();
const SellTicket64 = PVariable();
const FAcc = PVariable();
const FAcc2 = PVariable();
const FBrSh2 = PVariable();
const FMEPer2 = PVariable();
const SettingEffSound = PVariable();
const RankTitle2 = PVariable();
const RankTitle3 = PVariable();

const TRankTitle = PVariable();
const TRankTitle2 = PVariable();
const TRankTitle3 = PVariable();

const SettingSubtitle = PVariable();
const Money2 = PVariable();
const CurPlayTime = PVariable();
var Asm_Arrptr;
function onPluginStart(){

	const a = 0x6D0F48; //방이름
	const b = 0x6D0F78; //방장닉
	const c = Db("");
	//if(strcmp(a, b) == 0){foreach(cp : EUDLoopPlayer('Human', None, None)){setcurpl(cp); DisplayText("\x13\x1BUDP 플레이는 금지하고 있습니다.\n\x13\x1B만약 오랜기간 UDP로 플레이하신 경우 디스코드를 방문하여 제작자에게 문의해주시기 바랍니다."); SetMemory(0xCDDDCDDC,SetTo,1);}}
	if(strcmp(b, c) == 0){foreach(cp : EUDLoopPlayer('Human', None, None)){setcurpl(cp); DisplayText("\x13\x1B싱글플레이로는 플레이할 수 없습니다. 멀티플레이로 시작해주세요.\n\x13\x04실행 방지 코드 0x32223223 작동."); SetMemory(0xCDDDCDDC,SetTo,1);}}
	else if(Memory(0x51CE84,AtLeast,1001)){foreach(cp : EUDLoopPlayer('Human', None, None)){setcurpl(cp); DisplayText("\x13\x1B방 제목에서 배속 옵션을 제거해 주십시오.\n\x13\x1B또는 게임 반응속도(턴레이트)를 최대로 올려주십시오."); SetMemory(0xCDDDCDDC,SetTo,1);}}
	
sca.Init();
}
function afterTriggerExec(){
if(Memory(5830260,AtLeast,1)){

once{
	Asm_Arrptr = dwread_epd(EPD(5830260));
var focus = 87;
SetDeaths(Asm_Arrptr,SetTo,EPD(MapMakerFlag)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(PLevel)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(StatP)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(StatIncome)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(StatTotalEPer)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(StatTotalEPer2)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(StatTotalEPer3)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(StatUpgrade)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(Credit32)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(Credit64)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(PEXP32)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(PEXP64)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(TotalExp32)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(TotalExp64)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(CurEXP32)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(CurEXP64)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(TesterFlag)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(BanFlag)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(AddSc)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(PStatVer)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(PlayTime)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(PlayTime2)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(LV5Cool)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(BanFlag2)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(BanFlag3)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(BanFlag4)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(StatTotalEPer4)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(StatBreakShield)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(StatTotalEPerEx)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(TimeAttackScore)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(PUnitLevel)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(PUnitClass)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(VaccItem)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(CSCooldown)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(CSAtk)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(CSEXP)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(CSTotalEPer)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(CSTotalEper4)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(CSDPSLV)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(StatTotalEPerEx2)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(StatTotalEPerEx3)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(StatSCCool)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(PETicket)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(CSBreakShield)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(SellTicket)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(CurMission)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(DayCheck)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(DayCheck2)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(YearCheck)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(MonthCheck)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(BanFlag5)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(BanFlag6)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(BanFlag7)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(BanFlag8)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(RankTitle)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(StatTotalEPer4X)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(StatBreakShield2)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(FfragItem)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(FfragItem32)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(FfragItemUsed)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(TimeAttackScore48)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(FirstRewardLim)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(FXPer44)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(FXPer45)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(FXPer46)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(FIncm)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(FSEXP)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(FXEPer)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(FMEPer)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(FBrSh)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(StatBossSFrg)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(StatXEPer44)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(StatXEPer45)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(StatXEPer46)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(StatXEPer47)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(FfragItem64)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(FfragItemUsed64)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(FStatVer)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(PLevel2)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(AwakItem)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(CSX_LV3Incm)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(PETicket2)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(FXPer48)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(FMin)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(WeekCheck)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(FirstRewardLim2)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(TimeAttackScore50)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(FfragItemRank)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(SellTicket64)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(FAcc)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(FAcc2)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(FBrSh2)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(FMEPer2)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(SettingEffSound)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(RankTitle2)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(RankTitle3)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(Money2)+focus,0);
Asm_Arrptr+=1;
SetDeaths(Asm_Arrptr,SetTo,EPD(CurPlayTime)+focus,0);
Asm_Arrptr+=1;










SetMemory(5830260,SetTo,0);	
}
}
}
function beforeTriggerExec(){
	//scw.Exec();
	sca.Exec();
	const T1 = PVariable(); // 저장,불러오기 버튼 작동 지연 타이머
	const s=StringBuffer();
	const Nick1 = PVariable(list(1,1,1,1,1,1,1,1)); // 칭호 식별자
	const LoadCheck = PVariable();
	const KillCode = PVariable();
	const SCA_GLoaded = PVariable();
	const NBAlarm = PVariable();
	const T2 = PVariable(); // 타임아웃타이머
	const Rankst = PVariable();
	const Rankst2 = PVariable();
	const RankNum = PVariable();
	const RankNum2 = PVariable();
	const RankNum3 = PVariable();
	const TSettingSubtitle = PVariable();
	const CustomSubTitleEnabled = PVariable();
	const RankName = [Db("st"),Db("nd"),Db("rd"),Db("th")];
	const LoadSlot = PVariable();
	const AnnounceFlag = PVariable();
	const WhisperFlag = PVariable();
	const LSpeakerFlag = PVariable();
	var GLoadCheck;
	var CurVer;
	//if(ElapsedTime(AtLeast,90)){
	foreach(cp : EUDLoopPlayer("Human")){
		setcurpl(cp);
		if(Deaths(CurrentPlayer,Exactly,1,2)){
			SCA_GLoaded[0] = 0;
			SCA_GLoaded[1] = 0;
			SCA_GLoaded[2] = 0;
			SCA_GLoaded[3] = 0;
			SCA_GLoaded[4] = 0;
			SCA_GLoaded[5] = 0;
			SCA_GLoaded[6] = 0;
			sca.GlobalData[0] = 0;
			
		}
		if(sca.GlobalData[0]==1&&1<=sca.Month&&SCA_GLoaded[cp]==0){ // 글로벌데이터 불러오기 성공시 이벤트여부, 현재버전등등 알려줌 + 개인데이터 불러옴 
			if(LoadCheck[cp] == 0){
			CurVer = dwread_epd(EPD(0x58f608));//TEP에서 입력한 버전정보 불러옴
			if(sca.GlobalData[1] != CurVer && LoadCheck[cp] == 0 && CurVer < sca.GlobalData[1]){ // 구버전, 지원종료
				f_eprintln("\x04현재 최신버전이 아닙니다! 해당 맵은 \x03SCArchive \x07지원이 \x08종료\x04되었습니다. 최신버전을 이용해주세요.");
				PlayWAV("sound\\Bullet\\tscFir00.wav");
				LoadCheck[cp] = 1;
				GLoadCheck = 0;
			}
			else{ // 최신버전이다
				LoadCheck[cp] = 1;
				GLoadCheck = 1;
			}
			} 
			DisplayText("\x13\x07『 \x03SYSTEM \x04: GlobalData Loaded \x07』");
			SCA_GLoaded[cp] = 1;
				for (var i = 0; i < 20; i++) {
					SetDeaths(EPD(0x58f60C)+i,SetTo,sca.GlobalData[i],0);
				}
					SetDeaths(EPD(0x58f60C)+20,SetTo,sca.Year+0x32232232,0);
					SetDeaths(EPD(0x58f60C)+21,SetTo,sca.Month+0x32232232,0);
					SetDeaths(EPD(0x58f60C)+22,SetTo,sca.Hour+0x32232232,0);
					SetDeaths(EPD(0x58f60C)+23,SetTo,sca.Day+0x32232232,0);
					SetDeaths(EPD(0x58f60C)+24,SetTo,sca.Week+0x32232232,0);
					SetDeaths(EPD(0x58f60C)+25,SetTo,sca.Min+0x32232232,0);
					
					
					
		}
	//var css;
	//if(Deaths(cp,AtLeast,1,494)){
	//css-=1;
	//}
	//if(Deaths(cp,AtLeast,1,502)){
	//css+=1;
	//}
	//f_eprintln(css," TMapMakerFlag : ",dwread_epd(EPD(TMapMakerFlag)+css));

		if(GLoadCheck==1&&CurVer < sca.GlobalData[2] && sca.GlobalData[2] <= CurVer+1){
		GLoadCheck = 0;
		KillCode[0] = 1;
		KillCode[1] = 1;
		KillCode[2] = 1;
		KillCode[3] = 1;
		KillCode[4] = 1;
		KillCode[5] = 1;
		KillCode[6] = 1;
		f_eprintln("\x04해당 맵은 현시간 부로 \x03SCArchive \x07지원이 \x08종료\x04되었습니다. 최신버전을 이용해주세요.");
		}
		//if(CurVer < sca.GlobalData[2]){
		//DisplayText("\x08신버전 감지! \x04해당 버전은 \x03SCArchive \x07지원이 \x04추후 \x08종료\x04됩니다.");
		//}

		if(KillCode[cp]==1){
			DisplayText("\x04해당 맵은 현시간 부로 \x03SCArchive \x07지원이 \x08종료\x04되었습니다. 최신버전을 이용해주세요.");
		}



	
		if(Deaths(CurrentPlayer,Exactly,1,2)){//2번데스값에서 1번 신호가 온 경우
			//scw.scaLoadGlobal(SCmp);
			sca.LoadGlobalData();

		}

		if(Deaths(CurrentPlayer,Exactly,2,2)){//2번데스값에서 2번 신호가 온 경우
			//scw.scaLoadTime(SCmp);
			sca.LoadTime();
		}

		if(GLoadCheck==1){
			//슬롯별 데이터 관리
			//0번 DPS데이터, 수표, 게임플레이 시간
			//1번 몇번불러올지 지정
			//2번 SetTo DPS데이터
			//3번 Add DPS데이터, sub DPS데이터 (음수로 관리)
			//4번 커스텀칭호(로드용)
			//5번 탐택 및 랩 랭킹(로드용)(밴플레그는 닉변으로인해 사용불가처리할때 사용)
			//6번 공지 채팅
			//7번 본인, 귓말 채팅
			//8번 확성기 채팅
			//9번 44, 45, 46, 47, 48방어권

			if(Deaths(CurrentPlayer,Exactly,3,2)){//2번데스값에서 3번 신호가 온 경우
				//scw.scaLoad(0,SCmp);
				sca.LoadData(0);
			}
			if(Deaths(CurrentPlayer,Exactly,4,2)){//2번데스값에서 4번 신호가 온 경우
				NBAlarm[cp] = 0;
				RankTitle[cp] = 0;
				RankTitle2[cp] = 0;
				RankTitle3[cp] = 0;
				SettingSubtitle[cp] = TSettingSubtitle[cp];
				
				for (var i = 0; i < 60; i++){
					SCAStr[(60*cp)+i] = 0;
				} 
				//scw.scaSave(0,SCmp);
				sca.SaveData(0);
			    //f_eprintln("\x03SCArchive\x04에 \x07게임 데이터\x04를 저장하고 있습니다...");
			}
			if(Deaths(CurrentPlayer,Exactly,9,2)){//2번데스값에서 10번 신호=1번슬롯에 저장하라 신호가 온 경우
				NBAlarm[cp] = 0;
				RankTitle[cp] = 0;
				RankTitle2[cp] = 0;
				RankTitle3[cp] = 0;
				MapMakerFlag[cp] = 0;
				DayCheck2[cp] = 0;
				SettingSubtitle[cp] = 0;
				TesterFlag[cp] = 0;
				
				for (var i = 0; i < 60; i++){
					SCAStr[(60*cp)+i] = 0;
				} 
				str1.print("\x13\x07『 \x03Slot : \x0410 \x07Saving...\x07 』");
				//scw.scaSave(1,SCmp);
				sca.SaveData(10);
				LoadSlot[cp]=0;
			    //f_eprintln("\x03SCArchive\x04에 \x07게임 데이터\x04를 저장하고 있습니다...");

			}
			
			if(Deaths(CurrentPlayer,Exactly,10,2)){//2번데스값에서 10번 신호=1번슬롯에 저장하라 신호가 온 경우
				NBAlarm[cp] = 0;
				RankTitle[cp] = 0;
				RankTitle2[cp] = 0;
				RankTitle3[cp] = 0;
				MapMakerFlag[cp] = 0;
				DayCheck2[cp] = 0;
				SettingSubtitle[cp] = 0;
				TesterFlag[cp] = 0;
				
				for (var i = 0; i < 60; i++){
					SCAStr[(60*cp)+i] = 0;
				} 
				str1.print("\x13\x07『 \x03Slot : \x041 \x07Saving...\x07 』");
				//scw.scaSave(1,SCmp);
				sca.SaveData(1);
				LoadSlot[cp]=0;
			    //f_eprintln("\x03SCArchive\x04에 \x07게임 데이터\x04를 저장하고 있습니다...");

			}
			
			if(Deaths(CurrentPlayer,AtLeast,11,2)){//2번데스값에서 11번 이상의 신호가 온 경우
				LoadSlot[cp] = dwread_epd(EPD(0x58A364 + 48 * 2 + 4 * cp))-10;
				//scw.scaLoad(LoadSlot[cp],SCmp);
				sca.LoadData(LoadSlot[cp]);
				str1.print("\x13\x07『 \x03Slot : \x04",LoadSlot[cp]," \x0FLoading... \x07』");
			}
			
		}
		if (LoadCheck[cp]==1 && GLoadCheck == 0){
			SetDeaths(CurrentPlayer,SetTo,0,1);
		}
		else{
		if (sca.ConnectStatus() == 1){//SCA가용상태 인식
			SetDeathsX(CurrentPlayer,SetTo,1,1,1);
		}
		else{
			SetDeathsX(CurrentPlayer,SetTo,0,1,1);
		}
/***
 * @Summary.ko-KR
 * 0 = 대기
 * 1 = 불러오는 중
 * 2 = 시간 불러오는 중
 * 3 = 맵 변수 불러오는 중
 * 4 = 저장중
 * 6 = 패스트로드 : 한명 로드시 전부 6됨
***/


		if (sca.CommandStatus() == 0){
			SetDeathsX(CurrentPlayer,SetTo,2,1,2);
		}
		else{
			SetDeathsX(CurrentPlayer,SetTo,0,1,2);
		}

		
/***
 * @Summary.ko-KR
 * 1 = 연결됨
 * 2 = 연결 끊킴
 * 3 = 로드중
 * 4 = 로드 완료
 * 5 = 세이브중
 * 6 = 세이브 완료
 * 7 = 런처와 먼저 연결하세요
 * 8 = 다른 작업 중입니다.
 * 9 = 작업 실패
 * 10 = 명령 실행
 * 11 = 시간 로드
 * 12 = 글로벌데이터 로드
***/
		if (sca.GetLastMessage() == 4){ // 로드완료일경우 
			SetDeathsX(CurrentPlayer,SetTo,4,1,4);
			
			//if (LoadSlot[cp]==0){//메인 슬롯 로드완료시 맨처음 1회만 옮김??
			//}


			if (LoadSlot[cp]==4){
				if (SCAStr[(60*cp)+0]>=1){
				CustomSubTitleEnabled[cp]=1;// 칭호 데이터 감지여부
				for (var i = 0; i < 60; i++){
					SetDeaths(EPD(SubtitleData[cp])+i,SetTo,SCAStr[(60*cp)+i],0);
				} 
				}
				else {
				CustomSubTitleEnabled[cp]=0;// 칭호 데이터 감지여부
				for (var i = 0; i < 60; i++){
					SetDeaths(EPD(SubtitleData[cp])+i,SetTo,0,0);
					
				} 
				}
				LoadSlot[cp]=1;
			}
			
			if (LoadSlot[cp]==5){
				TRankTitle[cp] = RankTitle[cp];
				TRankTitle2[cp] = RankTitle2[cp];
				TRankTitle3[cp] = RankTitle3[cp];
				LoadSlot[cp]=1;
			}
			if (LoadSlot[cp]>=1){
				SetDeathsX(CurrentPlayer,SetTo,64,1,64);//슬롯로드완료일경우
			}
			if (LoadSlot[cp]==6){ // 공지
				for (var i = 0; i < 60; i++){
					SetDeaths(EPD(AnnounceData[cp])+i,SetTo,SCAStr[(60*cp)+i],0);
				} 
				LoadSlot[cp]=1;
				AnnounceFlag[cp] = 2000;
			}
			if (LoadSlot[cp]==7){ // 귓말
				for (var i = 0; i < 60; i++){
					SetDeaths(EPD(WhisperData[cp])+i,SetTo,SCAStr[(60*cp)+i],0);
				} 
				LoadSlot[cp]=1;
				WhisperFlag[cp] = 2000;
			}
			if (LoadSlot[cp]==8){ // 확성기
				for (var i = 0; i < 60; i++){
					SetDeaths(EPD(LSpeakerData[cp])+i,SetTo,SCAStr[(60*cp)+i],0);
				} 
				LoadSlot[cp]=1;
				LSpeakerFlag[cp] = 2000;
			}




		}
		else{
			SetDeathsX(CurrentPlayer,SetTo,0,1,4);
		}


		if (sca.GetLastMessage() == 11) {// 시간 로드완료일경우
			SetDeathsX(CurrentPlayer,SetTo,16,1,16);
		}
		else{
			SetDeathsX(CurrentPlayer,SetTo,0,1,16);
		}


		if (sca.GetLastMessage() == 12) {// 글로벌데이터 로드완료일경우
			SetDeathsX(CurrentPlayer,SetTo,32,1,32);
		}
		else{
			SetDeathsX(CurrentPlayer,SetTo,0,1,32);
		}


		if (WhisperFlag[cp]>=1) {//귓
			WhisperFlag[cp]-=1;
			//sprintf(4,"\x13\x03제작자로부터의 귓속말 : \" {:s} \"",WhisperData[cp]);
			str1.printAt(6,"\x13\x03제작자로부터의 귓속말 : ",ptr2s(WhisperData[cp]));
		}
		if (AnnounceFlag[cp]>=1) {//공지
			AnnounceFlag[cp]-=1;
			printAllAt(7,"\x13\x03전체 공지사항 \x04: \" {:s} \"",AnnounceData[cp]);
		}
		if (LSpeakerFlag[cp]>=1) {//확성기
			LSpeakerFlag[cp]-=1;
			printAllAt(8,"\x13\x03{:s}",LSpeakerData[cp]);
		}



		



		if (sca.GetLastMessage() == 6){
			SetDeathsX(CurrentPlayer,SetTo,8,1,8);

		if(NBAlarm[cp]==0&&CurVer < sca.GlobalData[1]){
			NBAlarm[cp] = 1;
			PlayWAV("sound\\Bullet\\tscFir00.wav");
			PlayWAV("sound\\Bullet\\tscFir00.wav");
			DisplayText("\x08신버전 감지! \x04해당 버전은 \x03SCArchive \x07지원이 \x04추후 \x08종료\x04됩니다. 현재 저장은 정상적으로 됩니다.");
		}
		}
		else{
			SetDeathsX(CurrentPlayer,SetTo,0,1,8);
		}
		
		}
		

		SetDeaths(CurrentPlayer,SetTo,0,2);//신호 초기화
		
		if(<?ChatEvent("cp","@칭호 도움말")?>){
			DisplayText("\x13\x11칭호 \x04도움말\n\x13@보유칭호 \x04: 자신이 보유한 칭호를 볼 수 있습니다.\n\x13@칭호 0 \x04: 칭호를 사용안함 상태로 변경합니다.\n\x13@칭호 1 \x04: 1번 칭호를 착용합니다.\n\x13@칭호 2 \x04: 2번 칭호를 착용합니다.\n\x13그외 @칭호 3, @칭호 4 등등이 있습니다,");
		}
		if(<?ChatEvent("cp","@칭호")?>){
			DisplayText("\x13\x11칭호 \x04도움말\n\x13@보유칭호 \x04: 자신이 보유한 칭호를 볼 수 있습니다.\n\x13@칭호 0 \x04: 칭호를 사용안함 상태로 변경합니다.\n\x13@칭호 1 \x04: 1번 칭호를 착용합니다.\n\x13@칭호 2 \x04: 2번 칭호를 착용합니다.\n\x13그외 @칭호 3, @칭호 4 등등이 있습니다,");
		}
		//TRankTitle[cp] = 1;
		//TRankTitle2[cp] = 2;
		//TRankTitle3[cp] = 3;
		//48번유닛은 칭호사용가능 여부 전달인자
		if(<?ChatEvent("cp","@보유칭호")?>){
			if(Deaths(cp,AtLeast,1,100)){
			DisplayText("\x07『 \x03@칭호 1 \x04: \x07[\x03M\x04ap\x10 M\x04aker\x07] \x07』");
			}
			else if(DeathsX(cp,Exactly,1,101,1)){
			DisplayText("\x07『 \x03@칭호 1 \x04: \x07[\x11T\x04ester \x1FU\x04ser\x07] \x07』");
			}
			else{
			DisplayText("\x07『 \x03@칭호 1 \x04: \x08없음 \x07』");
			}
			
			if(DeathsX(cp,Exactly,28,48,0xFF)){//28일 출석완료시 칭호사용가능
			DisplayText("\x07『 \x03@칭호 2 \x04: \x07[\x11S\x04eason \x081 \x1FU\x04ser\x07]\x08 \x07』");
			}
			else{
			DisplayText("\x07『 \x03@칭호 2 \x04: \x08없음 \x07』");
			}

			Rankst[cp] = TRankTitle[cp] % 10;
			Rankst2[cp] = TRankTitle[cp] % 100;
			Rankst2[cp] = Rankst2[cp]/10;
				if(Rankst2[cp]==1){
					RankNum[cp] = 3;
				}
				else{
				if(Rankst[cp]==1){
					RankNum[cp] = 0;
				}
				else if(Rankst[cp]==2){
					RankNum[cp] = 1;
				}
				else if(Rankst[cp]==3){
					RankNum[cp] = 2;
				}
				else{
					RankNum[cp] = 3;
				}
				}
			Rankst[cp] = TRankTitle2[cp] % 10;
			Rankst2[cp] = TRankTitle2[cp] % 100;
			Rankst2[cp] = Rankst2[cp]/10;
				if(Rankst2[cp]==1){
					RankNum2[cp] = 3;
				}
				else{
				if(Rankst[cp]==1){
					RankNum2[cp] = 0;
				}
				else if(Rankst[cp]==2){
					RankNum2[cp] = 1;
				}
				else if(Rankst[cp]==3){
					RankNum2[cp] = 2;
				}
				else{
					RankNum2[cp] = 3;
				}
				}

			Rankst[cp] = TRankTitle3[cp] % 10;
			Rankst2[cp] = TRankTitle3[cp] % 100;
			Rankst2[cp] = Rankst2[cp]/10;
				if(Rankst2[cp]==1){
					RankNum3[cp] = 3;
				}
				else{
				if(Rankst[cp]==1){
					RankNum3[cp] = 0;
				}
				else if(Rankst[cp]==2){
					RankNum3[cp] = 1;
				}
				else if(Rankst[cp]==3){
					RankNum3[cp] = 2;
				}
				else{
					RankNum3[cp] = 3;
				}
				}

			if(TRankTitle[cp]>=1 && TRankTitle2[cp]==0 && TRankTitle3[cp]==0){
					str1.print("\x07『 \x03@칭호 3-1 \x04: \x07[\x07LV \x08R\x1Fank. \x04",TRankTitle[cp],ptr2s(RankName[RankNum[cp]]),"\x07] \x04|| \x03칭호 3-2 \x04: \x07[\x03Class \x08R\x1Fank. \x04",TRankTitle2[cp],ptr2s(RankName[RankNum2[cp]]),"\x07] \x04|| \x03칭호 3-3 \x04: \x08없음 \x07』");
			}
			else if(TRankTitle[cp]>=1 && TRankTitle2[cp]>=1 && TRankTitle3[cp]==0){
					str1.print("\x07『 \x03@칭호 3-1 \x04: \x07[\x07LV \x08R\x1Fank. \x04",TRankTitle[cp],ptr2s(RankName[RankNum[cp]]),"\x07] \x04|| \x03칭호 3-2 \x04: \x07[\x03Class \x08R\x1Fank. \x04",TRankTitle2[cp],ptr2s(RankName[RankNum2[cp]]),"\x07] \x04|| \x03칭호 3-3 \x04: \x08없음 \x07』");
				
			}
			else if(TRankTitle[cp]>=1 && TRankTitle2[cp]==0 && TRankTitle3[cp]>=1){
					str1.print("\x07『 \x03@칭호 3-1 \x04: \x07[\x07LV \x08R\x1Fank. \x04",TRankTitle[cp],ptr2s(RankName[RankNum[cp]]),"\x07] \x04|| \x03칭호 3-2 \x04: \ㅌ09없음 \x04|| \x03칭호 3-3 \x04: \x07[\x02Fragment \x08R\x1Fank. \x04",TRankTitle3[cp],ptr2s(RankName[RankNum3[cp]]),"\x07] \x07』");
				
			}
			else if(TRankTitle[cp]>=1 && TRankTitle2[cp]>=1 && TRankTitle3[cp]>=1){
					str1.print("\x07『 \x03@칭호 3-1 \x04: \x07[\x07LV \x08R\x1Fank. \x04",TRankTitle[cp],ptr2s(RankName[RankNum[cp]]),"\x07] \x04|| \x03칭호 3-2 \x04: \x07[\x03Class \x08R\x1Fank. \x04",TRankTitle2[cp],ptr2s(RankName[RankNum2[cp]]),"\x07] \x04|| \x03칭호 3-3 \x04: \x07[\x02Fragment \x08R\x1Fank. \x04",TRankTitle3[cp],ptr2s(RankName[RankNum3[cp]]),"\x07] \x07』");
				
			}
			else if(TRankTitle[cp]>=0 && TRankTitle2[cp]>=1 && TRankTitle3[cp]==0){
					str1.print("\x07『 \x03@칭호 3-1 \x04: \x08없음 \x04|| \x03칭호 3-2 \x04: \x07[\x03Class \x08R\x1Fank. \x04",TRankTitle2[cp],ptr2s(RankName[RankNum2[cp]]),"\x07] \x04|| \x03칭호 3-3 \x04: \x07[\x02Fragment \x08R\x1Fank. \x08없음 \x07』");
				
			}
			else if(TRankTitle[cp]>=0 && TRankTitle2[cp]==0 && TRankTitle3[cp]>=1){
					str1.print("\x07『 \x03@칭호 3-1 \x04: \x08없음 \x04|| \x03칭호 3-2 \x04: \x08없음 \x04|| \x03칭호 3-3 \x04: \x07[\x02Fragment \x08R\x1Fank. \x04",TRankTitle3[cp],ptr2s(RankName[RankNum3[cp]]),"\x07] \x07』");
			}
			else if(TRankTitle[cp]>=0 && TRankTitle2[cp]>=1 && TRankTitle3[cp]>=1){
					str1.print("\x07『 \x03@칭호 3-1 \x04: \x08없음 \x04|| \x03칭호 3-2 \x04: \x07[\x03Class \x08R\x1Fank. \x04",TRankTitle2[cp],ptr2s(RankName[RankNum2[cp]]),"\x07] \x04|| \x03칭호 3-3 \x04: \x07[\x02Fragment \x08R\x1Fank. \x04",TRankTitle3[cp],ptr2s(RankName[RankNum3[cp]]),"\x07] \x07』");
			}
			else{
				DisplayText("\x07『 \x03@칭호 3-1 \x04: \x08없음 \x04|| \x03칭호 3-2 \x04: \x08없음 \x04|| \x03칭호 3-3 \x04: \x08없음 \x07』");
			}
			
			if(DeathsX(cp,Exactly,28*256,48,0xFF00)){//28일 출석완료시 칭호사용가능
			DisplayText("\x07『 \x03@칭호 4 \x04: \x07[\x11S\x04eason \x0F2 \x1FU\x04ser\x07]\x08 \x07』");
			}
			else{
			DisplayText("\x07『 \x03@칭호 4 \x04: \x08없음 \x07』");
			}
			
			 if(DeathsX(cp,Exactly,2,101,2)){
			DisplayText("\x07『 \x03@칭호 5 \x04: \x07[\x11S\x04eason \x022 \x1FT\x04ester\x07] \x07』");
			}
			else{
			DisplayText("\x07『 \x03@칭호 5 \x04: \x08없음 \x07』");
			}
			
			if(DeathsX(cp,Exactly,28*65536,48,0xFF0000)){//28일 출석완료시 칭호사용가능
			DisplayText("\x07『 \x03@칭호 6 \x04: \x07[\x11S\x04eason \x0F3 \x07P\x04layer\x07]\x08 \x07』");
			}
			else{
			DisplayText("\x07『 \x03@칭호 6 \x04: \x08없음 \x07』");
			}
			if(CustomSubTitleEnabled[cp]>=1){
			str1.print("\x07『 \x03@칭호 커스텀 \x04: \x07[",ptr2s(SubtitleData[cp]),"\x07] \x07』");
			}
			else{
			DisplayText("\x07『 \x03@칭호 커스텀 \x04: \x08없음 \x07』");
			}
		}
		
		if(<?ChatEvent("cp","@칭호 0")?>){
			f_eprintln("\x03칭호\x04가 \x07 사용안함 \x04으로 변경되었습니다.");
				SetDeaths(CurrentPlayer,SetTo,1,49);
				TSettingSubtitle[cp] = 0;
		}
		
		if(<?ChatEvent("cp","@칭호 1")?>){
			if(Deaths(cp,AtLeast,1,100)||DeathsX(cp,Exactly,1,101,1)){//맵메이커 or 테스터
				f_eprintln("\x03칭호\x04가 \x071 \x04번으로 변경되었습니다.");
					SetDeaths(CurrentPlayer,SetTo,1,49);
					TSettingSubtitle[cp] = 1;
			}
			else{
				f_eprintln("\x03칭호\x04사용 권한이 없습니다..");
					SetDeaths(CurrentPlayer,SetTo,1,49);
			}
		}
		if(<?ChatEvent("cp","@칭호 2")?>){
			if(DeathsX(cp,Exactly,28,48,0xFF)){//28일 출석완료시 칭호사용가능
				f_eprintln("\x03칭호\x04가 \x072 \x04번으로 변경되었습니다.");
					SetDeaths(CurrentPlayer,SetTo,1,49);
					TSettingSubtitle[cp] = 2;
			}
			else{
				f_eprintln("\x03칭호\x04사용 권한이 없습니다..");
					SetDeaths(CurrentPlayer,SetTo,1,49);
			}
		}
		
		if(<?ChatEvent("cp","@칭호 3-1")?>){
			if(TRankTitle[cp]>=1){//랭크타이틀
				f_eprintln("\x03칭호\x04가 \x073-1 \x04번으로 변경되었습니다.");
					SetDeaths(CurrentPlayer,SetTo,1,49);
					TSettingSubtitle[cp] = 3;
					Rankst[cp] = TRankTitle[cp] % 10;
			}
			else{
				f_eprintln("\x03칭호\x04사용 권한이 없습니다..");
					SetDeaths(CurrentPlayer,SetTo,1,49);
			}
		}
		
		if(<?ChatEvent("cp","@칭호 4")?>){
			if(DeathsX(cp,Exactly,28*256,48,0xFF00)){//출석칭호
				f_eprintln("\x03칭호\x04가 \x074 \x04번으로 변경되었습니다.");
					SetDeaths(CurrentPlayer,SetTo,1,49);
					TSettingSubtitle[cp] = 4;
			}
			else{
				f_eprintln("\x03칭호\x04사용 권한이 없습니다..");
					SetDeaths(CurrentPlayer,SetTo,1,49);
			}
		}
		
		
		
		if(<?ChatEvent("cp","@칭호 5")?>){
			if(DeathsX(cp,Exactly,2,101,2)){// 테스터2
				f_eprintln("\x03칭호\x04가 \x075 \x04번으로 변경되었습니다.");
					SetDeaths(CurrentPlayer,SetTo,1,49);
					TSettingSubtitle[cp] = 5;
			}
			else{
				f_eprintln("\x03칭호\x04사용 권한이 없습니다..");
					SetDeaths(CurrentPlayer,SetTo,1,49);
			}
		}
			
			
		if(<?ChatEvent("cp","@칭호 6")?>){
			if(DeathsX(cp,Exactly,28*65536,48,0xFF0000)){//출석칭호
				f_eprintln("\x03칭호\x04가 \x076 \x04번으로 변경되었습니다.");
					SetDeaths(CurrentPlayer,SetTo,1,49);
					TSettingSubtitle[cp] = 6;
			}
			else{
				f_eprintln("\x03칭호\x04사용 권한이 없습니다..");
					SetDeaths(CurrentPlayer,SetTo,1,49);
			}
		}
		if(<?ChatEvent("cp","@칭호 3-2")?>){
			if(TRankTitle2[cp]>=1){//랭크타이틀
				f_eprintln("\x03칭호\x04가 \x073-2 \x04번으로 변경되었습니다.");
					SetDeaths(CurrentPlayer,SetTo,1,49);
					TSettingSubtitle[cp] = 7;
					Rankst[cp] = TRankTitle2[cp] % 10;
			}
			else{
				f_eprintln("\x03칭호\x04사용 권한이 없습니다..");
					SetDeaths(CurrentPlayer,SetTo,1,49);
			}
		}
		if(<?ChatEvent("cp","@칭호 3-3")?>){
			if(TRankTitle3[cp]>=1){//랭크타이틀
				f_eprintln("\x03칭호\x04가 \x073-3 \x04번으로 변경되었습니다.");
					SetDeaths(CurrentPlayer,SetTo,1,49);
					TSettingSubtitle[cp] = 8;
					Rankst[cp] = TRankTitle3[cp] % 10;
			}
			else{
				f_eprintln("\x03칭호\x04사용 권한이 없습니다..");
					SetDeaths(CurrentPlayer,SetTo,1,49);
			}
		}
		if(<?ChatEvent("cp","@칭호 커스텀")?>){
			if(CustomSubTitleEnabled[cp]>=1){//커스텀칭호
				f_eprintln("\x03칭호\x04가 \x07커스텀 \x04으로 변경되었습니다.");
					SetDeaths(CurrentPlayer,SetTo,1,49);
					TSettingSubtitle[cp] = 256;
			}
			else{
				f_eprintln("\x03칭호\x04사용 권한이 없습니다..");
					SetDeaths(CurrentPlayer,SetTo,1,49);
			}
		}

		
		if(TSettingSubtitle[cp]>=1){
			if(TSettingSubtitle[cp] == 1){
				if(Deaths(cp,AtLeast,1,100)){
					SetPNamef(cp,"\x07[\x03M\x04ap\x10 M\x04aker\x07] {:c}{:n}",cp,cp);
				}
				else if (DeathsX(cp,Exactly,1,101,1)) {
					SetPNamef(cp,"\x07[\x11T\x04ester \x1FU\x04ser\x07] {:c}{:n}",cp,cp);
				}
			}
			else if(TSettingSubtitle[cp] == 2){
				if( DeathsX(cp,Exactly,28,48,0xFF)){
				SetPNamef(cp,"\x07[\x11S\x04eason \x081 \x1FU\x04ser\x07] {:c}{:n}",cp,cp);
				}
			}
			else if(TSettingSubtitle[cp] == 3){
				if(TRankTitle[cp]>=1){
					Rankst[cp] = TRankTitle[cp] % 10;
					Rankst2[cp] = TRankTitle[cp] % 100;
					Rankst2[cp] = Rankst2[cp]/10;
					if(Rankst2[cp]==1){
						RankNum[cp] = 3;
					}
					else{
					if(Rankst[cp]==1){
						RankNum[cp] = 0;
					}
					else if(Rankst[cp]==2){
						RankNum[cp] = 1;
					}
					else if(Rankst[cp]==3){
						RankNum[cp] = 2;
					}
					else{
						RankNum[cp] = 3;
					}
					}
					
					SetPNamef(cp,"\x07[\x07LV \x08R\x1Fank. \x04{}{:s}\x07] {:c}{:n}",TRankTitle[cp],RankName[RankNum[cp]],cp,cp);
					
				}
			}
			
			else if(TSettingSubtitle[cp] == 4){
				if( DeathsX(cp,Exactly,28*256,48,0xFF00)){
				SetPNamef(cp,"\x07[\x11S\x04eason \x0F2 \x1FU\x04ser\x07] {:c}{:n}",cp,cp);
					}
			}
			else if(TSettingSubtitle[cp] == 5){
				if( DeathsX(cp,Exactly,2,101,2)){
				SetPNamef(cp,"\x07[\x11S\x04eason \x022 \x1FT\x04ester\x07] {:c}{:n}",cp,cp);
					}
			}
			else if(TSettingSubtitle[cp] == 6){
				if( DeathsX(cp,Exactly,28*65536,48,0xFF0000)){
				SetPNamef(cp,"\x07[\x11S\x04eason \x0F3 \x07P\x04layer\x07] {:c}{:n}",cp,cp);
					}
			}
			else if(TSettingSubtitle[cp] == 7){
				if(TRankTitle2[cp]>=1){
					Rankst[cp] = TRankTitle2[cp] % 10;
					Rankst2[cp] = TRankTitle2[cp] % 100;
					Rankst2[cp] = Rankst2[cp]/10;
					if(Rankst2[cp]==1){
						RankNum[cp] = 3;
					}
					else{
					if(Rankst[cp]==1){
						RankNum[cp] = 0;
					}
					else if(Rankst[cp]==2){
						RankNum[cp] = 1;
					}
					else if(Rankst[cp]==3){
						RankNum[cp] = 2;
					}
					else{
						RankNum[cp] = 3;
					}
					}
					
					SetPNamef(cp,"\x07[\x03Class \x08R\x1Fank. \x04{}{:s}\x07] {:c}{:n}",TRankTitle2[cp],RankName[RankNum[cp]],cp,cp);
					
				}
			}
			else if(TSettingSubtitle[cp] == 8){
				if(TRankTitle3[cp]>=1){
					Rankst[cp] = TRankTitle3[cp] % 10;
					Rankst2[cp] = TRankTitle3[cp] % 100;
					Rankst2[cp] = Rankst2[cp]/10;
					if(Rankst2[cp]==1){
						RankNum[cp] = 3;
					}
					else{
					if(Rankst[cp]==1){
						RankNum[cp] = 0;
					}
					else if(Rankst[cp]==2){
						RankNum[cp] = 1;
					}
					else if(Rankst[cp]==3){
						RankNum[cp] = 2;
					}
					else{
						RankNum[cp] = 3;
					}
					}
					
					SetPNamef(cp,"\x07[\x02Fragment \x08R\x1Fank. \x04{}{:s}\x07] {:c}{:n}",TRankTitle3[cp],RankName[RankNum[cp]],cp,cp);
					
				}
			}
			else if(TSettingSubtitle[cp] == 256){
				if(CustomSubTitleEnabled[cp]>=1){//커스텀칭호
				SetPNamef(cp,"\x07[{:s}\x07] {:c}{:n}",SubtitleData[cp],cp,cp);
					}
			}

		
		}
		
	}
	
	//}
}