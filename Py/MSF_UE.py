from eudplib import *
import math
import customText as ct

#배럭 버튼셋 백업용

#001000015000096142066000176052066000015000015000074002000000
#005000032001080148066000016051066000222000222000207001248001
#002000007000096142066000176052066000007000007000080002189002
#007000237000096142066000176052066000071000071000078001189002
#003000001000096142066000176052066000012000012000084002189002
#004000109001096142066000176052066000034000034000010005014005
#008000219000096142066000176052066000019000019000218005189002
#004000109001096142066000176052066000009000009000010005014005
#004000109001096142066000176052066000002000002000010005014005
#006000121001080148066000016051066000223000223000215001035002
#004000109001096142066000176052066000003000003000010005014005
#009000030001032149066000160068066000000000000000160002000000
#009000236000048133066000144052066000000000254000181002000000


#배럭 버튼셋 백업용2
#005000033001080148066000016051066000017000017000088005248001
#006000037001080148066000016051066000020000020000091005248001
#001000015000096142066000176052066000015000015000074002000000
#002000007000096142066000176052066000007000007000080002189002
#007000237000096142066000176052066000071000071000078001189002
#003000001000096142066000176052066000012000012000084002189002
#004000109001096142066000176052066000034000034000010005014005
#008000219000096142066000176052066000019000019000218005189002
#004000109001096142066000176052066000009000009000010005014005
#004000109001096142066000176052066000002000002000010005014005
#004000109001096142066000176052066000003000003000010005014005
#009000030001032149066000160068066000000000000000160002000000
#009000236000048133066000144052066000000000254000181002000000




#컴셋백업
#006000037001080148066000016051066000020000020000091005248001
#009000035001080148066000016051066000019000019000092005248001
#008000034001080148066000016051066000018000018000090005248001
#005000033001080148066000016051066000017000017000088005248001
#003000130001096142066000176052066000022000022000075002010006
#002000132001096142066000176052066000072000072000094002010006
#004000004000096142066000176052066000070000070000217005010006
#001000250000224148066000112063066000004000004000081001010006
#

#    bytebuffer = bytearray([1,0,15,0,96,142,66,0,176,52,66,0,15,0,15,0,74,2,0,0,2,0,7,0,96,142,66,0,176,52,66,0,7,0,7,0,80,2,189,2,3,0,1,0,96,142,66,0,176,52,66,0,12,0,12,0,84,2,189,2,4,0,109,1,96,142,66,0,176,52,66,0,34,0,34,0,10,5,14,5,4,0,109,1,96,142,66,0,176,52,66,0,9,0,9,0,10,5,14,5,4,0,109,1,96,142,66,0,176,52,66,0,2,0,2,0,10,5,14,5,4,0,109,1,96,142,66,0,176,52,66,0,3,0,3,0,10,5,14,5,5,0,32,1,80,148,66,0,16,51,66,
#    	0,222,0,222,0,207,1,248,1,6,0,121,1,80,148,66,0,16,51,66,
#    	0,223,0,223,0,215,1,35,2,7,0,237,0,96,142,66,0,176,52,66,0,71,0,71,0,78,1,189,2,8,0,219,0,96,142,66,0,176,52,66,0,19,0,19,0,218,5,189,2,9,0,30,1,32,149,66,0,160,68,66,0,0,0,0,0,160,2,0,0,9,0,236,0,48,133,66,0,144,52,66,0,0,0,254,0,181,2,0,0])
#    btnptr = Db(bytebuffer)


SelHP = EUDVariable() # 0x58f500
MarHP = EUDVariable() # 0x58f504
SelSh = EUDVariable() # 0x58f508
SelOP = EUDVariable() # 0x58f50C
#UnitDataArr = Db(1700*12) # 0x58f510
#ScoreV = EUDVariable() # 0x58f518
#LevelV = EUDVariable() # 0x58f51C
#TimeV = EUDVariable() # 0x58f520


SkillArr = Db(4000) # 0x58f532

def onPluginStart():

	TBLMarID = [1,2,17,21,33,100,101]
	number = 0
	for i in TBLMarID:
		ct.f_setTbl(i, 0, 30,PColor(number),PName(number),"\x04's \x1FExceeD \x1BM\x04arine")
		number = number +1

	DoActions([
#		SetMemory(0x58f500, SetTo, SelHP.getValueAddr()),
#		SetMemory(0x58f504, SetTo, MarHP.getValueAddr()),
#		SetMemory(0x58f508, SetTo, SelSh.getValueAddr()),
#		SetMemory(0x58f50C, SetTo, SelOP.getValueAddr()),
#		SetMemory(0x58f518, SetTo, ScoreV.getValueAddr()),
#		SetMemory(0x58f51C, SetTo, LevelV.getValueAddr()),
#		SetMemory(0x58f520, SetTo, TimeV.getValueAddr()),
#		SetMemory(0x58f532, SetTo, SkillArr.getValueAddr()),
		#SetMemory(0x58f510, SetTo, UnitDataArr)
		])
	#0~6 공업
	#8~14 방업
	#배럭버튼셋 플레이어마다 다르게 설정해야함
#	P1BArr = bytearray([1,0,15,0,96,142,66,0,176,52,66,0,15,0,15,0,74,2,0,0,2,0,7,0,96,142,66,0,176,52,66,0,7,0,7,0,80,2,189,2,3,0,1,0,96,142,66,0,176,52,66,0,12,0,12,0,84,2,189,2,4,0,109,1,96,142,66,0,176,52,66,0,34,0,34,0,10,5,14,5,4,0,109,1,96,142,66,0,176,52,66,0,9,0,9,0,10,5,14,5,4,0,109,1,96,142,66,0,176,52,66,0,2,0,2,0,10,5,14,5,4,0,109,1,96,142,66,0,176,52,66,0,3,0,3,0,10,5,14,5,5,0,32,1,80,148,66,0,16,51,66,
#		0,0,0,0,0,207,1,248,1,6,0,121,1,80,148,66,0,16,51,66,
#		0,8,0,8,0,215,1,35,2,7,0,237,0,96,142,66,0,176,52,66,0,71,0,71,0,78,1,189,2,8,0,219,0,96,142,66,0,176,52,66,0,19,0,19,0,218,5,189,2,9,0,30,1,32,149,66,0,160,68,66,0,0,0,0,0,160,2,0,0,9,0,236,0,48,133,66,0,144,52,66,0,0,0,254,0,181,2,0,0])
#	P2BArr = bytearray([1,0,15,0,96,142,66,0,176,52,66,0,15,0,15,0,74,2,0,0,2,0,7,0,96,142,66,0,176,52,66,0,7,0,7,0,80,2,189,2,3,0,1,0,96,142,66,0,176,52,66,0,12,0,12,0,84,2,189,2,4,0,109,1,96,142,66,0,176,52,66,0,34,0,34,0,10,5,14,5,4,0,109,1,96,142,66,0,176,52,66,0,9,0,9,0,10,5,14,5,4,0,109,1,96,142,66,0,176,52,66,0,2,0,2,0,10,5,14,5,4,0,109,1,96,142,66,0,176,52,66,0,3,0,3,0,10,5,14,5,5,0,32,1,80,148,66,0,16,51,66,
#		0,1,0,1,0,207,1,248,1,6,0,121,1,80,148,66,0,16,51,66,
#		0,9,0,9,0,215,1,35,2,7,0,237,0,96,142,66,0,176,52,66,0,71,0,71,0,78,1,189,2,8,0,219,0,96,142,66,0,176,52,66,0,19,0,19,0,218,5,189,2,9,0,30,1,32,149,66,0,160,68,66,0,0,0,0,0,160,2,0,0,9,0,236,0,48,133,66,0,144,52,66,0,0,0,254,0,181,2,0,0])
#	P3BArr = bytearray([1,0,15,0,96,142,66,0,176,52,66,0,15,0,15,0,74,2,0,0,2,0,7,0,96,142,66,0,176,52,66,0,7,0,7,0,80,2,189,2,3,0,1,0,96,142,66,0,176,52,66,0,12,0,12,0,84,2,189,2,4,0,109,1,96,142,66,0,176,52,66,0,34,0,34,0,10,5,14,5,4,0,109,1,96,142,66,0,176,52,66,0,9,0,9,0,10,5,14,5,4,0,109,1,96,142,66,0,176,52,66,0,2,0,2,0,10,5,14,5,4,0,109,1,96,142,66,0,176,52,66,0,3,0,3,0,10,5,14,5,5,0,32,1,80,148,66,0,16,51,66,
#		0,2,0,2,0,207,1,248,1,6,0,121,1,80,148,66,0,16,51,66,
#		0,10,0,10,0,215,1,35,2,7,0,237,0,96,142,66,0,176,52,66,0,71,0,71,0,78,1,189,2,8,0,219,0,96,142,66,0,176,52,66,0,19,0,19,0,218,5,189,2,9,0,30,1,32,149,66,0,160,68,66,0,0,0,0,0,160,2,0,0,9,0,236,0,48,133,66,0,144,52,66,0,0,0,254,0,181,2,0,0])
#	P4BArr = bytearray([1,0,15,0,96,142,66,0,176,52,66,0,15,0,15,0,74,2,0,0,2,0,7,0,96,142,66,0,176,52,66,0,7,0,7,0,80,2,189,2,3,0,1,0,96,142,66,0,176,52,66,0,12,0,12,0,84,2,189,2,4,0,109,1,96,142,66,0,176,52,66,0,34,0,34,0,10,5,14,5,4,0,109,1,96,142,66,0,176,52,66,0,9,0,9,0,10,5,14,5,4,0,109,1,96,142,66,0,176,52,66,0,2,0,2,0,10,5,14,5,4,0,109,1,96,142,66,0,176,52,66,0,3,0,3,0,10,5,14,5,5,0,32,1,80,148,66,0,16,51,66,
#		0,3,0,3,0,207,1,248,1,6,0,121,1,80,148,66,0,16,51,66,
#		0,11,0,11,0,215,1,35,2,7,0,237,0,96,142,66,0,176,52,66,0,71,0,71,0,78,1,189,2,8,0,219,0,96,142,66,0,176,52,66,0,19,0,19,0,218,5,189,2,9,0,30,1,32,149,66,0,160,68,66,0,0,0,0,0,160,2,0,0,9,0,236,0,48,133,66,0,144,52,66,0,0,0,254,0,181,2,0,0])
#	P5BArr = bytearray([1,0,15,0,96,142,66,0,176,52,66,0,15,0,15,0,74,2,0,0,2,0,7,0,96,142,66,0,176,52,66,0,7,0,7,0,80,2,189,2,3,0,1,0,96,142,66,0,176,52,66,0,12,0,12,0,84,2,189,2,4,0,109,1,96,142,66,0,176,52,66,0,34,0,34,0,10,5,14,5,4,0,109,1,96,142,66,0,176,52,66,0,9,0,9,0,10,5,14,5,4,0,109,1,96,142,66,0,176,52,66,0,2,0,2,0,10,5,14,5,4,0,109,1,96,142,66,0,176,52,66,0,3,0,3,0,10,5,14,5,5,0,32,1,80,148,66,0,16,51,66,
#		0,4,0,4,0,207,1,248,1,6,0,121,1,80,148,66,0,16,51,66,
#		0,12,0,12,0,215,1,35,2,7,0,237,0,96,142,66,0,176,52,66,0,71,0,71,0,78,1,189,2,8,0,219,0,96,142,66,0,176,52,66,0,19,0,19,0,218,5,189,2,9,0,30,1,32,149,66,0,160,68,66,0,0,0,0,0,160,2,0,0,9,0,236,0,48,133,66,0,144,52,66,0,0,0,254,0,181,2,0,0])
#	P6BArr = bytearray([1,0,15,0,96,142,66,0,176,52,66,0,15,0,15,0,74,2,0,0,2,0,7,0,96,142,66,0,176,52,66,0,7,0,7,0,80,2,189,2,3,0,1,0,96,142,66,0,176,52,66,0,12,0,12,0,84,2,189,2,4,0,109,1,96,142,66,0,176,52,66,0,34,0,34,0,10,5,14,5,4,0,109,1,96,142,66,0,176,52,66,0,9,0,9,0,10,5,14,5,4,0,109,1,96,142,66,0,176,52,66,0,2,0,2,0,10,5,14,5,4,0,109,1,96,142,66,0,176,52,66,0,3,0,3,0,10,5,14,5,5,0,32,1,80,148,66,0,16,51,66,
#		0,5,0,5,0,207,1,248,1,6,0,121,1,80,148,66,0,16,51,66,
#		0,13,0,13,0,215,1,35,2,7,0,237,0,96,142,66,0,176,52,66,0,71,0,71,0,78,1,189,2,8,0,219,0,96,142,66,0,176,52,66,0,19,0,19,0,218,5,189,2,9,0,30,1,32,149,66,0,160,68,66,0,0,0,0,0,160,2,0,0,9,0,236,0,48,133,66,0,144,52,66,0,0,0,254,0,181,2,0,0])
#	P7BArr = bytearray([1,0,15,0,96,142,66,0,176,52,66,0,15,0,15,0,74,2,0,0,2,0,7,0,96,142,66,0,176,52,66,0,7,0,7,0,80,2,189,2,3,0,1,0,96,142,66,0,176,52,66,0,12,0,12,0,84,2,189,2,4,0,109,1,96,142,66,0,176,52,66,0,34,0,34,0,10,5,14,5,4,0,109,1,96,142,66,0,176,52,66,0,9,0,9,0,10,5,14,5,4,0,109,1,96,142,66,0,176,52,66,0,2,0,2,0,10,5,14,5,4,0,109,1,96,142,66,0,176,52,66,0,3,0,3,0,10,5,14,5,5,0,32,1,80,148,66,0,16,51,66,
#		0,6,0,6,0,207,1,248,1,6,0,121,1,80,148,66,0,16,51,66,
#		0,14,0,14,0,215,1,35,2,7,0,237,0,96,142,66,0,176,52,66,0,71,0,71,0,78,1,189,2,8,0,219,0,96,142,66,0,176,52,66,0,19,0,19,0,218,5,189,2,9,0,30,1,32,149,66,0,160,68,66,0,0,0,0,0,160,2,0,0,9,0,236,0,48,133,66,0,144,52,66,0,0,0,254,0,181,2,0,0])
#	P1Barrack = Db(P1BArr)
#	P2Barrack = Db(P2BArr)
#	P3Barrack = Db(P3BArr)
#	P4Barrack = Db(P4BArr)
#	P5Barrack = Db(P5BArr)
#	P6Barrack = Db(P6BArr)
#	P7Barrack = Db(P7BArr)
#	Trigger(conditions=[Memory(0x57F1B0, Exactly, 0)],actions=[SetMemory(0x518D20, SetTo, P1Barrack)])
#	Trigger(conditions=[Memory(0x57F1B0, Exactly, 1)],actions=[SetMemory(0x518D20, SetTo, P2Barrack)])
#	Trigger(conditions=[Memory(0x57F1B0, Exactly, 2)],actions=[SetMemory(0x518D20, SetTo, P3Barrack)])
#	Trigger(conditions=[Memory(0x57F1B0, Exactly, 3)],actions=[SetMemory(0x518D20, SetTo, P4Barrack)])
#	Trigger(conditions=[Memory(0x57F1B0, Exactly, 4)],actions=[SetMemory(0x518D20, SetTo, P5Barrack)])
#	Trigger(conditions=[Memory(0x57F1B0, Exactly, 5)],actions=[SetMemory(0x518D20, SetTo, P6Barrack)])
#	Trigger(conditions=[Memory(0x57F1B0, Exactly, 6)],actions=[SetMemory(0x518D20, SetTo, P7Barrack)])
#	DoActions([
#		SetMemory(0x518D1C, SetTo, 11),
#	])




#def beforeTriggerExec():
#
#	H = EUDVariable()
#	M = EUDVariable()
#	S = EUDVariable()
#	H << 3600000//TimeV
#	M << 3600000//(TimeV)
#	S << 60%%TimeV
#	if EUDIf()(Memory(0x58f514,Exactly,0)):
#		DoActions(FP,{print_utf8(12, 0, "\x07[ LV.000\x04 - \x1F00h \x1100m \x0F00s \x04- \x03SCORE : ? \x07기부\x04 : F9\x07 ]")})
#	if EUDElseIf()(Memory(0x58f514,Exactly,1)):
#		DoActions(FP,{print_utf8(12, 0, "\x07[ LV.000\x04 - \x1F00h \x1100m \x0F00s \x04- \x03SCORE : ? \x07기부\x04 : F9, \x1C배속조정 \x04: F12\x07 ]")})
#		ct.f_chatAnnouncementAll(*args)
#
#LevelV
#
#	EUDEndIf()

#def afterTriggerExec():
#	PercentCalc = EUDVariable()
#	if EUDIf()(SelOP >= 1):
#		ct.f_setTbl(1501, 0, 30,"\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D") #\x0D 개당 1바이트 현재 40바이트 #영어,특문,숫자 1바이트 차지 // 한글 3바이트 차지 함 #\x0D 해당1바이트 안보임
#		ct.f_setTbl(831, 0, 30,"\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D") #\x0D 개당 1바이트 현재 40바이트 #영어,특문,숫자 1바이트 차지 // 한글 3바이트 차지 함 #\x0D 해당1바이트 안보임
#		
#		PercentCalc << (SelHP*3)//MarHP
#		if EUDIf()(PercentCalc >= 2):
#			ct.f_setTbl(1501, 0, 30,"\x07",SelHP," \x04/ ",MarHP," \x1C",SelSh//10,".",SelSh%10,"%")
#			ct.f_setTbl(831, 0, 30,"\x07",SelHP," \x1C/ ",MarHP," \x1F",SelSh//10,".",SelSh%10,"%")
#		if EUDElseIf()(PercentCalc == 1):
#			ct.f_setTbl(1501, 0, 30,"\x17",SelHP," \x04/ ",MarHP," \x1C",SelSh//10,".",SelSh%10,"%")
#			ct.f_setTbl(831, 0, 30,"\x07",SelHP," \x1C/ ",MarHP," \x1F",SelSh//10,".",SelSh%10,"%")
#		if EUDElse()():
#			ct.f_setTbl(1501, 0, 30,"\x08",SelHP," \x04/ ",MarHP," \x1C",SelSh//10,".",SelSh%10,"%")
#			ct.f_setTbl(831, 0, 30,"\x07",SelHP," \x1C/ ",MarHP," \x1F",SelSh//10,".",SelSh%10,"%")
#		EUDEndIf()
#		SelOP.SubtractNumber(1)
#	EUDEndIf()