import TriggerEditor.SCArchive as sca;

function onPluginStart(){
  sca.Init();
  SetDeaths(Force1, SetTo, 1, 6);
}

function beforeTriggerExec(){
	sca.Exec();
	const T1 = PVariable(); // 저장,불러오기 버튼 작동 지연 타이머
	const s=StringBuffer();
	SetMemory(0x58f610,SetTo,0);
	foreach(cp : EUDLoopPlayer("Human")){
	setcurpl(cp);
        if(Memory(0x58D900,Exactly,1)){
            const dst, radix=parse(dwread_epd(EPD(0x58D904)), radix=10);
            if(list(radix!=0&&dst<=220000)){
            SetMemory(0x58f610,SetTo,dst);
            }
        }
//	if(Deaths(CurrentPlayer,AtLeast,1,150)&&Deaths(CurrentPlayer,AtMost,220000,150)&&Deaths(CurrentPlayer,AtLeast,1,151)){
//		SetDeaths(CurrentPlayer,SetTo,150,15);
//		var GiveRate = dwread_epd((12*150)+(cp))*10000;
//		var GiveP = dwread_epd((12*151)+(cp))-1;
//		if(Accumulate(CurrentPlayer,AtLeast,GiveRate,Ore)){
//		SetResources(GiveP,Add,GiveRate,Ore);
//		SetResources(CurrentPlayer,Subtract,GiveRate,Ore);
//		f_eprintln("\x07『 ",PColor(GiveP), PName(GiveP),"\x04에게 \x1F",GiveRate," Ore\x04를 기부하였습니다. \x07』");
//		setcurpl(GiveP);
//		f_eprintln("\x07『 ",PColor(cp), PName(cp),"\x04에게 \x1F",GiveRate," Ore\x04를 기부받았습니다. \x07』");
//		SetDeaths(CurrentPlayer,SetTo,150,15);
//		setcurpl(cp);
//		SetDeaths(CurrentPlayer,SetTo,150,15);
//		}
//		else{
//		f_eprintln("\x07『 \x04잔액이 부족합니다. \x07』");
//		SetDeaths(CurrentPlayer,SetTo,150,15);
//		}
//	}
//	else if(Deaths(CurrentPlayer,AtLeast,1,150)&&Deaths(CurrentPlayer,AtMost,220000,150)&&Deaths(CurrentPlayer,AtMost,0,151)){
//	f_eprintln("\x07『 \x1F기부 플레이어\x04가 설정되지 않았습니다. \x07』");
//	SetDeaths(CurrentPlayer,SetTo,150,15);
//	}
	
        
        
		var PLV = dwread_epd(72+cp);
		T1[cp] ++;
		if(Deaths(CurrentPlayer,AtLeast,1,11)){
		SetPNamef(cp,"\x07[\x03M\x04ap\x10 M\x04aker \x04- \x1FLV.\x04{}\x07] {:c}{:n}",PLV,cp,cp);
		}
		else if(PLV>=100){
		SetPNamef(cp,"\x07[\x1FL\x04imit \x1CB\x04reaker - \x1FLV.\x04{}\x07] {:c}{:n}",PLV,cp,cp);
		}
		else{
		SetPNamef(cp,"\x07[\x1FLV.\x04{}\x07] {:c}{:n}",PLV,cp,cp);
		}


		if(Deaths(CurrentPlayer, Exactly, 1,32) && Switch("Switch 240",Set) && Memory(0x58f900,AtMost,1)){
			switch(sca.GetLastMessage()){
				case 1:
					sca.ResetLastMessage();
					SetDeaths(CurrentPlayer, SetTo, 1, 31);
					SetDeaths(CurrentPlayer, SetTo, 0, 32);
				break;
			}
		}


		const LoadCheck = PVariable();
		const T2 = PVariable(); // 타임아웃타이머
		if(Deaths(CurrentPlayer, Exactly, 1,14) && Switch("Switch 240",Set)){ // Data Save
			T2[cp] ++;
			if(Deaths(CurrentPlayer, Exactly, 1,32)||LoadCheck[cp]==0) {
				f_eprintln("\x03SCArchive\x04와 \x07연결\x04되지 않아 \x08저장\x04할 수 없습니다.");
				PlayWAV("sound\\Bullet\\tscFir00.wav");
				SetDeaths(CurrentPlayer,SetTo,150,15);
				SetDeaths(CurrentPlayer, SetTo, 0, 14);
			}
			else if(Deaths(CurrentPlayer, Exactly, 2,16)){
				SetDeaths(CurrentPlayer,SetTo,350,15);
				SetDeaths(CurrentPlayer,SetTo,(sca.Year*10000)+(sca.Month*100)+sca.Day,148);
				SetDeaths(CurrentPlayer,SetTo,(sca.Hour*100)+sca.Min,147);
				
				
				sca.SaveData(0);
				SetDeaths(CurrentPlayer, SetTo, 0, 14);
				SetDeaths(CurrentPlayer, SetTo, 0, 16);
			}
			else if(Deaths(CurrentPlayer, Exactly, 0,16)){
				SetDeaths(CurrentPlayer,SetTo,350,15);
				sca.LoadTime();
				SetDeaths(CurrentPlayer, SetTo, 1, 16);
			}
		}
		
		if(Deaths(CurrentPlayer, Exactly, 1,16)){
			T2[cp] ++;
			switch(sca.GetLastMessage()){
				case 2:
					SetDeaths(CurrentPlayer, SetTo, 0, 16);
					SetDeaths(CurrentPlayer, SetTo, 0, 14);
					f_eprintln("\x03SCArchive\x04와 \x07연결\x04되지 않아 \x08저장\x04할 수 없습니다.");
					PlayWAV("sound\\Bullet\\tscFir00.wav");
					SetDeaths(CurrentPlayer,SetTo,150,15);
				case 4:
					SetDeaths(CurrentPlayer, SetTo, 2, 16);
					break;
				case 6:
					SetDeaths(CurrentPlayer, SetTo, 2, 16);
					break;
				case 7:
					SetDeaths(CurrentPlayer, SetTo, 0, 16);
					SetDeaths(CurrentPlayer, SetTo, 0, 14);
					f_eprintln("\x03SCArchive\x04와 \x07연결\x04되지 않아 \x08저장\x04할 수 없습니다.");
					PlayWAV("sound\\Bullet\\tscFir00.wav");
					SetDeaths(CurrentPlayer,SetTo,150,15);
					break;
				case 9:
					SetDeaths(CurrentPlayer, SetTo, 0, 16);
					SetDeaths(CurrentPlayer, SetTo, 0, 14);
					f_eprintln("\x08알 수 없는 오류로 저장에 실패했습니다.");
					PlayWAV("sound\\Bullet\\tscFir00.wav");
					SetDeaths(CurrentPlayer,SetTo,150,15);
					break;
				default:
				sca.ResetLastMessage();
			}
		}
		if (T2[cp]>= 800) {
				f_eprintln("\x08타임아웃\x04입니다. \x07다시 저장 \x04해주시기 바랍니다.");
				PlayWAV("sound\\Bullet\\tscFir00.wav");
				SetDeaths(CurrentPlayer,SetTo,150,15);
				SetDeaths(CurrentPlayer, SetTo, 0, 14);
				SetDeaths(CurrentPlayer, SetTo, 0, 16);
				sca.ResetLastMessage();
				T2[cp] = 0;
		}

		if(Deaths(CurrentPlayer, AtLeast, 1, 31) && Memory(0x58f900,AtMost,1)){ // Data Load
			SetDeaths(CurrentPlayer,SetTo,350,15);
			sca.LoadGlobalData();
			SetDeaths(CurrentPlayer, SetTo, 0, 31);SetDeaths(CurrentPlayer, SetTo, 1, 35);
		}
		if(sca.GlobalData[19]==1&&Deaths(CurrentPlayer, AtLeast, 1, 35)){ // 글로벌데이터 불러오기 성공시 이벤트여부, 현재버전등등 알려줌 + 개인데이터 불러옴  
		var CurVer = dwread_epd(EPD(0x58f608));//TEP에서 입력한 버전정보 불러옴
			if(sca.GlobalData[0] != CurVer && LoadCheck[cp] == 0 && CurVer >= sca.GlobalData[1]){ // 구버전, 허나 지원됨
				f_eprintln("\x04현재 최신버전이 아닙니다! 해당 맵은 \x03SCArchive \x07지원이 \x04추후 \x08종료\x04됩니다.");
				PlayWAV("sound\\Bullet\\tscFir00.wav");
				SetDeaths(CurrentPlayer,SetTo,150,15);
				LoadCheck[cp] = 1;
				T1[cp]= 0;
			}
			else if(sca.GlobalData[0] != CurVer && LoadCheck[cp] == 0 && CurVer < sca.GlobalData[1]){ // 구버전, 지원종료
				f_eprintln("\x04현재 최신버전이 아닙니다! 해당 맵은 \x03SCArchive \x07지원이 \x08종료\x04되었습니다. 최신버전을 이용해주세요.");
				PlayWAV("sound\\Bullet\\tscFir00.wav");
				SetDeaths(CurrentPlayer,SetTo,150,15);
				SetDeaths(CurrentPlayer, SetTo, 0, 35);
				SetDeaths(CurrentPlayer, SetTo, 1,32);
				T1[cp] = 0;
			}
			else{ // 최신버전이다
				LoadCheck[cp] = 1;
				SetMemory(0x58f60C,SetTo,sca.GlobalData[2]);//이벤트는 최신버전에서만
			}
		}

		if (Deaths(CurrentPlayer, AtLeast, 1, 35) && LoadCheck[cp] == 1 && T1[cp] >= 150){
			switch(sca.GetLastMessage()){
				case 4:
					SetDeaths(CurrentPlayer,SetTo,350,15);
					sca.LoadData(0);
					SetDeaths(CurrentPlayer, SetTo, 0, 35);
					break;
				default:
				sca.ResetLastMessage();
			}
		}
		
	}
}