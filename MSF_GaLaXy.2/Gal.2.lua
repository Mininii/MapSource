Curdir="C:\\Users\\whatd\\Desktop\\Stormcoast Fortress\\ScmDraft 2\\"
EXTLUA = "dir \""..Curdir.."\\MapSource\\Library\\\" /b"
for dir in io.popen(EXTLUA):lines() do
     if dir:match "%.[Ll][Uu][Aa]$" and dir ~= "Loader.lua" then
		InitEXTLua = assert(loadfile(Curdir.."MapSource\\Library\\"..dir))
		InitEXTLua()
     end
end
function GetStrSizeD(cp949flag,String)
	if type(String) == "number" then
		String = DecodeString(String)
	end
	local Size = 0
	if cp949flag == "X" or cp949flag == nil or cp949flag == 0 then -- utf8 Size
		String = cp949_to_utf8(String)
		Size = #String-1
	else -- cp949 Size
		Size = #String
	end
	return Size
end

function CGunErrorCheck(ErrorCode)
	if Limit == 1 then
		if GunSafety == 1 then
			--NIf(FP,{Always()})
			NIf(FP,{TTOR({Memory(0x6509B0, AtMost, EPD(MemoryPtr)-1),Memory(0x6509B0, AtLeast, EPD(MemoryPtr)+51)})})
			Trigger {
				players = {FP},
				conditions = {
					Label(0);
				},
				actions = {
					SetMemory(0x6509B0,SetTo,0);
					DisplayText("\x13\x04CGun \x08FATAL ERROR. \x04Error Code : "..ErrorCode,4);
					PlayWAV("sound\\Bullet\\TNsFir00.wav");
					PlayWAV("sound\\Bullet\\TNsFir00.wav");
					PlayWAV("sound\\Bullet\\TNsFir00.wav");
					SetMemory(0x6509B0,SetTo,1);
					DisplayText("\x13\x04CGun \x08FATAL ERROR. \x04Error Code : "..ErrorCode,4);
					PlayWAV("sound\\Bullet\\TNsFir00.wav");
					PlayWAV("sound\\Bullet\\TNsFir00.wav");
					PlayWAV("sound\\Bullet\\TNsFir00.wav");
					SetMemory(0x6509B0,SetTo,2);
					DisplayText("\x13\x04CGun \x08FATAL ERROR. \x04Error Code : "..ErrorCode,4);
					PlayWAV("sound\\Bullet\\TNsFir00.wav");
					PlayWAV("sound\\Bullet\\TNsFir00.wav");
					PlayWAV("sound\\Bullet\\TNsFir00.wav");
					SetMemory(0x6509B0,SetTo,3);
					DisplayText("\x13\x04CGun \x08FATAL ERROR. \x04Error Code : "..ErrorCode,4);
					PlayWAV("sound\\Bullet\\TNsFir00.wav");
					PlayWAV("sound\\Bullet\\TNsFir00.wav");
					PlayWAV("sound\\Bullet\\TNsFir00.wav");
					SetMemory(0x6509B0,SetTo,4);
					DisplayText("\x13\x04CGun \x08FATAL ERROR. \x04Error Code : "..ErrorCode,4);
					PlayWAV("sound\\Bullet\\TNsFir00.wav");
					PlayWAV("sound\\Bullet\\TNsFir00.wav");
					PlayWAV("sound\\Bullet\\TNsFir00.wav");
					SetMemory(0x6509B0,SetTo,5);
					DisplayText("\x13\x04CGun \x08FATAL ERROR. \x04Error Code : "..ErrorCode,4);
					PlayWAV("sound\\Bullet\\TNsFir00.wav");
					PlayWAV("sound\\Bullet\\TNsFir00.wav");
					PlayWAV("sound\\Bullet\\TNsFir00.wav");
					SetMemory(0x6509B0,SetTo,FP);
					SetCDeaths(FP,SetTo,1,DoWhileCon);
					--SetCVar(FP,ErrorCodeVar[2],SetTo,ErrorCode);
					SetNext("X",WhileLaunch[2] + 0xD000,1);
					PreserveTrigger();
				}
			}
			NIfEnd()
		else return nil end
	else return nil end
end
-- This text is generated by TrigEditPlus
--DoActions(P8,SetMemoryX(0x6620D0, SetTo, 0*0x10000,0xFF0000))
AtkFactor = 15
DefFactor = 20
MarCost = 10000
GMCost = 30000
NeCost = 30000
HPointFactor = 15
ExRate = 15
EasyEx1P = 150
HDEx1P = 170
BurEx1P = 200
Trigger {
	players = {Force2},
	conditions = {
		Command(CurrentPlayer,AtLeast,10,42);
		
	},
	actions = {
		KillUnitAt(1,42,"Anywhere",CurrentPlayer);
		PreserveTrigger();
		
	},
}
Trigger {
	players = {Force2},
	conditions = {
		Command(CurrentPlayer,AtLeast,20,35);
		
	},
	actions = {
		KillUnit(35,CurrentPlayer);
		PreserveTrigger();
		
	},
}

Trigger {
	players = {Force2},
	conditions = {
		Command(CurrentPlayer,AtLeast,20,37);
		
	},
	actions = {
		RemoveUnitAt(1,37,64,CurrentPlayer);
		PreserveTrigger();
		
	},
}

Trigger {
	players = {Force1},
	conditions = {
		
	},
	actions = {
		SetDeaths(CurrentPlayer,SetTo,1,217);
		
	},
}


SetForces({P1,P2,P3,P4,P5,P6},{P7,P8},{},{},{P1,P2,P3,P4,P5,P6,P7,P8})
FP = P8
function _0DPatchforVArr(VArrName,VArrLength)
for j=0, VArrLength do
for k=0, 3 do
TriggerX(FP,{VArrayX(VArr(VArrName,j),"Value",Exactly,0,255*(256^k))},{
SetVArrayX(VArr(VArrName,j),"Value",SetTo,(256^k)*0x0D,255*(256^k))})
end
end
end
UnitNamePtr = 0x591000 -- i * 0x20
RepUnitPtr = 0x593000
TestModeOnOff = 0
Limit = 0
GunSafety = 0
VName = "Ver.2.1"
SetFixedPlayer(FP)
StartCtrig()
RandSwitch = "Switch 1"
_0D = string.rep("\x0D",200)
BanToken = {84,69,70,60,71}
GiveUnitID = {64,65,66,67,61,63}
XSpeed = {"\x15#X0.5","\x05#X1.0","\x0E#X1.5","\x0F#X2.0","\x18#X2.5","\x10#X3.0","\x11#X3.5","\x08#X4.0","\x1C#X4.5","\x1F#X5.0"}
SpeedV = {0x2A,0x24,0x20,0x1D,0x19,0x15,0x11,0xC,0x8,0x4}
GiveRate2 = {1000, 5000, 10000, 50000, 100000,500000} 
GunPtrMemory = 0x590000
MemoryPtr = 0x590100
Player = {"\x08P1","\x0EP2","\x0FP3","\x10P4","\x11P5","\x15P6"}
Color = {"\x08","\x0E","\x0F","\x10","\x11","\x15"}
ColorCode = {0x08,0x0E,0x0F,0x10,0x11,0x15}
Marine = {}
HMarine = {}
LumMarine = {}
Lumia = {}
MarineL = {}
HMarineL = {}
LumMarineL = {}
LumiaL = {}
Str03 = {}
Str03L = {}
Names = {}
NamesI = {}
LumiaCT = {}
ShieldT = {}
PatchArr = {}
PatchArr2 = {}
PatchArr3 = {}
ATKExitText = {}
ATKUpText1 = {}
ATKUpText2 = {}
PlayerName={}
DefTypePatchforZerg={}
DefTypePatch={}
AtkTypePatch={}
CreateSpeedPatch = {}
ZergGroupFlagsPatch = {}
UnitDefPatch = {}
NonBionicPatch = {}
DefIgnorePatch = {}
SizePatchArr = {}
HeroIndexArr = {2,3,8,10,11,12,15,17,19,21,23,25,27,28,29,32,52,61,63,64,65,66,67,68,69,70,71,74,75,76,77,78,79,80,81,82,83,86,87,88,98,102}
HondonFlingyArr = {88,73,72,176,4,188,187,49,40,45,38,44,43,37,46,47,191,15,8,14,1,5,12,11,7,13,0,2,9,41,190,115,74,81,186}
ButtonSetArr = {72,3,84,69,70,60,71,64,65,66,67,61,63,83}
ButtonSetPatch = {}
ButtonSetPatch2 = {}
for i = 1, #ButtonSetArr do
table.insert(ButtonSetPatch,SetMemoryW(0x65FD00 + (ButtonSetArr[i]*2), SetTo, 10000))
table.insert(ButtonSetPatch2,SetMemoryW(0x65FD00 + (ButtonSetArr[i]*2), SetTo, 0))
end
Trigger {
	players = {FP},
	conditions = {
	},
	actions = {CreateUnit(1,"Edmund Duke (Siege Mode)",64,FP);
	}
}

function SetZergGroupFlags(UnitID)
table.insert(ZergGroupFlagsPatch,SetMemoryB(0x6637A0 + (UnitID),SetTo,0x01+0x08+0x20))
end
for i = 37, 57 do
SetZergGroupFlags(i)
end
SetZergGroupFlags(62)
SetZergGroupFlags(103)
SetZergGroupFlags(104)
function UnitEnable(UnitID)
table.insert(PatchArr,SetMemoryW(0x660A70 + (UnitID *2),SetTo,5))
table.insert(PatchArr2,SetMemoryB(0x57F27C + (6 * 228) + UnitID,SetTo,0))
table.insert(PatchArr2,SetMemoryB(0x57F27C + (7 * 228) + UnitID,SetTo,0))
table.insert(PatchArr2,SetMemoryW(0x65FD00 + (UnitID *2),SetTo,0))
table.insert(PatchArr2,SetMemoryW(0x663888 + (UnitID *2),SetTo,0))
table.insert(PatchArr2,SetMemoryW(0x660428 + (UnitID *2),SetTo,1))
table.insert(PatchArr2,SetMemoryB(0x663CE8 + UnitID,SetTo,0))
end
for i=0,5 do
table.insert(PatchArr3,SetMemoryB(0x57F27C + (i * 228) + GiveUnitID[i+1],SetTo,0))
end
for i=0,4 do
table.insert(PatchArr3,SetMemoryB(0x57F27C + ((i+1) * 228) + BanToken[i+1],SetTo,0))
end
function UnitEnable2(UnitID)
table.insert(PatchArr,SetMemoryW(0x660A70 + (UnitID *2),SetTo,5))
table.insert(PatchArr2,SetMemoryB(0x57F27C + (6 * 228) + UnitID,SetTo,0))
table.insert(PatchArr2,SetMemoryB(0x57F27C + (7 * 228) + UnitID,SetTo,0))
table.insert(PatchArr2,SetMemoryB(0x663CE8 + UnitID,SetTo,0))
end
for i=0,55 do
table.insert(DefTypePatch,SetMemory(0x662180 + 4*i,SetTo,0))
end
for i=0,32 do
table.insert(AtkTypePatch,SetMemory(0x657258 + 4*i,SetTo,0))
end
table.insert(AtkTypePatch,SetMemoryB(0x657258 + 129,SetTo,0))
table.insert(AtkTypePatch,SetMemoryB(0x657258 + 117,SetTo,2))
function ZergDefTypePatch(UnitID)
table.insert(DefTypePatchforZerg,SetMemoryB(0x662180 + UnitID,SetTo,2))
end
function Force1DefTypePatch(UnitID)
table.insert(DefTypePatch,SetMemoryB(0x662180 + UnitID,SetTo,1))
end
function ZergCreateSpeedPatch(UnitID)
table.insert(CreateSpeedPatch,SetMemoryW(0x660428 + (UnitID*2),SetTo,30))
end
function WeaponDefIgnore(UnitID)
table.insert(DefIgnorePatch,SetMemoryB(0x657258 + (UnitID),SetTo,4))
end

function SetTo0UnitDef(Index)
table.insert(UnitDefPatch,SetMemory(0x65FEC8 + (Index*4),SetTo,0))
end
function EnermyNonBionic(Index)
table.insert(NonBionicPatch,SetMemoryX(0x664080 + (Index*4),SetTo,0,0x10000))
end
function unitSizePatch(Index,Value)
table.insert(SizePatchArr,SetMemory(0x6617C8 + (Index*8),SetTo,(Value)+(Value*65536)))
table.insert(SizePatchArr,SetMemory(0x6617CC + (Index*8),SetTo,(Value)+(Value*65536)))
end
for i = 34, 99 do
EnermyNonBionic(i)
end
for i =0, 56 do
SetTo0UnitDef(i)
end

for i = 37, 47 do
ZergCreateSpeedPatch(i)
end
for i = 131, 149 do
ZergCreateSpeedPatch(i)
end

for i = 1, 5 do
UnitEnable(BanToken[i])
end
for i=1,6 do
UnitEnable(GiveUnitID[i])
end
for i = 35,57 do
ZergDefTypePatch(i)
end
for i = 131,152 do
ZergDefTypePatch(i)
end
ZergDefTypePatch(59)
ZergDefTypePatch(62)
ZergDefTypePatch(103)
ZergDefTypePatch(104)
UnitEnable(72)
UnitEnable(83)
UnitEnable(3)
UnitEnable(8)
UnitEnable(54)
UnitEnable2(9)
UnitEnable2(0)
UnitEnable2(1)
UnitEnable2(7)
UnitEnable2(2)
UnitEnable2(32)
UnitEnable2(34)
UnitEnable2(72)
UnitEnable2(72)


table.insert(PatchArr2,SetMemoryX(0x6638C8, SetTo, MarCost,0xFFFF))
table.insert(PatchArr2,SetMemoryX(0x66388C, SetTo, MarCost+GMCost,0xFFFF))
table.insert(PatchArr2,SetMemoryX(0x6559CC, SetTo, AtkFactor*65536,0xFFFF0000))
table.insert(PatchArr2,SetMemoryX(0x6559C0, SetTo, DefFactor,0xFFFF))


HondonPatchArr = {}
function HondonPatch(FlingyID,TunRad)
	if TunRad ~= nil then
	table.insert(HondonPatchArr, SetMemoryB(0x6C9E20 + FlingyID,SetTo,TunRad))
	else 
		table.insert(HondonPatchArr, SetMemoryB(0x6C9E20 + FlingyID,SetTo,70))
	end
	table.insert(HondonPatchArr, SetMemoryB(0x6C9858 + FlingyID,SetTo,0))
	table.insert(HondonPatchArr, SetMemory(0x6C9930 + (FlingyID*4),SetTo,0))
	table.insert(HondonPatchArr, SetMemoryW(0x6C9C78 + (FlingyID*2),SetTo,4000))
	table.insert(HondonPatchArr, SetMemory(0x6C9EF8 + (FlingyID*4),SetTo,12000))
end



HondonPatch(75,70)
HondonPatch(82,70)
HondonPatch(70,127)
HondonPatch(80,127)
for j, k in pairs(HondonFlingyArr) do
	HondonPatch(k)
end

for i = 37,52 do
unitSizePatch(i,3)
end
for i = 60,81 do
unitSizePatch(60,5)
end
Trigger { -- 퍼센트 데미지 세팅, 버튼셋
	players = {FP},
	actions = {
		SetMemory(0x515B88,SetTo,256);---------크기 0
		SetMemory(0x515B8C,SetTo,256);---------크기 1
		SetMemory(0x515B90,SetTo,256);---------크기 2
		SetMemory(0x515B94,SetTo,256);---------크기 3
		SetMemory(0x515B98,SetTo,256);---------크기 4
		SetMemory(0x515B9C,SetTo,256);---------크기 5
		SetMemory(0x515BA0,SetTo,256);---------크기 6
		SetMemory(0x515BA4,SetTo,256);---------크기 7
		SetMemory(0x515BA8,SetTo,256);---------크기 8
		SetMemory(0x515BAC,SetTo,256);---------크기 9
		SetMemory(0x515BB0,SetTo,25);
		SetMemory(0x515BB4,SetTo,256);
		SetMemory(0x515BB8,SetTo,384);
		SetMemory(0x515BBC,SetTo,256);
		SetMemory(0x515BC0,SetTo,256);
		SetMemory(0x515BC4,SetTo,256);
		SetMemory(0x515BC8,SetTo,256);
		SetMemory(0x515BCC,SetTo,256);
		SetMemory(0x515BD0,SetTo,256);
		SetMemory(0x515BD4,SetTo,256);		
		SetMemory(0x5188AC, SetTo, 5339096);
		SetMemory(0x518C9C, SetTo, 5339096);		
		SetMemory(0x5188A8, SetTo, 6);
		SetMemory(0x518C98, SetTo, 6);
	},
	}

DoActions2(FP,PatchArr)
DoActions2(FP,PatchArr2,1)
DoActions2(FP,PatchArr3,1)
DoActions2(FP,DefTypePatch,1)
DoActions2(FP,DefTypePatchforZerg,1)
DoActions2(FP,AtkTypePatch,1)
DoActions2(FP,CreateSpeedPatch,1)
DoActions2(FP,ZergGroupFlagsPatch,1)
DoActions2(FP,UnitDefPatch,1)
DoActions2(FP,DefIgnorePatch,1)
DoActions2(FP,NonBionicPatch,1)
DoActions2(FP,SizePatchArr,1)
DoActions2(FP,ButtonSetPatch,1)

DoActions(FP,{
SetInvincibility(Disable,"Mineral Field (Type 1)",11,64),
SetInvincibility(Disable,"Mineral Field (Type 2)",11,64),
SetInvincibility(Disable,"Mineral Field (Type 3)",11,64),
SetInvincibility(Disable,"Vespene Geyser",11,64),
SetInvincibility(Disable,"Young Chrysalis",Force2,64)
},1)

Enable_PlayerCheck()

VIndex = 0


CCodeIndex = 0

function CreateCCode()
CCodeIndex = CCodeIndex + 1
return Ccode(0x1000,CCodeIndex)
end

BGMType = CreateCCode()
LeaderBoardT = CreateCCode()
GMode = CreateCCode()
PaneltyP = CreateCCode()
BonusP = CreateCCode()
GiveRate = CreateCCode()
Test1 = CreateCCode()
ModeO = CreateCCode()
ModeT = CreateCCode()
LimitC = CreateCCode()
LimitX = CreateCCode()
TestMode = CreateCCode()
BanCode = CreateCCode() -- 18~23
BanCode2 = CreateCCode() -- 18~23
BanCode3 = CreateCCode() -- 18~23
BanCode4 = CreateCCode() -- 18~23
BanCode5 = CreateCCode() -- 18~23
BanCode6 = CreateCCode() -- 18~23
ModeT2 = CreateCCode()
ModeSel = CreateCCode()
BGMMode = CreateCCode()
BGMSel = CreateCCode()
SelectorT = CreateCCode()
HealT = CreateCCode()
CocoonLaunch = CreateCCode()
IntroT = CreateCCode()
LairHiveSpawnId = CreateCCode()
SymbolCheck = CreateCCode()
Chry_cond = CreateCCode()
ScanEffT = CreateCCode()
FormCon = CreateCCode()
GunBossAct = CreateCCode()
GunBossT = CreateCCode()
GunBossT2 = CreateCCode()
B_Chry_cond = CreateCCode()
Py_Cond = CreateCCode()
Sup_Cond = CreateCCode()
BossKill = CreateCCode()
SPGunCond = CreateCCode()
Win = CreateCCode()
CanCT = CreateCCode()
Print13 = CreateCCode()
GameOver = CreateCCode()
ExchangeRateTMinusFlag = CreateCCode()
GunBossT3 = CreateCCode()
DBossGen = CreateCCode()
HMDeaths = CreateCCode()
HMDeaths2 = CreateCCode()
HMDeaths3 = CreateCCode()
HMDeaths4 = CreateCCode()
HMDeaths5 = CreateCCode()
HMDeaths6 = CreateCCode()
DoWhileCon = CreateCCode()
--LairCCodeId = Ccode(0x1001,--)
--HiveCCodeId = Ccode(0x1002,--)
HiddenMode = CreateCCode()
KeyToggle = CreateCCode()
Toggle1 = CreateCCode()
ToggleSound = CreateCCode()
ToggleA = CreateCCode()
Toggle2 = CreateCCode()
ToggleS = CreateCCode()
Toggle3 = CreateCCode()
ToggleD = CreateCCode()
TGiveforCoCoon = CreateCCode()
CocoonGunCon = CreateCCode()
ifUpisAtk = CreateCCode()
OverCocooncomp = CreateCCode()
CanOut = CreateCCode()
ToggleHondon = CreateCCode()
ZombieCheck = CreateCCode()
CJump(AllPlayers,0) -- 트리거 가둬놓는곳
--for i = 1, 0x200 do
--	CVariable(AllPlayers,i)
--	end

function CreateVar()
VIndex = VIndex + 1
return V(VIndex)
end

CurrentArr = CreateVar()
BackupPosData = CreateVar()
BackupCP = CreateVar()
ForArr = CreateVar()
CPosX = CreateVar()
CPosY = CreateVar()
Dx = CreateVar()
Dy = CreateVar()
Dt = CreateVar()
Dv = CreateVar()
Du = CreateVar()
CUnit2 = CreateVar()
CUnit3 = CreateVar()
Speed = CreateVar()
BGMCP = CreateVar()
ExchangeRate = CreateVar()
ExrateBackup = CreateVar()
GunCUnit = CreateVar()
WhileLaunch = CreateVar()
MemoryPtrCP = CreateVar()
SetPlayers = CreateVar()
SelCP = CreateVar()
PosSavePtr = CreateVar()
HeroTxtStrPtr = CreateVar()
HIndex = CreateVar()
HPoint = CreateVar()
HPoint10 = CreateVar()
HIndex2 = CreateVar()
InfArmorFactor = CreateVar()
InfWeaponFactor = CreateVar()
UPCompStrPtr = CreateVar()
UpgradeCP = CreateVar()
UpgradeFactor = CreateVar()
TempUpgradePtr = CreateVar()
TempUpgradeMaskRet = CreateVar()
DisGun = CreateVar()
BdIndex = CreateVar()
NextPtrs = CreateVar()
Gun_HS = CreateVar()
UnitIDV = CreateVar()
CryUID= CreateVar()
CurrentMode = CreateVar()
CurrentBGM = CreateVar()
UnitIDVLair = CreateVar()
UnitIDVHive = CreateVar()
UnitIDV2Lair = CreateVar()
UnitIDV2Hive = CreateVar()
MarHP = CreateVar()
MarUpData = CreateVar()
InputMarUpData = CreateVar()
Gun_Y = CreateVar()
Gun_X = CreateVar()
Gun_A = CreateVar()
Gun_R = CreateVar()
Gun_V = CreateVar()
Gun_Temp = CreateVar()
Gun_TempPos =  CreateVar()
Gun_W = CreateVar()
Gun_UID = CreateVar()
Gun_UID2 = CreateVar()
Gun_UID3 = CreateVar()
CocoonValue = CreateVar()
CocoonValue2 = CreateVar()
Gun_TempPosX =  CreateVar()
Gun_TempPosY =  CreateVar()
UpgradeMax = CreateVar()
RepHeroIndex = CreateVar()
Gun_Level = CreateVar()
Gun_W2 = CreateVar()
Gun_SetLocChunkX = CreateVar()
Gun_SetLocChunkY = CreateVar()
Gun_LocChunkCheck = CreateVar()
ChunkChecksum  = CreateVar()
CCY  = CreateVar()
CCX = CreateVar()
CocoonUID = CreateVar()
CurrentChunk = CreateVar()
B10_Cond = CreateVar()
LocChunkPosCheck =CreateVar()
B11_Level = CreateVar()
UnitIDVOvr = CreateVar()
UnitIDVDis = CreateVar()
Cell_R = CreateVar()
Cell_A = CreateVar()
B1_Calc = CreateVar()
Boss1_H = CreateVar()
CBY = CreateVar()
CBX = CreateVar()
CBAngle = CreateVar()
CBHeight = CreateVar()
CBUnitId = CreateVar()
Locs = CreateVar()
B1_U = CreateVar()
B1_D = CreateVar()
B1_E = CreateVar()
B1_C = CreateVar()
B1_X = CreateVar()
B1_Y = CreateVar()
B1_A = CreateVar()
CurrentFactor = CreateVar()
CurrentUpgrade = CreateVar()
UpCount = CreateVar()
B1_F = CreateVar()
GunBoss_UID = CreateVar()
ExchangeRateT = CreateVar()
PaneltyPointT = CreateVar()
PaneltyPoint = CreateVar()
count = CreateVar()
CanC = CreateVar()
TBossSkill = CreateVar()
TBossHP = CreateVar()
TBossHPPtr = CreateVar()
TBossHPTemp = CreateVar()
TB_X = CreateVar()
TB_Y = CreateVar()
TB_A = CreateVar()
DBossD = CreateVar()
DBossU = CreateVar()
DBossR = CreateVar()
DBossA = CreateVar()
DBossX = CreateVar()
DBossY = CreateVar()
RepX = CreateVar()
RepY = CreateVar()
RepY = CreateVar()
HondonMode = CreateVar()
DBossPlaguePatch = CreateVar()
HiddenHP = CreateVar()
HiddenATK = CreateVar()
HiddenPts = CreateVar()
HiddenHPM = CreateVar()
HiddenATKM = CreateVar()
HiddenPtsM = CreateVar()
HiddenModeStrPtr = CreateVar()
HPointVar = CreateVar()
AtkUpMax = CreateVar()
UpgradeAv = CreateVar()
CanDefeat = CreateVar()
CVariable(AllPlayers,0x1000)
CVariable(AllPlayers,0x1001)
CVariable(AllPlayers,0x1002)
for i=0x300, 0x350 do
CVariable(AllPlayers,i) -- 
end

for i=0x400, 0x400+64 do
CVariable(AllPlayers,i) -- 
end
CocoonVarr = GetVArray(V(0x400))
Str00 = CArray(FP,50)
Str01 = CArray(FP,50)
Str02 = CArray(FP,50)
Str04 = CArray(FP,50)
Str10 = CArray(FP,50)
Str11 = CArray(FP,50)
Str12 = CArray(FP,50)
Str13 = CArray(FP,50)
Str14 = CArray(FP,50)
Str15 = CArray(FP,50)
Str16 = CArray(FP,50)
Str17 = CArray(FP,50)
Str18 = CArray(FP,50)
Str19 = CArray(FP,50)
Str20 = CArray(FP,50)
Str21 = CArray(FP,50)
Str22 = CArray(FP,50)
Str23 = CArray(FP,50)
Str24 = CArray(FP,50)
HiddenModeT = CVArray(FP,20)

Str25 = {}
Str26 = {}
Str27 = {}
Str28 = {}
for i = 0, 3 do
table.insert(Str25,CArray(FP,50))
table.insert(Str26,CArray(FP,50))
end
for i = 0, 4 do
table.insert(Str28,CArray(FP,50))
end
for i = 0, 10 do
table.insert(Str27,CArray(FP,50))
end
UArr3 = CVArray(FP,30)
ZUnitLairArr = CVArray(FP,4)
ZUnitHiveArr = CVArray(FP,4)
UpCompTxt = CVArray(FP,5)
UpCompRet = CVArray(FP,5)
HPointT = CVArray(FP,5)
UArr1 = CVArray(FP,16)
UArr2 = CVArray(FP,16)
LocChunkVArr = CVArray(FP,64)
for i = 0, 5 do
Str03[i+1] = CArray(FP,50)
Names[i+1] = CVArray(FP,7)
end
Include_CtrigPlib(360,RandSwitch,1)
Call_UnitIDVOvr = {SetNext("X",0x201A,0),SetNext(0x201B,"X",1)}
function Call_SaveCp()
DoActionsX(FP,{SetNext("X",0x2002,0),SetNext(0x2003,"X",1)})
end

function Call_LoadCp()
DoActionsX(FP,{SetNext("X",0x2004,0),SetNext(0x2005,"X",1)})
end
Trigger {
	players = {FP},
	conditions = {
		Label(0x2000);
	},
	actions = {
		PreserveTrigger();
	}
}


CDoActions(FP,{
TSetMemory(0x58DC60 + 0x14*0,SetTo,_Add(Gun_X,Gun_TempPosX)),
TSetMemory(0x58DC68 + 0x14*0,SetTo,_Add(Gun_X,Gun_TempPosX)),
TSetMemory(0x58DC64 + 0x14*0,SetTo,_Add(Gun_Y,Gun_TempPosY)),
TSetMemory(0x58DC6C + 0x14*0,SetTo,_Add(Gun_Y,Gun_TempPosY))
})

Trigger {
	players = {FP},
	conditions = {
		Label(0x2001);
	},
	actions = {
		PreserveTrigger();
	}
}

Trigger {
	players = {FP},
	conditions = {
		Label(0x2002);
	},
	actions = {
		PreserveTrigger();
	}
}

SaveCp(FP,BackupCP)
Trigger {
	players = {FP},
	conditions = {
		Label(0x2003);
	},
	actions = {
		PreserveTrigger();
	}
}

Trigger {
	players = {FP},
	conditions = {
		Label(0x2004);
	},
	actions = {
		PreserveTrigger();
	}
}

LoadCp(FP,BackupCP)
Trigger {
	players = {FP},
	conditions = {
		Label(0x2005);
	},
	actions = {
		PreserveTrigger();
	}
}
Trigger {
	players = {FP},
	conditions = {
		Label(0x2006);
	},
	actions = {
		PreserveTrigger();
	}
}
CDoActions(FP,{TCreateUnit(1, UnitIDV, 1, _Add(_Mod(_Rand(),2),6))})
Trigger {
	players = {FP},
	conditions = {
		Label(0x2007);
	},
	actions = {
		PreserveTrigger();
	}
}
Trigger {
	players = {FP},
	conditions = {
		Label(0x2008);
	},
	actions = {
		PreserveTrigger();
	}
}
CDoActions(FP,{TCreateUnit(1, UnitIDVLair, 1, _Add(_Mod(_Rand(),2),6))})
Trigger {
	players = {FP},
	conditions = {
		Label(0x2009);
	},
	actions = {
		PreserveTrigger();
	}
}
Trigger {
	players = {FP},
	conditions = {
		Label(0x200A);
	},
	actions = {
		PreserveTrigger();
	}
}
CDoActions(FP,{TCreateUnit(1, UnitIDVHive, 1, _Add(_Mod(_Rand(),2),6))})
Trigger {
	players = {FP},
	conditions = {
		Label(0x200B);
	},
	actions = {
		PreserveTrigger();
	}
}
Trigger {
	players = {FP},
	conditions = {
		Label(0x200E);
	},
	actions = {
		PreserveTrigger();
	}
}

NWhile(FP,{TBring(6,AtLeast,1,RepHeroIndex,64)})
CDoActions(FP,{
SetMemory(0x58DC60 + 0x14*0,SetTo,0),
SetMemory(0x58DC68 + 0x14*0,SetTo,0),
SetMemory(0x58DC64 + 0x14*0,SetTo,0),
SetMemory(0x58DC6C + 0x14*0,SetTo,0),TMoveLocation(1,RepHeroIndex,6,64),TGiveUnits(1,RepHeroIndex,6,1,8),TRemoveUnit(RepHeroIndex,8)})
CMov(FP,0x6509B0,EPD(RepUnitPtr))
NWhile(FP,Deaths(CurrentPlayer,AtLeast,1,0))
CAdd(FP,0x6509B0,1)
NWhileEnd()
Call_SaveCp()
f_Read(FP,0x58DC60,RepX,"X",0xFFF)
f_Read(FP,0x58DC64,RepY,"X",0xFFF)
CDoActions(FP,{TSetMemoryX(BackupCp,SetTo,RepX,0xFFF),TSetMemoryX(BackupCp,SetTo,_Mul(RepY,0x1000),0xFFF000),TSetMemoryX(BackupCp,SetTo,_Mul(RepHeroIndex,0x1000000),0xFF000000)})
NWhileEnd()


Trigger {
	players = {FP},
	conditions = {
		Label(0x200F);
	},
	actions = {
		PreserveTrigger();
	}
}
Trigger {
	players = {FP},
	conditions = {
		Label(0x2010);
	},
	actions = {
		PreserveTrigger();
	}
}
CDoActions(FP,{TCreateUnit(1, VArr(ZUnitLairArr,_Mod(_Rand(),4)), 1, _Add(_Mod(_Rand(),2),6))})
Trigger {
	players = {FP},
	conditions = {
		Label(0x2011);
	},
	actions = {
		PreserveTrigger();
	}
}
Trigger {
	players = {FP},
	conditions = {
		Label(0x2012);
	},
	actions = {
		PreserveTrigger();
	}
}
CDoActions(FP,{TCreateUnit(1, VArr(ZUnitHiveArr,_Mod(_Rand(),4)), 1, _Add(_Mod(_Rand(),2),6))})
Trigger {
	players = {FP},
	conditions = {
		Label(0x2013);
	},
	actions = {
		PreserveTrigger();
	}
}


Trigger {
	players = {FP},
	conditions = {
		Label(0x2014);
	},
	actions = {
		PreserveTrigger();
	}
}
Call_SaveCp()
CMov(FP,Gun_Temp,0)
CMov(FP,Gun_TempPos,0)
f_Read(FP,BackupCP,Gun_Temp)
f_Read(FP,_Sub(BackupCP,1),Gun_TempPos)
CMov(FP,Gun_TempPosX,_Mov(Gun_TempPos,0xFFF))
CMov(FP,Gun_TempPosY,_Div(_Mov(Gun_TempPos,0xFFF0000),0x10000))
CMov(FP,Gun_A,_Div(_Mov(Gun_Temp,0xFF00),0x100))
CMov(FP,Gun_R,_Div(_Mov(Gun_Temp,0x7FFF0000),0x10000))
CMov(FP,Gun_Level,_Div(_Mov(Gun_Temp,0xFF0000),0x10000))
CMov(FP,Gun_V,Gun_Temp,"X",0xFF)

Trigger {
	players = {FP},
	conditions = {
		Label(0x2015);
	},
	actions = {
		PreserveTrigger();
	}
}


Trigger {
	players = {FP},
	conditions = {
		Label(0x2016);
	},
	actions = {
		PreserveTrigger();
	}
}
CDoActions(FP,{TCreateUnit(1, UnitIDV2Lair, 1, _Add(_Mod(_Rand(),2),6))})
Trigger {
	players = {FP},
	conditions = {
		Label(0x2017);
	},
	actions = {
		PreserveTrigger();
	}
}
Trigger {
	players = {FP},
	conditions = {
		Label(0x2018);
	},
	actions = {
		PreserveTrigger();
	}
}
CDoActions(FP,{TCreateUnit(1, UnitIDV2Hive, 1, _Add(_Mod(_Rand(),2),6))})
Trigger {
	players = {FP},
	conditions = {
		Label(0x2019);
	},
	actions = {
		PreserveTrigger();
	}
}
Trigger {
	players = {FP},
	conditions = {
		Label(0x201A);
	},
	actions = {
		PreserveTrigger();
	}
}
CDoActions(FP,{TCreateUnit(1, UnitIDVOvr, 1, _Add(_Mod(_Rand(),2),6))})
Trigger {
	players = {FP},
	conditions = {
		Label(0x201B);
	},
	actions = {
		PreserveTrigger();
	}
}

Trigger {
	players = {FP},
	conditions = {
		Label(0x201C);
	},
	actions = {
		PreserveTrigger();
	}
}

DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFE1),
		SetMemory(0x58DC68, Add, 0x00000020),
		SetMemory(0x58DC64, Add, 0x00000010),
		SetMemory(0x58DC6C, Add, 0x00000050),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000001F),
		SetMemory(0x58DC68, Add, 0xFFFFFFE0),
		SetMemory(0x58DC64, Add, 0xFFFFFFF0),
		SetMemory(0x58DC6C, Add, 0xFFFFFFB0),
		SetMemory(0x58DC60, Add, 0x00000040),
		SetMemory(0x58DC68, Add, 0x00000080),
		SetMemory(0x58DC64, Add, 0x00000010),
		SetMemory(0x58DC6C, Add, 0x00000050),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFC0),
		SetMemory(0x58DC68, Add, 0xFFFFFF80),
		SetMemory(0x58DC64, Add, 0xFFFFFFF0),
		SetMemory(0x58DC6C, Add, 0xFFFFFFB0),
		SetMemory(0x58DC60, Add, 0xFFFFFFE1),
		SetMemory(0x58DC68, Add, 0x00000020),
		SetMemory(0x58DC64, Add, 0x00000040),
		SetMemory(0x58DC6C, Add, 0x00000080),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000001F),
		SetMemory(0x58DC68, Add, 0xFFFFFFE0),
		SetMemory(0x58DC64, Add, 0xFFFFFFC0),
		SetMemory(0x58DC6C, Add, 0xFFFFFF80),
		SetMemory(0x58DC60, Add, 0x000000A0),
		SetMemory(0x58DC68, Add, 0x000000E0),
		SetMemory(0x58DC64, Add, 0x00000010),
		SetMemory(0x58DC6C, Add, 0x00000050),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF60),
		SetMemory(0x58DC68, Add, 0xFFFFFF20),
		SetMemory(0x58DC64, Add, 0xFFFFFFF0),
		SetMemory(0x58DC6C, Add, 0xFFFFFFB0),
		SetMemory(0x58DC60, Add, 0x00000040),
		SetMemory(0x58DC68, Add, 0x00000080),
		SetMemory(0x58DC64, Add, 0x00000040),
		SetMemory(0x58DC6C, Add, 0x00000080),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFC0),
		SetMemory(0x58DC68, Add, 0xFFFFFF80),
		SetMemory(0x58DC64, Add, 0xFFFFFFC0),
		SetMemory(0x58DC6C, Add, 0xFFFFFF80),
		SetMemory(0x58DC60, Add, 0xFFFFFFE1),
		SetMemory(0x58DC68, Add, 0x00000020),
		SetMemory(0x58DC64, Add, 0x00000070),
		SetMemory(0x58DC6C, Add, 0x000000B0),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000001F),
		SetMemory(0x58DC68, Add, 0xFFFFFFE0),
		SetMemory(0x58DC64, Add, 0xFFFFFF90),
		SetMemory(0x58DC6C, Add, 0xFFFFFF50),
		SetMemory(0x58DC60, Add, 0x00000100),
		SetMemory(0x58DC68, Add, 0x00000140),
		SetMemory(0x58DC64, Add, 0x00000010),
		SetMemory(0x58DC6C, Add, 0x00000050),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF00),
		SetMemory(0x58DC68, Add, 0xFFFFFEC0),
		SetMemory(0x58DC64, Add, 0xFFFFFFF0),
		SetMemory(0x58DC6C, Add, 0xFFFFFFB0),
		SetMemory(0x58DC60, Add, 0x000000A0),
		SetMemory(0x58DC68, Add, 0x000000E0),
		SetMemory(0x58DC64, Add, 0x00000040),
		SetMemory(0x58DC6C, Add, 0x00000080),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF60),
		SetMemory(0x58DC68, Add, 0xFFFFFF20),
		SetMemory(0x58DC64, Add, 0xFFFFFFC0),
		SetMemory(0x58DC6C, Add, 0xFFFFFF80),
		SetMemory(0x58DC60, Add, 0x00000040),
		SetMemory(0x58DC68, Add, 0x00000080),
		SetMemory(0x58DC64, Add, 0x00000070),
		SetMemory(0x58DC6C, Add, 0x000000B0),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFC0),
		SetMemory(0x58DC68, Add, 0xFFFFFF80),
		SetMemory(0x58DC64, Add, 0xFFFFFF90),
		SetMemory(0x58DC6C, Add, 0xFFFFFF50),
		SetMemory(0x58DC60, Add, 0xFFFFFFE1),
		SetMemory(0x58DC68, Add, 0x00000020),
		SetMemory(0x58DC64, Add, 0x000000A0),
		SetMemory(0x58DC6C, Add, 0x000000E0),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000001F),
		SetMemory(0x58DC68, Add, 0xFFFFFFE0),
		SetMemory(0x58DC64, Add, 0xFFFFFF60),
		SetMemory(0x58DC6C, Add, 0xFFFFFF20),
		SetMemory(0x58DC60, Add, 0x00000160),
		SetMemory(0x58DC68, Add, 0x000001A0),
		SetMemory(0x58DC64, Add, 0x00000010),
		SetMemory(0x58DC6C, Add, 0x00000050),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFEA0),
		SetMemory(0x58DC68, Add, 0xFFFFFE60),
		SetMemory(0x58DC64, Add, 0xFFFFFFF0),
		SetMemory(0x58DC6C, Add, 0xFFFFFFB0),
		SetMemory(0x58DC60, Add, 0x00000100),
		SetMemory(0x58DC68, Add, 0x00000140),
		SetMemory(0x58DC64, Add, 0x00000040),
		SetMemory(0x58DC6C, Add, 0x00000080),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF00),
		SetMemory(0x58DC68, Add, 0xFFFFFEC0),
		SetMemory(0x58DC64, Add, 0xFFFFFFC0),
		SetMemory(0x58DC6C, Add, 0xFFFFFF80),
		SetMemory(0x58DC60, Add, 0x000000A0),
		SetMemory(0x58DC68, Add, 0x000000E0),
		SetMemory(0x58DC64, Add, 0x00000070),
		SetMemory(0x58DC6C, Add, 0x000000B0),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF60),
		SetMemory(0x58DC68, Add, 0xFFFFFF20),
		SetMemory(0x58DC64, Add, 0xFFFFFF90),
		SetMemory(0x58DC6C, Add, 0xFFFFFF50),
		SetMemory(0x58DC60, Add, 0x00000040),
		SetMemory(0x58DC68, Add, 0x00000080),
		SetMemory(0x58DC64, Add, 0x000000A0),
		SetMemory(0x58DC6C, Add, 0x000000E0),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFC0),
		SetMemory(0x58DC68, Add, 0xFFFFFF80),
		SetMemory(0x58DC64, Add, 0xFFFFFF60),
		SetMemory(0x58DC6C, Add, 0xFFFFFF20),
		SetMemory(0x58DC60, Add, 0xFFFFFFE1),
		SetMemory(0x58DC68, Add, 0x00000020),
		SetMemory(0x58DC64, Add, 0x000000D0),
		SetMemory(0x58DC6C, Add, 0x00000110),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000001F),
		SetMemory(0x58DC68, Add, 0xFFFFFFE0),
		SetMemory(0x58DC64, Add, 0xFFFFFF30),
		SetMemory(0x58DC6C, Add, 0xFFFFFEF0),
		SetMemory(0x58DC60, Add, 0x000001C0),
		SetMemory(0x58DC68, Add, 0x00000200),
		SetMemory(0x58DC64, Add, 0x00000010),
		SetMemory(0x58DC6C, Add, 0x00000050),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFE40),
		SetMemory(0x58DC68, Add, 0xFFFFFE00),
		SetMemory(0x58DC64, Add, 0xFFFFFFF0),
		SetMemory(0x58DC6C, Add, 0xFFFFFFB0),
		SetMemory(0x58DC60, Add, 0x00000160),
		SetMemory(0x58DC68, Add, 0x000001A0),
		SetMemory(0x58DC64, Add, 0x00000040),
		SetMemory(0x58DC6C, Add, 0x00000080),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFEA0),
		SetMemory(0x58DC68, Add, 0xFFFFFE60),
		SetMemory(0x58DC64, Add, 0xFFFFFFC0),
		SetMemory(0x58DC6C, Add, 0xFFFFFF80),
		SetMemory(0x58DC60, Add, 0x00000100),
		SetMemory(0x58DC68, Add, 0x00000140),
		SetMemory(0x58DC64, Add, 0x00000070),
		SetMemory(0x58DC6C, Add, 0x000000B0),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF00),
		SetMemory(0x58DC68, Add, 0xFFFFFEC0),
		SetMemory(0x58DC64, Add, 0xFFFFFF90),
		SetMemory(0x58DC6C, Add, 0xFFFFFF50),
		SetMemory(0x58DC60, Add, 0x000000A0),
		SetMemory(0x58DC68, Add, 0x000000E0),
		SetMemory(0x58DC64, Add, 0x000000A0),
		SetMemory(0x58DC6C, Add, 0x000000E0),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF60),
		SetMemory(0x58DC68, Add, 0xFFFFFF20),
		SetMemory(0x58DC64, Add, 0xFFFFFF60),
		SetMemory(0x58DC6C, Add, 0xFFFFFF20),
		SetMemory(0x58DC60, Add, 0x00000040),
		SetMemory(0x58DC68, Add, 0x00000080),
		SetMemory(0x58DC64, Add, 0x000000D0),
		SetMemory(0x58DC6C, Add, 0x00000110),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFC0),
		SetMemory(0x58DC68, Add, 0xFFFFFF80),
		SetMemory(0x58DC64, Add, 0xFFFFFF30),
		SetMemory(0x58DC6C, Add, 0xFFFFFEF0),
		SetMemory(0x58DC60, Add, 0xFFFFFFE1),
		SetMemory(0x58DC68, Add, 0x00000020),
		SetMemory(0x58DC64, Add, 0x00000100),
		SetMemory(0x58DC6C, Add, 0x00000140),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000001F),
		SetMemory(0x58DC68, Add, 0xFFFFFFE0),
		SetMemory(0x58DC64, Add, 0xFFFFFF00),
		SetMemory(0x58DC6C, Add, 0xFFFFFEC0),
		SetMemory(0x58DC60, Add, 0x00000220),
		SetMemory(0x58DC68, Add, 0x00000260),
		SetMemory(0x58DC64, Add, 0x00000010),
		SetMemory(0x58DC6C, Add, 0x00000050),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFDE0),
		SetMemory(0x58DC68, Add, 0xFFFFFDA0),
		SetMemory(0x58DC64, Add, 0xFFFFFFF0),
		SetMemory(0x58DC6C, Add, 0xFFFFFFB0),
		SetMemory(0x58DC60, Add, 0x000001C0),
		SetMemory(0x58DC68, Add, 0x00000200),
		SetMemory(0x58DC64, Add, 0x00000040),
		SetMemory(0x58DC6C, Add, 0x00000080),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFE40),
		SetMemory(0x58DC68, Add, 0xFFFFFE00),
		SetMemory(0x58DC64, Add, 0xFFFFFFC0),
		SetMemory(0x58DC6C, Add, 0xFFFFFF80),
		SetMemory(0x58DC60, Add, 0x00000160),
		SetMemory(0x58DC68, Add, 0x000001A0),
		SetMemory(0x58DC64, Add, 0x00000070),
		SetMemory(0x58DC6C, Add, 0x000000B0),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFEA0),
		SetMemory(0x58DC68, Add, 0xFFFFFE60),
		SetMemory(0x58DC64, Add, 0xFFFFFF90),
		SetMemory(0x58DC6C, Add, 0xFFFFFF50),
		SetMemory(0x58DC60, Add, 0x00000100),
		SetMemory(0x58DC68, Add, 0x00000140),
		SetMemory(0x58DC64, Add, 0x000000A0),
		SetMemory(0x58DC6C, Add, 0x000000E0),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF00),
		SetMemory(0x58DC68, Add, 0xFFFFFEC0),
		SetMemory(0x58DC64, Add, 0xFFFFFF60),
		SetMemory(0x58DC6C, Add, 0xFFFFFF20),
		SetMemory(0x58DC60, Add, 0x000000A0),
		SetMemory(0x58DC68, Add, 0x000000E0),
		SetMemory(0x58DC64, Add, 0x000000D0),
		SetMemory(0x58DC6C, Add, 0x00000110),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF60),
		SetMemory(0x58DC68, Add, 0xFFFFFF20),
		SetMemory(0x58DC64, Add, 0xFFFFFF30),
		SetMemory(0x58DC6C, Add, 0xFFFFFEF0),
		SetMemory(0x58DC60, Add, 0x00000040),
		SetMemory(0x58DC68, Add, 0x00000080),
		SetMemory(0x58DC64, Add, 0x00000100),
		SetMemory(0x58DC6C, Add, 0x00000140),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFC0),
		SetMemory(0x58DC68, Add, 0xFFFFFF80),
		SetMemory(0x58DC64, Add, 0xFFFFFF00),
		SetMemory(0x58DC6C, Add, 0xFFFFFEC0),
		SetMemory(0x58DC60, Add, 0xFFFFFFE1),
		SetMemory(0x58DC68, Add, 0x00000020),
		SetMemory(0x58DC64, Add, 0x00000130),
		SetMemory(0x58DC6C, Add, 0x00000170),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000001F),
		SetMemory(0x58DC68, Add, 0xFFFFFFE0),
		SetMemory(0x58DC64, Add, 0xFFFFFED0),
		SetMemory(0x58DC6C, Add, 0xFFFFFE90),
		SetMemory(0x58DC60, Add, 0x00000280),
		SetMemory(0x58DC68, Add, 0x000002C0),
		SetMemory(0x58DC64, Add, 0x00000010),
		SetMemory(0x58DC6C, Add, 0x00000050),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFD80),
		SetMemory(0x58DC68, Add, 0xFFFFFD40),
		SetMemory(0x58DC64, Add, 0xFFFFFFF0),
		SetMemory(0x58DC6C, Add, 0xFFFFFFB0),
		SetMemory(0x58DC60, Add, 0x00000220),
		SetMemory(0x58DC68, Add, 0x00000260),
		SetMemory(0x58DC64, Add, 0x00000040),
		SetMemory(0x58DC6C, Add, 0x00000080),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFDE0),
		SetMemory(0x58DC68, Add, 0xFFFFFDA0),
		SetMemory(0x58DC64, Add, 0xFFFFFFC0),
		SetMemory(0x58DC6C, Add, 0xFFFFFF80),
		SetMemory(0x58DC60, Add, 0x000001C0),
		SetMemory(0x58DC68, Add, 0x00000200),
		SetMemory(0x58DC64, Add, 0x00000070),
		SetMemory(0x58DC6C, Add, 0x000000B0),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFE40),
		SetMemory(0x58DC68, Add, 0xFFFFFE00),
		SetMemory(0x58DC64, Add, 0xFFFFFF90),
		SetMemory(0x58DC6C, Add, 0xFFFFFF50),
		SetMemory(0x58DC60, Add, 0x00000160),
		SetMemory(0x58DC68, Add, 0x000001A0),
		SetMemory(0x58DC64, Add, 0x000000A0),
		SetMemory(0x58DC6C, Add, 0x000000E0),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFEA0),
		SetMemory(0x58DC68, Add, 0xFFFFFE60),
		SetMemory(0x58DC64, Add, 0xFFFFFF60),
		SetMemory(0x58DC6C, Add, 0xFFFFFF20),
		SetMemory(0x58DC60, Add, 0x00000100),
		SetMemory(0x58DC68, Add, 0x00000140),
		SetMemory(0x58DC64, Add, 0x000000D0),
		SetMemory(0x58DC6C, Add, 0x00000110),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF00),
		SetMemory(0x58DC68, Add, 0xFFFFFEC0),
		SetMemory(0x58DC64, Add, 0xFFFFFF30),
		SetMemory(0x58DC6C, Add, 0xFFFFFEF0),
		SetMemory(0x58DC60, Add, 0x000000A0),
		SetMemory(0x58DC68, Add, 0x000000E0),
		SetMemory(0x58DC64, Add, 0x00000100),
		SetMemory(0x58DC6C, Add, 0x00000140),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF60),
		SetMemory(0x58DC68, Add, 0xFFFFFF20),
		SetMemory(0x58DC64, Add, 0xFFFFFF00),
		SetMemory(0x58DC6C, Add, 0xFFFFFEC0),
		SetMemory(0x58DC60, Add, 0x00000040),
		SetMemory(0x58DC68, Add, 0x00000080),
		SetMemory(0x58DC64, Add, 0x00000130),
		SetMemory(0x58DC6C, Add, 0x00000170),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFC0),
		SetMemory(0x58DC68, Add, 0xFFFFFF80),
		SetMemory(0x58DC64, Add, 0xFFFFFED0),
		SetMemory(0x58DC6C, Add, 0xFFFFFE90),
		SetMemory(0x58DC60, Add, 0xFFFFFFE1),
		SetMemory(0x58DC68, Add, 0x00000020),
		SetMemory(0x58DC64, Add, 0x00000160),
		SetMemory(0x58DC6C, Add, 0x000001A0),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000001F),
		SetMemory(0x58DC68, Add, 0xFFFFFFE0),
		SetMemory(0x58DC64, Add, 0xFFFFFEA0),
		SetMemory(0x58DC6C, Add, 0xFFFFFE60),
		SetMemory(0x58DC60, Add, 0x000002E0),
		SetMemory(0x58DC68, Add, 0x00000320),
		SetMemory(0x58DC64, Add, 0x00000010),
		SetMemory(0x58DC6C, Add, 0x00000050),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFD20),
		SetMemory(0x58DC68, Add, 0xFFFFFCE0),
		SetMemory(0x58DC64, Add, 0xFFFFFFF0),
		SetMemory(0x58DC6C, Add, 0xFFFFFFB0),
		SetMemory(0x58DC60, Add, 0x00000280),
		SetMemory(0x58DC68, Add, 0x000002C0),
		SetMemory(0x58DC64, Add, 0x00000040),
		SetMemory(0x58DC6C, Add, 0x00000080),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFD80),
		SetMemory(0x58DC68, Add, 0xFFFFFD40),
		SetMemory(0x58DC64, Add, 0xFFFFFFC0),
		SetMemory(0x58DC6C, Add, 0xFFFFFF80),
		SetMemory(0x58DC60, Add, 0x00000220),
		SetMemory(0x58DC68, Add, 0x00000260),
		SetMemory(0x58DC64, Add, 0x00000070),
		SetMemory(0x58DC6C, Add, 0x000000B0),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFDE0),
		SetMemory(0x58DC68, Add, 0xFFFFFDA0),
		SetMemory(0x58DC64, Add, 0xFFFFFF90),
		SetMemory(0x58DC6C, Add, 0xFFFFFF50),
		SetMemory(0x58DC60, Add, 0x000001C0),
		SetMemory(0x58DC68, Add, 0x00000200),
		SetMemory(0x58DC64, Add, 0x000000A0),
		SetMemory(0x58DC6C, Add, 0x000000E0),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFE40),
		SetMemory(0x58DC68, Add, 0xFFFFFE00),
		SetMemory(0x58DC64, Add, 0xFFFFFF60),
		SetMemory(0x58DC6C, Add, 0xFFFFFF20),
		SetMemory(0x58DC60, Add, 0x00000160),
		SetMemory(0x58DC68, Add, 0x000001A0),
		SetMemory(0x58DC64, Add, 0x000000D0),
		SetMemory(0x58DC6C, Add, 0x00000110),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFEA0),
		SetMemory(0x58DC68, Add, 0xFFFFFE60),
		SetMemory(0x58DC64, Add, 0xFFFFFF30),
		SetMemory(0x58DC6C, Add, 0xFFFFFEF0),
		SetMemory(0x58DC60, Add, 0x00000100),
		SetMemory(0x58DC68, Add, 0x00000140),
		SetMemory(0x58DC64, Add, 0x00000100),
		SetMemory(0x58DC6C, Add, 0x00000140),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF00),
		SetMemory(0x58DC68, Add, 0xFFFFFEC0),
		SetMemory(0x58DC64, Add, 0xFFFFFF00),
		SetMemory(0x58DC6C, Add, 0xFFFFFEC0),
		SetMemory(0x58DC60, Add, 0x000000A0),
		SetMemory(0x58DC68, Add, 0x000000E0),
		SetMemory(0x58DC64, Add, 0x00000130),
		SetMemory(0x58DC6C, Add, 0x00000170),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF60),
		SetMemory(0x58DC68, Add, 0xFFFFFF20),
		SetMemory(0x58DC64, Add, 0xFFFFFED0),
		SetMemory(0x58DC6C, Add, 0xFFFFFE90),
		SetMemory(0x58DC60, Add, 0x00000040),
		SetMemory(0x58DC68, Add, 0x00000080),
		SetMemory(0x58DC64, Add, 0x00000160),
		SetMemory(0x58DC6C, Add, 0x000001A0),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFC0),
		SetMemory(0x58DC68, Add, 0xFFFFFF80),
		SetMemory(0x58DC64, Add, 0xFFFFFEA0),
		SetMemory(0x58DC6C, Add, 0xFFFFFE60),
		SetMemory(0x58DC60, Add, 0xFFFFFFE1),
		SetMemory(0x58DC68, Add, 0x00000020),
		SetMemory(0x58DC64, Add, 0x00000190),
		SetMemory(0x58DC6C, Add, 0x000001D0),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000001F),
		SetMemory(0x58DC68, Add, 0xFFFFFFE0),
		SetMemory(0x58DC64, Add, 0xFFFFFE70),
		SetMemory(0x58DC6C, Add, 0xFFFFFE30),
		SetMemory(0x58DC60, Add, 0x00000340),
		SetMemory(0x58DC68, Add, 0x00000380),
		SetMemory(0x58DC64, Add, 0x00000010),
		SetMemory(0x58DC6C, Add, 0x00000050),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFCC0),
		SetMemory(0x58DC68, Add, 0xFFFFFC80),
		SetMemory(0x58DC64, Add, 0xFFFFFFF0),
		SetMemory(0x58DC6C, Add, 0xFFFFFFB0),
		SetMemory(0x58DC60, Add, 0x000002E0),
		SetMemory(0x58DC68, Add, 0x00000320),
		SetMemory(0x58DC64, Add, 0x00000040),
		SetMemory(0x58DC6C, Add, 0x00000080),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFD20),
		SetMemory(0x58DC68, Add, 0xFFFFFCE0),
		SetMemory(0x58DC64, Add, 0xFFFFFFC0),
		SetMemory(0x58DC6C, Add, 0xFFFFFF80),
		SetMemory(0x58DC60, Add, 0x00000280),
		SetMemory(0x58DC68, Add, 0x000002C0),
		SetMemory(0x58DC64, Add, 0x00000070),
		SetMemory(0x58DC6C, Add, 0x000000B0),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFD80),
		SetMemory(0x58DC68, Add, 0xFFFFFD40),
		SetMemory(0x58DC64, Add, 0xFFFFFF90),
		SetMemory(0x58DC6C, Add, 0xFFFFFF50),
		SetMemory(0x58DC60, Add, 0x00000220),
		SetMemory(0x58DC68, Add, 0x00000260),
		SetMemory(0x58DC64, Add, 0x000000A0),
		SetMemory(0x58DC6C, Add, 0x000000E0),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFDE0),
		SetMemory(0x58DC68, Add, 0xFFFFFDA0),
		SetMemory(0x58DC64, Add, 0xFFFFFF60),
		SetMemory(0x58DC6C, Add, 0xFFFFFF20),
		SetMemory(0x58DC60, Add, 0x000001C0),
		SetMemory(0x58DC68, Add, 0x00000200),
		SetMemory(0x58DC64, Add, 0x000000D0),
		SetMemory(0x58DC6C, Add, 0x00000110),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFE40),
		SetMemory(0x58DC68, Add, 0xFFFFFE00),
		SetMemory(0x58DC64, Add, 0xFFFFFF30),
		SetMemory(0x58DC6C, Add, 0xFFFFFEF0),
		SetMemory(0x58DC60, Add, 0x00000160),
		SetMemory(0x58DC68, Add, 0x000001A0),
		SetMemory(0x58DC64, Add, 0x00000100),
		SetMemory(0x58DC6C, Add, 0x00000140),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFEA0),
		SetMemory(0x58DC68, Add, 0xFFFFFE60),
		SetMemory(0x58DC64, Add, 0xFFFFFF00),
		SetMemory(0x58DC6C, Add, 0xFFFFFEC0),
		SetMemory(0x58DC60, Add, 0x00000100),
		SetMemory(0x58DC68, Add, 0x00000140),
		SetMemory(0x58DC64, Add, 0x00000130),
		SetMemory(0x58DC6C, Add, 0x00000170),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF00),
		SetMemory(0x58DC68, Add, 0xFFFFFEC0),
		SetMemory(0x58DC64, Add, 0xFFFFFED0),
		SetMemory(0x58DC6C, Add, 0xFFFFFE90),
		SetMemory(0x58DC60, Add, 0x000000A0),
		SetMemory(0x58DC68, Add, 0x000000E0),
		SetMemory(0x58DC64, Add, 0x00000160),
		SetMemory(0x58DC6C, Add, 0x000001A0),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF60),
		SetMemory(0x58DC68, Add, 0xFFFFFF20),
		SetMemory(0x58DC64, Add, 0xFFFFFEA0),
		SetMemory(0x58DC6C, Add, 0xFFFFFE60),
		SetMemory(0x58DC60, Add, 0x00000040),
		SetMemory(0x58DC68, Add, 0x00000080),
		SetMemory(0x58DC64, Add, 0x00000190),
		SetMemory(0x58DC6C, Add, 0x000001D0),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFC0),
		SetMemory(0x58DC68, Add, 0xFFFFFF80),
		SetMemory(0x58DC64, Add, 0xFFFFFE70),
		SetMemory(0x58DC6C, Add, 0xFFFFFE30),
		SetMemory(0x58DC60, Add, 0xFFFFFFE1),
		SetMemory(0x58DC68, Add, 0x00000020),
		SetMemory(0x58DC64, Add, 0x000001C0),
		SetMemory(0x58DC6C, Add, 0x00000200),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000001F),
		SetMemory(0x58DC68, Add, 0xFFFFFFE0),
		SetMemory(0x58DC64, Add, 0xFFFFFE40),
		SetMemory(0x58DC6C, Add, 0xFFFFFE00),
		SetMemory(0x58DC60, Add, 0x000003A0),
		SetMemory(0x58DC68, Add, 0x000003E0),
		SetMemory(0x58DC64, Add, 0x00000010),
		SetMemory(0x58DC6C, Add, 0x00000050),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFC60),
		SetMemory(0x58DC68, Add, 0xFFFFFC20),
		SetMemory(0x58DC64, Add, 0xFFFFFFF0),
		SetMemory(0x58DC6C, Add, 0xFFFFFFB0),
		SetMemory(0x58DC60, Add, 0x00000340),
		SetMemory(0x58DC68, Add, 0x00000380),
		SetMemory(0x58DC64, Add, 0x00000040),
		SetMemory(0x58DC6C, Add, 0x00000080),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFCC0),
		SetMemory(0x58DC68, Add, 0xFFFFFC80),
		SetMemory(0x58DC64, Add, 0xFFFFFFC0),
		SetMemory(0x58DC6C, Add, 0xFFFFFF80),
		SetMemory(0x58DC60, Add, 0x000002E0),
		SetMemory(0x58DC68, Add, 0x00000320),
		SetMemory(0x58DC64, Add, 0x00000070),
		SetMemory(0x58DC6C, Add, 0x000000B0),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFD20),
		SetMemory(0x58DC68, Add, 0xFFFFFCE0),
		SetMemory(0x58DC64, Add, 0xFFFFFF90),
		SetMemory(0x58DC6C, Add, 0xFFFFFF50),
		SetMemory(0x58DC60, Add, 0x00000280),
		SetMemory(0x58DC68, Add, 0x000002C0),
		SetMemory(0x58DC64, Add, 0x000000A0),
		SetMemory(0x58DC6C, Add, 0x000000E0),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFD80),
		SetMemory(0x58DC68, Add, 0xFFFFFD40),
		SetMemory(0x58DC64, Add, 0xFFFFFF60),
		SetMemory(0x58DC6C, Add, 0xFFFFFF20),
		SetMemory(0x58DC60, Add, 0x00000220),
		SetMemory(0x58DC68, Add, 0x00000260),
		SetMemory(0x58DC64, Add, 0x000000D0),
		SetMemory(0x58DC6C, Add, 0x00000110),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFDE0),
		SetMemory(0x58DC68, Add, 0xFFFFFDA0),
		SetMemory(0x58DC64, Add, 0xFFFFFF30),
		SetMemory(0x58DC6C, Add, 0xFFFFFEF0),
		SetMemory(0x58DC60, Add, 0x000001C0),
		SetMemory(0x58DC68, Add, 0x00000200),
		SetMemory(0x58DC64, Add, 0x00000100),
		SetMemory(0x58DC6C, Add, 0x00000140),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFE40),
		SetMemory(0x58DC68, Add, 0xFFFFFE00),
		SetMemory(0x58DC64, Add, 0xFFFFFF00),
		SetMemory(0x58DC6C, Add, 0xFFFFFEC0),
		SetMemory(0x58DC60, Add, 0x00000160),
		SetMemory(0x58DC68, Add, 0x000001A0),
		SetMemory(0x58DC64, Add, 0x00000130),
		SetMemory(0x58DC6C, Add, 0x00000170),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFEA0),
		SetMemory(0x58DC68, Add, 0xFFFFFE60),
		SetMemory(0x58DC64, Add, 0xFFFFFED0),
		SetMemory(0x58DC6C, Add, 0xFFFFFE90),
		SetMemory(0x58DC60, Add, 0x00000100),
		SetMemory(0x58DC68, Add, 0x00000140),
		SetMemory(0x58DC64, Add, 0x00000160),
		SetMemory(0x58DC6C, Add, 0x000001A0),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF00),
		SetMemory(0x58DC68, Add, 0xFFFFFEC0),
		SetMemory(0x58DC64, Add, 0xFFFFFEA0),
		SetMemory(0x58DC6C, Add, 0xFFFFFE60),
		SetMemory(0x58DC60, Add, 0x000000A0),
		SetMemory(0x58DC68, Add, 0x000000E0),
		SetMemory(0x58DC64, Add, 0x00000190),
		SetMemory(0x58DC6C, Add, 0x000001D0),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF60),
		SetMemory(0x58DC68, Add, 0xFFFFFF20),
		SetMemory(0x58DC64, Add, 0xFFFFFE70),
		SetMemory(0x58DC6C, Add, 0xFFFFFE30),
		SetMemory(0x58DC60, Add, 0x00000040),
		SetMemory(0x58DC68, Add, 0x00000080),
		SetMemory(0x58DC64, Add, 0x000001C0),
		SetMemory(0x58DC6C, Add, 0x00000200),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFC0),
		SetMemory(0x58DC68, Add, 0xFFFFFF80),
		SetMemory(0x58DC64, Add, 0xFFFFFE40),
		SetMemory(0x58DC6C, Add, 0xFFFFFE00),
		SetMemory(0x58DC60, Add, 0xFFFFFFE1),
		SetMemory(0x58DC68, Add, 0x00000020),
		SetMemory(0x58DC64, Add, 0x000001F0),
		SetMemory(0x58DC6C, Add, 0x00000230),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000001F),
		SetMemory(0x58DC68, Add, 0xFFFFFFE0),
		SetMemory(0x58DC64, Add, 0xFFFFFE10),
		SetMemory(0x58DC6C, Add, 0xFFFFFDD0),
		SetMemory(0x58DC60, Add, 0x00000400),
		SetMemory(0x58DC68, Add, 0x00000440),
		SetMemory(0x58DC64, Add, 0x00000010),
		SetMemory(0x58DC6C, Add, 0x00000050),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFC00),
		SetMemory(0x58DC68, Add, 0xFFFFFBC0),
		SetMemory(0x58DC64, Add, 0xFFFFFFF0),
		SetMemory(0x58DC6C, Add, 0xFFFFFFB0),
		SetMemory(0x58DC60, Add, 0x000003A0),
		SetMemory(0x58DC68, Add, 0x000003E0),
		SetMemory(0x58DC64, Add, 0x00000040),
		SetMemory(0x58DC6C, Add, 0x00000080),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFC60),
		SetMemory(0x58DC68, Add, 0xFFFFFC20),
		SetMemory(0x58DC64, Add, 0xFFFFFFC0),
		SetMemory(0x58DC6C, Add, 0xFFFFFF80),
		SetMemory(0x58DC60, Add, 0x00000340),
		SetMemory(0x58DC68, Add, 0x00000380),
		SetMemory(0x58DC64, Add, 0x00000070),
		SetMemory(0x58DC6C, Add, 0x000000B0),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFCC0),
		SetMemory(0x58DC68, Add, 0xFFFFFC80),
		SetMemory(0x58DC64, Add, 0xFFFFFF90),
		SetMemory(0x58DC6C, Add, 0xFFFFFF50),
		SetMemory(0x58DC60, Add, 0x000002E0),
		SetMemory(0x58DC68, Add, 0x00000320),
		SetMemory(0x58DC64, Add, 0x000000A0),
		SetMemory(0x58DC6C, Add, 0x000000E0),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFD20),
		SetMemory(0x58DC68, Add, 0xFFFFFCE0),
		SetMemory(0x58DC64, Add, 0xFFFFFF60),
		SetMemory(0x58DC6C, Add, 0xFFFFFF20),
		SetMemory(0x58DC60, Add, 0x00000280),
		SetMemory(0x58DC68, Add, 0x000002C0),
		SetMemory(0x58DC64, Add, 0x000000D0),
		SetMemory(0x58DC6C, Add, 0x00000110),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFD80),
		SetMemory(0x58DC68, Add, 0xFFFFFD40),
		SetMemory(0x58DC64, Add, 0xFFFFFF30),
		SetMemory(0x58DC6C, Add, 0xFFFFFEF0),
		SetMemory(0x58DC60, Add, 0x00000220),
		SetMemory(0x58DC68, Add, 0x00000260),
		SetMemory(0x58DC64, Add, 0x00000100),
		SetMemory(0x58DC6C, Add, 0x00000140),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFDE0),
		SetMemory(0x58DC68, Add, 0xFFFFFDA0),
		SetMemory(0x58DC64, Add, 0xFFFFFF00),
		SetMemory(0x58DC6C, Add, 0xFFFFFEC0),
		SetMemory(0x58DC60, Add, 0x000001C0),
		SetMemory(0x58DC68, Add, 0x00000200),
		SetMemory(0x58DC64, Add, 0x00000130),
		SetMemory(0x58DC6C, Add, 0x00000170),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFE40),
		SetMemory(0x58DC68, Add, 0xFFFFFE00),
		SetMemory(0x58DC64, Add, 0xFFFFFED0),
		SetMemory(0x58DC6C, Add, 0xFFFFFE90),
		SetMemory(0x58DC60, Add, 0x00000160),
		SetMemory(0x58DC68, Add, 0x000001A0),
		SetMemory(0x58DC64, Add, 0x00000160),
		SetMemory(0x58DC6C, Add, 0x000001A0),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFEA0),
		SetMemory(0x58DC68, Add, 0xFFFFFE60),
		SetMemory(0x58DC64, Add, 0xFFFFFEA0),
		SetMemory(0x58DC6C, Add, 0xFFFFFE60),
		SetMemory(0x58DC60, Add, 0x00000100),
		SetMemory(0x58DC68, Add, 0x00000140),
		SetMemory(0x58DC64, Add, 0x00000190),
		SetMemory(0x58DC6C, Add, 0x000001D0),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF00),
		SetMemory(0x58DC68, Add, 0xFFFFFEC0),
		SetMemory(0x58DC64, Add, 0xFFFFFE70),
		SetMemory(0x58DC6C, Add, 0xFFFFFE30),
		SetMemory(0x58DC60, Add, 0x000000A0),
		SetMemory(0x58DC68, Add, 0x000000E0),
		SetMemory(0x58DC64, Add, 0x000001C0),
		SetMemory(0x58DC6C, Add, 0x00000200),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF60),
		SetMemory(0x58DC68, Add, 0xFFFFFF20),
		SetMemory(0x58DC64, Add, 0xFFFFFE40),
		SetMemory(0x58DC6C, Add, 0xFFFFFE00),
		SetMemory(0x58DC60, Add, 0x00000040),
		SetMemory(0x58DC68, Add, 0x00000080),
		SetMemory(0x58DC64, Add, 0x000001F0),
		SetMemory(0x58DC6C, Add, 0x00000230),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFC0),
		SetMemory(0x58DC68, Add, 0xFFFFFF80),
		SetMemory(0x58DC64, Add, 0xFFFFFE10),
		SetMemory(0x58DC6C, Add, 0xFFFFFDD0),
		SetMemory(0x58DC60, Add, 0xFFFFFFE1),
		SetMemory(0x58DC68, Add, 0x00000020),
		SetMemory(0x58DC64, Add, 0x00000220),
		SetMemory(0x58DC6C, Add, 0x00000260),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000001F),
		SetMemory(0x58DC68, Add, 0xFFFFFFE0),
		SetMemory(0x58DC64, Add, 0xFFFFFDE0),
		SetMemory(0x58DC6C, Add, 0xFFFFFDA0),
		SetMemory(0x58DC60, Add, 0x00000460),
		SetMemory(0x58DC68, Add, 0x000004A0),
		SetMemory(0x58DC64, Add, 0x00000010),
		SetMemory(0x58DC6C, Add, 0x00000050),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFBA0),
		SetMemory(0x58DC68, Add, 0xFFFFFB60),
		SetMemory(0x58DC64, Add, 0xFFFFFFF0),
		SetMemory(0x58DC6C, Add, 0xFFFFFFB0),
		SetMemory(0x58DC60, Add, 0x00000400),
		SetMemory(0x58DC68, Add, 0x00000440),
		SetMemory(0x58DC64, Add, 0x00000040),
		SetMemory(0x58DC6C, Add, 0x00000080),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFC00),
		SetMemory(0x58DC68, Add, 0xFFFFFBC0),
		SetMemory(0x58DC64, Add, 0xFFFFFFC0),
		SetMemory(0x58DC6C, Add, 0xFFFFFF80),
		SetMemory(0x58DC60, Add, 0x000003A0),
		SetMemory(0x58DC68, Add, 0x000003E0),
		SetMemory(0x58DC64, Add, 0x00000070),
		SetMemory(0x58DC6C, Add, 0x000000B0),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFC60),
		SetMemory(0x58DC68, Add, 0xFFFFFC20),
		SetMemory(0x58DC64, Add, 0xFFFFFF90),
		SetMemory(0x58DC6C, Add, 0xFFFFFF50),
		SetMemory(0x58DC60, Add, 0x00000340),
		SetMemory(0x58DC68, Add, 0x00000380),
		SetMemory(0x58DC64, Add, 0x000000A0),
		SetMemory(0x58DC6C, Add, 0x000000E0),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFCC0),
		SetMemory(0x58DC68, Add, 0xFFFFFC80),
		SetMemory(0x58DC64, Add, 0xFFFFFF60),
		SetMemory(0x58DC6C, Add, 0xFFFFFF20),
		SetMemory(0x58DC60, Add, 0x000002E0),
		SetMemory(0x58DC68, Add, 0x00000320),
		SetMemory(0x58DC64, Add, 0x000000D0),
		SetMemory(0x58DC6C, Add, 0x00000110),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFD20),
		SetMemory(0x58DC68, Add, 0xFFFFFCE0),
		SetMemory(0x58DC64, Add, 0xFFFFFF30),
		SetMemory(0x58DC6C, Add, 0xFFFFFEF0),
		SetMemory(0x58DC60, Add, 0x00000280),
		SetMemory(0x58DC68, Add, 0x000002C0),
		SetMemory(0x58DC64, Add, 0x00000100),
		SetMemory(0x58DC6C, Add, 0x00000140),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFD80),
		SetMemory(0x58DC68, Add, 0xFFFFFD40),
		SetMemory(0x58DC64, Add, 0xFFFFFF00),
		SetMemory(0x58DC6C, Add, 0xFFFFFEC0),
		SetMemory(0x58DC60, Add, 0x00000220),
		SetMemory(0x58DC68, Add, 0x00000260),
		SetMemory(0x58DC64, Add, 0x00000130),
		SetMemory(0x58DC6C, Add, 0x00000170),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFDE0),
		SetMemory(0x58DC68, Add, 0xFFFFFDA0),
		SetMemory(0x58DC64, Add, 0xFFFFFED0),
		SetMemory(0x58DC6C, Add, 0xFFFFFE90),
		SetMemory(0x58DC60, Add, 0x000001C0),
		SetMemory(0x58DC68, Add, 0x00000200),
		SetMemory(0x58DC64, Add, 0x00000160),
		SetMemory(0x58DC6C, Add, 0x000001A0),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFE40),
		SetMemory(0x58DC68, Add, 0xFFFFFE00),
		SetMemory(0x58DC64, Add, 0xFFFFFEA0),
		SetMemory(0x58DC6C, Add, 0xFFFFFE60),
		SetMemory(0x58DC60, Add, 0x00000160),
		SetMemory(0x58DC68, Add, 0x000001A0),
		SetMemory(0x58DC64, Add, 0x00000190),
		SetMemory(0x58DC6C, Add, 0x000001D0),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFEA0),
		SetMemory(0x58DC68, Add, 0xFFFFFE60),
		SetMemory(0x58DC64, Add, 0xFFFFFE70),
		SetMemory(0x58DC6C, Add, 0xFFFFFE30),
		SetMemory(0x58DC60, Add, 0x00000100),
		SetMemory(0x58DC68, Add, 0x00000140),
		SetMemory(0x58DC64, Add, 0x000001C0),
		SetMemory(0x58DC6C, Add, 0x00000200),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF00),
		SetMemory(0x58DC68, Add, 0xFFFFFEC0),
		SetMemory(0x58DC64, Add, 0xFFFFFE40),
		SetMemory(0x58DC6C, Add, 0xFFFFFE00),
		SetMemory(0x58DC60, Add, 0x000000A0),
		SetMemory(0x58DC68, Add, 0x000000E0),
		SetMemory(0x58DC64, Add, 0x000001F0),
		SetMemory(0x58DC6C, Add, 0x00000230),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF60),
		SetMemory(0x58DC68, Add, 0xFFFFFF20),
		SetMemory(0x58DC64, Add, 0xFFFFFE10),
		SetMemory(0x58DC6C, Add, 0xFFFFFDD0),
		SetMemory(0x58DC60, Add, 0x00000040),
		SetMemory(0x58DC68, Add, 0x00000080),
		SetMemory(0x58DC64, Add, 0x00000220),
		SetMemory(0x58DC6C, Add, 0x00000260),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFC0),
		SetMemory(0x58DC68, Add, 0xFFFFFF80),
		SetMemory(0x58DC64, Add, 0xFFFFFDE0),
		SetMemory(0x58DC6C, Add, 0xFFFFFDA0),
		SetMemory(0x58DC60, Add, 0xFFFFFFE1),
		SetMemory(0x58DC68, Add, 0x00000020),
		SetMemory(0x58DC64, Add, 0x00000250),
		SetMemory(0x58DC6C, Add, 0x00000290),
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000001F),
		SetMemory(0x58DC68, Add, 0xFFFFFFE0),
		SetMemory(0x58DC64, Add, 0xFFFFFDB0),
		SetMemory(0x58DC6C, Add, 0xFFFFFD70),
	})




Trigger {
	players = {FP},
	conditions = {
		Label(0x201D);
	},
	actions = {
		PreserveTrigger();
	}
}



Trigger {
	players = {FP},
	conditions = {
		Label(0x201E);
	},
	actions = {
		PreserveTrigger();
	}
}

NIf(FP,Memory(0x628438,AtLeast,1))
CRead(FP,Nextptrs,0x628438,"X",0xFFFFFF,1)
CDoActions(FP,{TSetMemoryX(0x66321C, SetTo, CBHeight,0xFF)})
CDoActions(FP,{
	TSetMemory(0x58DC60 + 0x14*0,SetTo,CBX),
	TSetMemory(0x58DC68 + 0x14*0,SetTo,CBX),
	TSetMemory(0x58DC64 + 0x14*0,SetTo,_Add(CBY,10)),
	TSetMemory(0x58DC6C + 0x14*0,SetTo,_Add(CBY,10)),
	CreateUnit(1, 204, 1, FP),
	TSetMemory(_Add(Nextptrs,25),SetTo,CBUnitId)
})
CRead(FP,Locs,_Add(Nextptrs,10),"X",0xFFFFFFFF)
CDoActions(FP,{
	TSetMemoryX(_Add(Nextptrs,22),SetTo,Locs,0xFFFFFFFF),
	TSetMemoryX(_Add(Nextptrs,8),SetTo,_Mul(_Mov(CBAngle),256),0xFF00),
	TSetMemoryX(_Add(Nextptrs,19),SetTo,135*256,0xFF00)
})
NIfEnd()
Trigger {
	players = {FP},
	conditions = {
		Label(0x201F);
	},
	actions = {
		PreserveTrigger();
	}
}

Trigger {
	players = {FP},
	conditions = {
		Label(0x2020);
	},
	actions = {
		PreserveTrigger();
	}
}
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFBF);
		SetMemory(0x58DC68, Add, 0xFFFFFFFF);
		SetMemory(0x58DC64, Add, 0x00000001);
		SetMemory(0x58DC6C, Add, 0x00000041);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000041);
		SetMemory(0x58DC68, Add, 0x00000001);
		SetMemory(0x58DC64, Add, 0xFFFFFFFF);
		SetMemory(0x58DC6C, Add, 0xFFFFFFBF);
		SetMemory(0x58DC60, Add, 0xFFFFFFB0);
		SetMemory(0x58DC68, Add, 0xFFFFFFF0);
		SetMemory(0x58DC64, Add, 0xFFFFFFE1);
		SetMemory(0x58DC6C, Add, 0x00000020);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000050);
		SetMemory(0x58DC68, Add, 0x00000010);
		SetMemory(0x58DC64, Add, 0x0000001F);
		SetMemory(0x58DC6C, Add, 0xFFFFFFE0);
		SetMemory(0x58DC60, Add, 0xFFFFFFBF);
		SetMemory(0x58DC68, Add, 0xFFFFFFFF);
		SetMemory(0x58DC64, Add, 0xFFFFFFBF);
		SetMemory(0x58DC6C, Add, 0xFFFFFFFF);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000041);
		SetMemory(0x58DC68, Add, 0x00000001);
		SetMemory(0x58DC64, Add, 0x00000041);
		SetMemory(0x58DC6C, Add, 0x00000001);
		SetMemory(0x58DC60, Add, 0xFFFFFFBC);
		SetMemory(0x58DC68, Add, 0xFFFFFFFC);
		SetMemory(0x58DC64, Add, 0x00000038);
		SetMemory(0x58DC6C, Add, 0x00000078);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000044);
		SetMemory(0x58DC68, Add, 0x00000004);
		SetMemory(0x58DC64, Add, 0xFFFFFFC8);
		SetMemory(0x58DC6C, Add, 0xFFFFFF88);
		SetMemory(0x58DC60, Add, 0xFFFFFF9D);
		SetMemory(0x58DC68, Add, 0xFFFFFFDD);
		SetMemory(0x58DC64, Add, 0x00000023);
		SetMemory(0x58DC6C, Add, 0x00000063);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000063);
		SetMemory(0x58DC68, Add, 0x00000023);
		SetMemory(0x58DC64, Add, 0xFFFFFFDD);
		SetMemory(0x58DC6C, Add, 0xFFFFFF9D);
		SetMemory(0x58DC60, Add, 0xFFFFFF88);
		SetMemory(0x58DC68, Add, 0xFFFFFFC8);
		SetMemory(0x58DC64, Add, 0x00000004);
		SetMemory(0x58DC6C, Add, 0x00000044);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000078);
		SetMemory(0x58DC68, Add, 0x00000038);
		SetMemory(0x58DC64, Add, 0xFFFFFFFC);
		SetMemory(0x58DC6C, Add, 0xFFFFFFBC);
		SetMemory(0x58DC60, Add, 0xFFFFFF80);
		SetMemory(0x58DC68, Add, 0xFFFFFFC0);
		SetMemory(0x58DC64, Add, 0xFFFFFFE1);
		SetMemory(0x58DC6C, Add, 0x00000020);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000080);
		SetMemory(0x58DC68, Add, 0x00000040);
		SetMemory(0x58DC64, Add, 0x0000001F);
		SetMemory(0x58DC6C, Add, 0xFFFFFFE0);
		SetMemory(0x58DC60, Add, 0xFFFFFF88);
		SetMemory(0x58DC68, Add, 0xFFFFFFC8);
		SetMemory(0x58DC64, Add, 0xFFFFFFBC);
		SetMemory(0x58DC6C, Add, 0xFFFFFFFC);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000078);
		SetMemory(0x58DC68, Add, 0x00000038);
		SetMemory(0x58DC64, Add, 0x00000044);
		SetMemory(0x58DC6C, Add, 0x00000004);
		SetMemory(0x58DC60, Add, 0xFFFFFF9D);
		SetMemory(0x58DC68, Add, 0xFFFFFFDD);
		SetMemory(0x58DC64, Add, 0xFFFFFF9D);
		SetMemory(0x58DC6C, Add, 0xFFFFFFDD);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000063);
		SetMemory(0x58DC68, Add, 0x00000023);
		SetMemory(0x58DC64, Add, 0x00000063);
		SetMemory(0x58DC6C, Add, 0x00000023);
		SetMemory(0x58DC60, Add, 0xFFFFFFBC);
		SetMemory(0x58DC68, Add, 0xFFFFFFFC);
		SetMemory(0x58DC64, Add, 0xFFFFFF88);
		SetMemory(0x58DC6C, Add, 0xFFFFFFC8);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000044);
		SetMemory(0x58DC68, Add, 0x00000004);
		SetMemory(0x58DC64, Add, 0x00000078);
		SetMemory(0x58DC6C, Add, 0x00000038);
		SetMemory(0x58DC60, Add, 0xFFFFFFBB);
		SetMemory(0x58DC68, Add, 0xFFFFFFFB);
		SetMemory(0x58DC64, Add, 0x0000006B);
		SetMemory(0x58DC6C, Add, 0x000000AB);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000045);
		SetMemory(0x58DC68, Add, 0x00000005);
		SetMemory(0x58DC64, Add, 0xFFFFFF95);
		SetMemory(0x58DC6C, Add, 0xFFFFFF55);
		SetMemory(0x58DC60, Add, 0xFFFFFF99);
		SetMemory(0x58DC68, Add, 0xFFFFFFD9);
		SetMemory(0x58DC64, Add, 0x0000005C);
		SetMemory(0x58DC6C, Add, 0x0000009C);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000067);
		SetMemory(0x58DC68, Add, 0x00000027);
		SetMemory(0x58DC64, Add, 0xFFFFFFA4);
		SetMemory(0x58DC6C, Add, 0xFFFFFF64);
		SetMemory(0x58DC60, Add, 0xFFFFFF7B);
		SetMemory(0x58DC68, Add, 0xFFFFFFBB);
		SetMemory(0x58DC64, Add, 0x00000045);
		SetMemory(0x58DC6C, Add, 0x00000085);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000085);
		SetMemory(0x58DC68, Add, 0x00000045);
		SetMemory(0x58DC64, Add, 0xFFFFFFBB);
		SetMemory(0x58DC6C, Add, 0xFFFFFF7B);
		SetMemory(0x58DC60, Add, 0xFFFFFF64);
		SetMemory(0x58DC68, Add, 0xFFFFFFA4);
		SetMemory(0x58DC64, Add, 0x00000027);
		SetMemory(0x58DC6C, Add, 0x00000067);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000009C);
		SetMemory(0x58DC68, Add, 0x0000005C);
		SetMemory(0x58DC64, Add, 0xFFFFFFD9);
		SetMemory(0x58DC6C, Add, 0xFFFFFF99);
		SetMemory(0x58DC60, Add, 0xFFFFFF55);
		SetMemory(0x58DC68, Add, 0xFFFFFF95);
		SetMemory(0x58DC64, Add, 0x00000005);
		SetMemory(0x58DC6C, Add, 0x00000045);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000AB);
		SetMemory(0x58DC68, Add, 0x0000006B);
		SetMemory(0x58DC64, Add, 0xFFFFFFFB);
		SetMemory(0x58DC6C, Add, 0xFFFFFFBB);
		SetMemory(0x58DC60, Add, 0xFFFFFF50);
		SetMemory(0x58DC68, Add, 0xFFFFFF90);
		SetMemory(0x58DC64, Add, 0xFFFFFFE1);
		SetMemory(0x58DC6C, Add, 0x00000020);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000B0);
		SetMemory(0x58DC68, Add, 0x00000070);
		SetMemory(0x58DC64, Add, 0x0000001F);
		SetMemory(0x58DC6C, Add, 0xFFFFFFE0);
		SetMemory(0x58DC60, Add, 0xFFFFFF55);
		SetMemory(0x58DC68, Add, 0xFFFFFF95);
		SetMemory(0x58DC64, Add, 0xFFFFFFBB);
		SetMemory(0x58DC6C, Add, 0xFFFFFFFB);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000AB);
		SetMemory(0x58DC68, Add, 0x0000006B);
		SetMemory(0x58DC64, Add, 0x00000045);
		SetMemory(0x58DC6C, Add, 0x00000005);
		SetMemory(0x58DC60, Add, 0xFFFFFF64);
		SetMemory(0x58DC68, Add, 0xFFFFFFA4);
		SetMemory(0x58DC64, Add, 0xFFFFFF98);
		SetMemory(0x58DC6C, Add, 0xFFFFFFD8);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000009C);
		SetMemory(0x58DC68, Add, 0x0000005C);
		SetMemory(0x58DC64, Add, 0x00000068);
		SetMemory(0x58DC6C, Add, 0x00000028);
		SetMemory(0x58DC60, Add, 0xFFFFFF7B);
		SetMemory(0x58DC68, Add, 0xFFFFFFBB);
		SetMemory(0x58DC64, Add, 0xFFFFFF7B);
		SetMemory(0x58DC6C, Add, 0xFFFFFFBB);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000085);
		SetMemory(0x58DC68, Add, 0x00000045);
		SetMemory(0x58DC64, Add, 0x00000085);
		SetMemory(0x58DC6C, Add, 0x00000045);
		SetMemory(0x58DC60, Add, 0xFFFFFF98);
		SetMemory(0x58DC68, Add, 0xFFFFFFD8);
		SetMemory(0x58DC64, Add, 0xFFFFFF64);
		SetMemory(0x58DC6C, Add, 0xFFFFFFA4);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000068);
		SetMemory(0x58DC68, Add, 0x00000028);
		SetMemory(0x58DC64, Add, 0x0000009C);
		SetMemory(0x58DC6C, Add, 0x0000005C);
		SetMemory(0x58DC60, Add, 0xFFFFFFBB);
		SetMemory(0x58DC68, Add, 0xFFFFFFFB);
		SetMemory(0x58DC64, Add, 0xFFFFFF55);
		SetMemory(0x58DC6C, Add, 0xFFFFFF95);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000045);
		SetMemory(0x58DC68, Add, 0x00000005);
		SetMemory(0x58DC64, Add, 0x000000AB);
		SetMemory(0x58DC6C, Add, 0x0000006B);
		SetMemory(0x58DC60, Add, 0xFFFFFFBB);
		SetMemory(0x58DC68, Add, 0xFFFFFFFB);
		SetMemory(0x58DC64, Add, 0x0000009C);
		SetMemory(0x58DC6C, Add, 0x000000DC);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000045);
		SetMemory(0x58DC68, Add, 0x00000005);
		SetMemory(0x58DC64, Add, 0xFFFFFF64);
		SetMemory(0x58DC6C, Add, 0xFFFFFF24);
		SetMemory(0x58DC60, Add, 0xFFFFFF97);
		SetMemory(0x58DC68, Add, 0xFFFFFFD7);
		SetMemory(0x58DC64, Add, 0x00000091);
		SetMemory(0x58DC6C, Add, 0x000000D1);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000069);
		SetMemory(0x58DC68, Add, 0x00000029);
		SetMemory(0x58DC64, Add, 0xFFFFFF6F);
		SetMemory(0x58DC6C, Add, 0xFFFFFF2F);
		SetMemory(0x58DC60, Add, 0xFFFFFF76);
		SetMemory(0x58DC68, Add, 0xFFFFFFB6);
		SetMemory(0x58DC64, Add, 0x0000007F);
		SetMemory(0x58DC6C, Add, 0x000000BF);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000008A);
		SetMemory(0x58DC68, Add, 0x0000004A);
		SetMemory(0x58DC64, Add, 0xFFFFFF81);
		SetMemory(0x58DC6C, Add, 0xFFFFFF41);
		SetMemory(0x58DC60, Add, 0xFFFFFF59);
		SetMemory(0x58DC68, Add, 0xFFFFFF99);
		SetMemory(0x58DC64, Add, 0x00000067);
		SetMemory(0x58DC6C, Add, 0x000000A7);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000A7);
		SetMemory(0x58DC68, Add, 0x00000067);
		SetMemory(0x58DC64, Add, 0xFFFFFF99);
		SetMemory(0x58DC6C, Add, 0xFFFFFF59);
		SetMemory(0x58DC60, Add, 0xFFFFFF41);
		SetMemory(0x58DC68, Add, 0xFFFFFF81);
		SetMemory(0x58DC64, Add, 0x0000004A);
		SetMemory(0x58DC6C, Add, 0x0000008A);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000BF);
		SetMemory(0x58DC68, Add, 0x0000007F);
		SetMemory(0x58DC64, Add, 0xFFFFFFB6);
		SetMemory(0x58DC6C, Add, 0xFFFFFF76);
		SetMemory(0x58DC60, Add, 0xFFFFFF2F);
		SetMemory(0x58DC68, Add, 0xFFFFFF6F);
		SetMemory(0x58DC64, Add, 0x00000029);
		SetMemory(0x58DC6C, Add, 0x00000069);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000D1);
		SetMemory(0x58DC68, Add, 0x00000091);
		SetMemory(0x58DC64, Add, 0xFFFFFFD7);
		SetMemory(0x58DC6C, Add, 0xFFFFFF97);
		SetMemory(0x58DC60, Add, 0xFFFFFF24);
		SetMemory(0x58DC68, Add, 0xFFFFFF64);
		SetMemory(0x58DC64, Add, 0x00000005);
		SetMemory(0x58DC6C, Add, 0x00000045);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000DC);
		SetMemory(0x58DC68, Add, 0x0000009C);
		SetMemory(0x58DC64, Add, 0xFFFFFFFB);
		SetMemory(0x58DC6C, Add, 0xFFFFFFBB);
		SetMemory(0x58DC60, Add, 0xFFFFFF20);
		SetMemory(0x58DC68, Add, 0xFFFFFF60);
		SetMemory(0x58DC64, Add, 0xFFFFFFE1);
		SetMemory(0x58DC6C, Add, 0x00000020);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000E0);
		SetMemory(0x58DC68, Add, 0x000000A0);
		SetMemory(0x58DC64, Add, 0x0000001F);
		SetMemory(0x58DC6C, Add, 0xFFFFFFE0);
		SetMemory(0x58DC60, Add, 0xFFFFFF24);
		SetMemory(0x58DC68, Add, 0xFFFFFF64);
		SetMemory(0x58DC64, Add, 0xFFFFFFBB);
		SetMemory(0x58DC6C, Add, 0xFFFFFFFB);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000DC);
		SetMemory(0x58DC68, Add, 0x0000009C);
		SetMemory(0x58DC64, Add, 0x00000045);
		SetMemory(0x58DC6C, Add, 0x00000005);
		SetMemory(0x58DC60, Add, 0xFFFFFF2F);
		SetMemory(0x58DC68, Add, 0xFFFFFF6F);
		SetMemory(0x58DC64, Add, 0xFFFFFF97);
		SetMemory(0x58DC6C, Add, 0xFFFFFFD7);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000D1);
		SetMemory(0x58DC68, Add, 0x00000091);
		SetMemory(0x58DC64, Add, 0x00000069);
		SetMemory(0x58DC6C, Add, 0x00000029);
		SetMemory(0x58DC60, Add, 0xFFFFFF41);
		SetMemory(0x58DC68, Add, 0xFFFFFF81);
		SetMemory(0x58DC64, Add, 0xFFFFFF76);
		SetMemory(0x58DC6C, Add, 0xFFFFFFB6);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000BF);
		SetMemory(0x58DC68, Add, 0x0000007F);
		SetMemory(0x58DC64, Add, 0x0000008A);
		SetMemory(0x58DC6C, Add, 0x0000004A);
		SetMemory(0x58DC60, Add, 0xFFFFFF59);
		SetMemory(0x58DC68, Add, 0xFFFFFF99);
		SetMemory(0x58DC64, Add, 0xFFFFFF59);
		SetMemory(0x58DC6C, Add, 0xFFFFFF99);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000A7);
		SetMemory(0x58DC68, Add, 0x00000067);
		SetMemory(0x58DC64, Add, 0x000000A7);
		SetMemory(0x58DC6C, Add, 0x00000067);
		SetMemory(0x58DC60, Add, 0xFFFFFF76);
		SetMemory(0x58DC68, Add, 0xFFFFFFB6);
		SetMemory(0x58DC64, Add, 0xFFFFFF41);
		SetMemory(0x58DC6C, Add, 0xFFFFFF81);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000008A);
		SetMemory(0x58DC68, Add, 0x0000004A);
		SetMemory(0x58DC64, Add, 0x000000BF);
		SetMemory(0x58DC6C, Add, 0x0000007F);
		SetMemory(0x58DC60, Add, 0xFFFFFF97);
		SetMemory(0x58DC68, Add, 0xFFFFFFD7);
		SetMemory(0x58DC64, Add, 0xFFFFFF2F);
		SetMemory(0x58DC6C, Add, 0xFFFFFF6F);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000069);
		SetMemory(0x58DC68, Add, 0x00000029);
		SetMemory(0x58DC64, Add, 0x000000D1);
		SetMemory(0x58DC6C, Add, 0x00000091);
		SetMemory(0x58DC60, Add, 0xFFFFFFBB);
		SetMemory(0x58DC68, Add, 0xFFFFFFFB);
		SetMemory(0x58DC64, Add, 0xFFFFFF24);
		SetMemory(0x58DC6C, Add, 0xFFFFFF64);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000045);
		SetMemory(0x58DC68, Add, 0x00000005);
		SetMemory(0x58DC64, Add, 0x000000DC);
		SetMemory(0x58DC6C, Add, 0x0000009C);
		SetMemory(0x58DC60, Add, 0xFFFFFFBB);
		SetMemory(0x58DC68, Add, 0xFFFFFFFB);
		SetMemory(0x58DC64, Add, 0x000000CD);
		SetMemory(0x58DC6C, Add, 0x0000010D);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000045);
		SetMemory(0x58DC68, Add, 0x00000005);
		SetMemory(0x58DC64, Add, 0xFFFFFF33);
		SetMemory(0x58DC6C, Add, 0xFFFFFEF3);
		SetMemory(0x58DC60, Add, 0xFFFFFF96);
		SetMemory(0x58DC68, Add, 0xFFFFFFD6);
		SetMemory(0x58DC64, Add, 0x000000C4);
		SetMemory(0x58DC6C, Add, 0x00000104);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000006A);
		SetMemory(0x58DC68, Add, 0x0000002A);
		SetMemory(0x58DC64, Add, 0xFFFFFF3C);
		SetMemory(0x58DC6C, Add, 0xFFFFFEFC);
		SetMemory(0x58DC60, Add, 0xFFFFFF74);
		SetMemory(0x58DC68, Add, 0xFFFFFFB4);
		SetMemory(0x58DC64, Add, 0x000000B5);
		SetMemory(0x58DC6C, Add, 0x000000F5);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000008C);
		SetMemory(0x58DC68, Add, 0x0000004C);
		SetMemory(0x58DC64, Add, 0xFFFFFF4B);
		SetMemory(0x58DC6C, Add, 0xFFFFFF0B);
		SetMemory(0x58DC60, Add, 0xFFFFFF53);
		SetMemory(0x58DC68, Add, 0xFFFFFF93);
		SetMemory(0x58DC64, Add, 0x000000A2);
		SetMemory(0x58DC6C, Add, 0x000000E2);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000AD);
		SetMemory(0x58DC68, Add, 0x0000006D);
		SetMemory(0x58DC64, Add, 0xFFFFFF5E);
		SetMemory(0x58DC6C, Add, 0xFFFFFF1E);
		SetMemory(0x58DC60, Add, 0xFFFFFF37);
		SetMemory(0x58DC68, Add, 0xFFFFFF77);
		SetMemory(0x58DC64, Add, 0x00000089);
		SetMemory(0x58DC6C, Add, 0x000000C9);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000C9);
		SetMemory(0x58DC68, Add, 0x00000089);
		SetMemory(0x58DC64, Add, 0xFFFFFF77);
		SetMemory(0x58DC6C, Add, 0xFFFFFF37);
		SetMemory(0x58DC60, Add, 0xFFFFFF1E);
		SetMemory(0x58DC68, Add, 0xFFFFFF5E);
		SetMemory(0x58DC64, Add, 0x0000006D);
		SetMemory(0x58DC6C, Add, 0x000000AD);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000E2);
		SetMemory(0x58DC68, Add, 0x000000A2);
		SetMemory(0x58DC64, Add, 0xFFFFFF93);
		SetMemory(0x58DC6C, Add, 0xFFFFFF53);
		SetMemory(0x58DC60, Add, 0xFFFFFF0B);
		SetMemory(0x58DC68, Add, 0xFFFFFF4B);
		SetMemory(0x58DC64, Add, 0x0000004C);
		SetMemory(0x58DC6C, Add, 0x0000008C);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000F5);
		SetMemory(0x58DC68, Add, 0x000000B5);
		SetMemory(0x58DC64, Add, 0xFFFFFFB4);
		SetMemory(0x58DC6C, Add, 0xFFFFFF74);
		SetMemory(0x58DC60, Add, 0xFFFFFEFC);
		SetMemory(0x58DC68, Add, 0xFFFFFF3C);
		SetMemory(0x58DC64, Add, 0x0000002A);
		SetMemory(0x58DC6C, Add, 0x0000006A);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000104);
		SetMemory(0x58DC68, Add, 0x000000C4);
		SetMemory(0x58DC64, Add, 0xFFFFFFD6);
		SetMemory(0x58DC6C, Add, 0xFFFFFF96);
		SetMemory(0x58DC60, Add, 0xFFFFFEF3);
		SetMemory(0x58DC68, Add, 0xFFFFFF33);
		SetMemory(0x58DC64, Add, 0x00000005);
		SetMemory(0x58DC6C, Add, 0x00000045);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000010D);
		SetMemory(0x58DC68, Add, 0x000000CD);
		SetMemory(0x58DC64, Add, 0xFFFFFFFB);
		SetMemory(0x58DC6C, Add, 0xFFFFFFBB);
		SetMemory(0x58DC60, Add, 0xFFFFFEF0);
		SetMemory(0x58DC68, Add, 0xFFFFFF30);
		SetMemory(0x58DC64, Add, 0xFFFFFFE1);
		SetMemory(0x58DC6C, Add, 0x00000020);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000110);
		SetMemory(0x58DC68, Add, 0x000000D0);
		SetMemory(0x58DC64, Add, 0x0000001F);
		SetMemory(0x58DC6C, Add, 0xFFFFFFE0);
		SetMemory(0x58DC60, Add, 0xFFFFFEF3);
		SetMemory(0x58DC68, Add, 0xFFFFFF33);
		SetMemory(0x58DC64, Add, 0xFFFFFFBB);
		SetMemory(0x58DC6C, Add, 0xFFFFFFFB);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000010D);
		SetMemory(0x58DC68, Add, 0x000000CD);
		SetMemory(0x58DC64, Add, 0x00000045);
		SetMemory(0x58DC6C, Add, 0x00000005);
		SetMemory(0x58DC60, Add, 0xFFFFFEFC);
		SetMemory(0x58DC68, Add, 0xFFFFFF3C);
		SetMemory(0x58DC64, Add, 0xFFFFFF96);
		SetMemory(0x58DC6C, Add, 0xFFFFFFD6);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000104);
		SetMemory(0x58DC68, Add, 0x000000C4);
		SetMemory(0x58DC64, Add, 0x0000006A);
		SetMemory(0x58DC6C, Add, 0x0000002A);
		SetMemory(0x58DC60, Add, 0xFFFFFF0B);
		SetMemory(0x58DC68, Add, 0xFFFFFF4B);
		SetMemory(0x58DC64, Add, 0xFFFFFF74);
		SetMemory(0x58DC6C, Add, 0xFFFFFFB4);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000F5);
		SetMemory(0x58DC68, Add, 0x000000B5);
		SetMemory(0x58DC64, Add, 0x0000008C);
		SetMemory(0x58DC6C, Add, 0x0000004C);
		SetMemory(0x58DC60, Add, 0xFFFFFF1E);
		SetMemory(0x58DC68, Add, 0xFFFFFF5E);
		SetMemory(0x58DC64, Add, 0xFFFFFF53);
		SetMemory(0x58DC6C, Add, 0xFFFFFF93);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000E2);
		SetMemory(0x58DC68, Add, 0x000000A2);
		SetMemory(0x58DC64, Add, 0x000000AD);
		SetMemory(0x58DC6C, Add, 0x0000006D);
		SetMemory(0x58DC60, Add, 0xFFFFFF37);
		SetMemory(0x58DC68, Add, 0xFFFFFF77);
		SetMemory(0x58DC64, Add, 0xFFFFFF37);
		SetMemory(0x58DC6C, Add, 0xFFFFFF77);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000C9);
		SetMemory(0x58DC68, Add, 0x00000089);
		SetMemory(0x58DC64, Add, 0x000000C9);
		SetMemory(0x58DC6C, Add, 0x00000089);
		SetMemory(0x58DC60, Add, 0xFFFFFF53);
		SetMemory(0x58DC68, Add, 0xFFFFFF93);
		SetMemory(0x58DC64, Add, 0xFFFFFF1E);
		SetMemory(0x58DC6C, Add, 0xFFFFFF5E);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000AD);
		SetMemory(0x58DC68, Add, 0x0000006D);
		SetMemory(0x58DC64, Add, 0x000000E2);
		SetMemory(0x58DC6C, Add, 0x000000A2);
		SetMemory(0x58DC60, Add, 0xFFFFFF74);
		SetMemory(0x58DC68, Add, 0xFFFFFFB4);
		SetMemory(0x58DC64, Add, 0xFFFFFF0B);
		SetMemory(0x58DC6C, Add, 0xFFFFFF4B);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000008C);
		SetMemory(0x58DC68, Add, 0x0000004C);
		SetMemory(0x58DC64, Add, 0x000000F5);
		SetMemory(0x58DC6C, Add, 0x000000B5);
		SetMemory(0x58DC60, Add, 0xFFFFFF96);
		SetMemory(0x58DC68, Add, 0xFFFFFFD6);
		SetMemory(0x58DC64, Add, 0xFFFFFEFC);
		SetMemory(0x58DC6C, Add, 0xFFFFFF3C);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000006A);
		SetMemory(0x58DC68, Add, 0x0000002A);
		SetMemory(0x58DC64, Add, 0x00000104);
		SetMemory(0x58DC6C, Add, 0x000000C4);
		SetMemory(0x58DC60, Add, 0xFFFFFFBB);
		SetMemory(0x58DC68, Add, 0xFFFFFFFB);
		SetMemory(0x58DC64, Add, 0xFFFFFEF3);
		SetMemory(0x58DC6C, Add, 0xFFFFFF33);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000045);
		SetMemory(0x58DC68, Add, 0x00000005);
		SetMemory(0x58DC64, Add, 0x0000010D);
		SetMemory(0x58DC6C, Add, 0x000000CD);
		SetMemory(0x58DC60, Add, 0xFFFFFFBB);
		SetMemory(0x58DC68, Add, 0xFFFFFFFB);
		SetMemory(0x58DC64, Add, 0x000000FD);
		SetMemory(0x58DC6C, Add, 0x0000013D);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000045);
		SetMemory(0x58DC68, Add, 0x00000005);
		SetMemory(0x58DC64, Add, 0xFFFFFF03);
		SetMemory(0x58DC6C, Add, 0xFFFFFEC3);
		SetMemory(0x58DC60, Add, 0xFFFFFF96);
		SetMemory(0x58DC68, Add, 0xFFFFFFD6);
		SetMemory(0x58DC64, Add, 0x000000F6);
		SetMemory(0x58DC6C, Add, 0x00000136);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000006A);
		SetMemory(0x58DC68, Add, 0x0000002A);
		SetMemory(0x58DC64, Add, 0xFFFFFF0A);
		SetMemory(0x58DC6C, Add, 0xFFFFFECA);
		SetMemory(0x58DC60, Add, 0xFFFFFF72);
		SetMemory(0x58DC68, Add, 0xFFFFFFB2);
		SetMemory(0x58DC64, Add, 0x000000EA);
		SetMemory(0x58DC6C, Add, 0x0000012A);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000008E);
		SetMemory(0x58DC68, Add, 0x0000004E);
		SetMemory(0x58DC64, Add, 0xFFFFFF16);
		SetMemory(0x58DC6C, Add, 0xFFFFFED6);
		SetMemory(0x58DC60, Add, 0xFFFFFF51);
		SetMemory(0x58DC68, Add, 0xFFFFFF91);
		SetMemory(0x58DC64, Add, 0x000000D9);
		SetMemory(0x58DC6C, Add, 0x00000119);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000AF);
		SetMemory(0x58DC68, Add, 0x0000006F);
		SetMemory(0x58DC64, Add, 0xFFFFFF27);
		SetMemory(0x58DC6C, Add, 0xFFFFFEE7);
		SetMemory(0x58DC60, Add, 0xFFFFFF31);
		SetMemory(0x58DC68, Add, 0xFFFFFF71);
		SetMemory(0x58DC64, Add, 0x000000C4);
		SetMemory(0x58DC6C, Add, 0x00000104);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000CF);
		SetMemory(0x58DC68, Add, 0x0000008F);
		SetMemory(0x58DC64, Add, 0xFFFFFF3C);
		SetMemory(0x58DC6C, Add, 0xFFFFFEFC);
		SetMemory(0x58DC60, Add, 0xFFFFFF15);
		SetMemory(0x58DC68, Add, 0xFFFFFF55);
		SetMemory(0x58DC64, Add, 0x000000AB);
		SetMemory(0x58DC6C, Add, 0x000000EB);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000EB);
		SetMemory(0x58DC68, Add, 0x000000AB);
		SetMemory(0x58DC64, Add, 0xFFFFFF55);
		SetMemory(0x58DC6C, Add, 0xFFFFFF15);
		SetMemory(0x58DC60, Add, 0xFFFFFEFC);
		SetMemory(0x58DC68, Add, 0xFFFFFF3C);
		SetMemory(0x58DC64, Add, 0x0000008F);
		SetMemory(0x58DC6C, Add, 0x000000CF);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000104);
		SetMemory(0x58DC68, Add, 0x000000C4);
		SetMemory(0x58DC64, Add, 0xFFFFFF71);
		SetMemory(0x58DC6C, Add, 0xFFFFFF31);
		SetMemory(0x58DC60, Add, 0xFFFFFEE7);
		SetMemory(0x58DC68, Add, 0xFFFFFF27);
		SetMemory(0x58DC64, Add, 0x0000006F);
		SetMemory(0x58DC6C, Add, 0x000000AF);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000119);
		SetMemory(0x58DC68, Add, 0x000000D9);
		SetMemory(0x58DC64, Add, 0xFFFFFF91);
		SetMemory(0x58DC6C, Add, 0xFFFFFF51);
		SetMemory(0x58DC60, Add, 0xFFFFFED6);
		SetMemory(0x58DC68, Add, 0xFFFFFF16);
		SetMemory(0x58DC64, Add, 0x0000004E);
		SetMemory(0x58DC6C, Add, 0x0000008E);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000012A);
		SetMemory(0x58DC68, Add, 0x000000EA);
		SetMemory(0x58DC64, Add, 0xFFFFFFB2);
		SetMemory(0x58DC6C, Add, 0xFFFFFF72);
		SetMemory(0x58DC60, Add, 0xFFFFFECA);
		SetMemory(0x58DC68, Add, 0xFFFFFF0A);
		SetMemory(0x58DC64, Add, 0x0000002A);
		SetMemory(0x58DC6C, Add, 0x0000006A);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000136);
		SetMemory(0x58DC68, Add, 0x000000F6);
		SetMemory(0x58DC64, Add, 0xFFFFFFD6);
		SetMemory(0x58DC6C, Add, 0xFFFFFF96);
		SetMemory(0x58DC60, Add, 0xFFFFFEC3);
		SetMemory(0x58DC68, Add, 0xFFFFFF03);
		SetMemory(0x58DC64, Add, 0x00000005);
		SetMemory(0x58DC6C, Add, 0x00000045);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000013D);
		SetMemory(0x58DC68, Add, 0x000000FD);
		SetMemory(0x58DC64, Add, 0xFFFFFFFB);
		SetMemory(0x58DC6C, Add, 0xFFFFFFBB);
		SetMemory(0x58DC60, Add, 0xFFFFFEC0);
		SetMemory(0x58DC68, Add, 0xFFFFFF00);
		SetMemory(0x58DC64, Add, 0xFFFFFFE1);
		SetMemory(0x58DC6C, Add, 0x00000020);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000140);
		SetMemory(0x58DC68, Add, 0x00000100);
		SetMemory(0x58DC64, Add, 0x0000001F);
		SetMemory(0x58DC6C, Add, 0xFFFFFFE0);
		SetMemory(0x58DC60, Add, 0xFFFFFEC3);
		SetMemory(0x58DC68, Add, 0xFFFFFF03);
		SetMemory(0x58DC64, Add, 0xFFFFFFBB);
		SetMemory(0x58DC6C, Add, 0xFFFFFFFB);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000013D);
		SetMemory(0x58DC68, Add, 0x000000FD);
		SetMemory(0x58DC64, Add, 0x00000045);
		SetMemory(0x58DC6C, Add, 0x00000005);
		SetMemory(0x58DC60, Add, 0xFFFFFECA);
		SetMemory(0x58DC68, Add, 0xFFFFFF0A);
		SetMemory(0x58DC64, Add, 0xFFFFFF96);
		SetMemory(0x58DC6C, Add, 0xFFFFFFD6);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000136);
		SetMemory(0x58DC68, Add, 0x000000F6);
		SetMemory(0x58DC64, Add, 0x0000006A);
		SetMemory(0x58DC6C, Add, 0x0000002A);
		SetMemory(0x58DC60, Add, 0xFFFFFED6);
		SetMemory(0x58DC68, Add, 0xFFFFFF16);
		SetMemory(0x58DC64, Add, 0xFFFFFF72);
		SetMemory(0x58DC6C, Add, 0xFFFFFFB2);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000012A);
		SetMemory(0x58DC68, Add, 0x000000EA);
		SetMemory(0x58DC64, Add, 0x0000008E);
		SetMemory(0x58DC6C, Add, 0x0000004E);
		SetMemory(0x58DC60, Add, 0xFFFFFEE7);
		SetMemory(0x58DC68, Add, 0xFFFFFF27);
		SetMemory(0x58DC64, Add, 0xFFFFFF50);
		SetMemory(0x58DC6C, Add, 0xFFFFFF90);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000119);
		SetMemory(0x58DC68, Add, 0x000000D9);
		SetMemory(0x58DC64, Add, 0x000000B0);
		SetMemory(0x58DC6C, Add, 0x00000070);
		SetMemory(0x58DC60, Add, 0xFFFFFEFC);
		SetMemory(0x58DC68, Add, 0xFFFFFF3C);
		SetMemory(0x58DC64, Add, 0xFFFFFF31);
		SetMemory(0x58DC6C, Add, 0xFFFFFF71);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000104);
		SetMemory(0x58DC68, Add, 0x000000C4);
		SetMemory(0x58DC64, Add, 0x000000CF);
		SetMemory(0x58DC6C, Add, 0x0000008F);
		SetMemory(0x58DC60, Add, 0xFFFFFF15);
		SetMemory(0x58DC68, Add, 0xFFFFFF55);
		SetMemory(0x58DC64, Add, 0xFFFFFF15);
		SetMemory(0x58DC6C, Add, 0xFFFFFF55);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000EB);
		SetMemory(0x58DC68, Add, 0x000000AB);
		SetMemory(0x58DC64, Add, 0x000000EB);
		SetMemory(0x58DC6C, Add, 0x000000AB);
		SetMemory(0x58DC60, Add, 0xFFFFFF31);
		SetMemory(0x58DC68, Add, 0xFFFFFF71);
		SetMemory(0x58DC64, Add, 0xFFFFFEFC);
		SetMemory(0x58DC6C, Add, 0xFFFFFF3C);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000CF);
		SetMemory(0x58DC68, Add, 0x0000008F);
		SetMemory(0x58DC64, Add, 0x00000104);
		SetMemory(0x58DC6C, Add, 0x000000C4);
		SetMemory(0x58DC60, Add, 0xFFFFFF50);
		SetMemory(0x58DC68, Add, 0xFFFFFF90);
		SetMemory(0x58DC64, Add, 0xFFFFFEE7);
		SetMemory(0x58DC6C, Add, 0xFFFFFF27);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000B0);
		SetMemory(0x58DC68, Add, 0x00000070);
		SetMemory(0x58DC64, Add, 0x00000119);
		SetMemory(0x58DC6C, Add, 0x000000D9);
		SetMemory(0x58DC60, Add, 0xFFFFFF72);
		SetMemory(0x58DC68, Add, 0xFFFFFFB2);
		SetMemory(0x58DC64, Add, 0xFFFFFED6);
		SetMemory(0x58DC6C, Add, 0xFFFFFF16);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000008E);
		SetMemory(0x58DC68, Add, 0x0000004E);
		SetMemory(0x58DC64, Add, 0x0000012A);
		SetMemory(0x58DC6C, Add, 0x000000EA);
		SetMemory(0x58DC60, Add, 0xFFFFFF96);
		SetMemory(0x58DC68, Add, 0xFFFFFFD6);
		SetMemory(0x58DC64, Add, 0xFFFFFECA);
		SetMemory(0x58DC6C, Add, 0xFFFFFF0A);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000006A);
		SetMemory(0x58DC68, Add, 0x0000002A);
		SetMemory(0x58DC64, Add, 0x00000136);
		SetMemory(0x58DC6C, Add, 0x000000F6);
		SetMemory(0x58DC60, Add, 0xFFFFFFBB);
		SetMemory(0x58DC68, Add, 0xFFFFFFFB);
		SetMemory(0x58DC64, Add, 0xFFFFFEC3);
		SetMemory(0x58DC6C, Add, 0xFFFFFF03);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000045);
		SetMemory(0x58DC68, Add, 0x00000005);
		SetMemory(0x58DC64, Add, 0x0000013D);
		SetMemory(0x58DC6C, Add, 0x000000FD);
		SetMemory(0x58DC60, Add, 0xFFFFFFBB);
		SetMemory(0x58DC68, Add, 0xFFFFFFFB);
		SetMemory(0x58DC64, Add, 0x0000012D);
		SetMemory(0x58DC6C, Add, 0x0000016D);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000045);
		SetMemory(0x58DC68, Add, 0x00000005);
		SetMemory(0x58DC64, Add, 0xFFFFFED3);
		SetMemory(0x58DC6C, Add, 0xFFFFFE93);
		SetMemory(0x58DC60, Add, 0xFFFFFF96);
		SetMemory(0x58DC68, Add, 0xFFFFFFD6);
		SetMemory(0x58DC64, Add, 0x00000127);
		SetMemory(0x58DC6C, Add, 0x00000167);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000006A);
		SetMemory(0x58DC68, Add, 0x0000002A);
		SetMemory(0x58DC64, Add, 0xFFFFFED9);
		SetMemory(0x58DC6C, Add, 0xFFFFFE99);
		SetMemory(0x58DC60, Add, 0xFFFFFF72);
		SetMemory(0x58DC68, Add, 0xFFFFFFB2);
		SetMemory(0x58DC64, Add, 0x0000011D);
		SetMemory(0x58DC6C, Add, 0x0000015D);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000008E);
		SetMemory(0x58DC68, Add, 0x0000004E);
		SetMemory(0x58DC64, Add, 0xFFFFFEE3);
		SetMemory(0x58DC6C, Add, 0xFFFFFEA3);
		SetMemory(0x58DC60, Add, 0xFFFFFF4F);
		SetMemory(0x58DC68, Add, 0xFFFFFF8F);
		SetMemory(0x58DC64, Add, 0x0000010E);
		SetMemory(0x58DC6C, Add, 0x0000014E);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000B1);
		SetMemory(0x58DC68, Add, 0x00000071);
		SetMemory(0x58DC64, Add, 0xFFFFFEF2);
		SetMemory(0x58DC6C, Add, 0xFFFFFEB2);
		SetMemory(0x58DC60, Add, 0xFFFFFF2E);
		SetMemory(0x58DC68, Add, 0xFFFFFF6E);
		SetMemory(0x58DC64, Add, 0x000000FC);
		SetMemory(0x58DC6C, Add, 0x0000013C);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000D2);
		SetMemory(0x58DC68, Add, 0x00000092);
		SetMemory(0x58DC64, Add, 0xFFFFFF04);
		SetMemory(0x58DC6C, Add, 0xFFFFFEC4);
		SetMemory(0x58DC60, Add, 0xFFFFFF0F);
		SetMemory(0x58DC68, Add, 0xFFFFFF4F);
		SetMemory(0x58DC64, Add, 0x000000E6);
		SetMemory(0x58DC6C, Add, 0x00000126);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000F1);
		SetMemory(0x58DC68, Add, 0x000000B1);
		SetMemory(0x58DC64, Add, 0xFFFFFF1A);
		SetMemory(0x58DC6C, Add, 0xFFFFFEDA);
		SetMemory(0x58DC60, Add, 0xFFFFFEF3);
		SetMemory(0x58DC68, Add, 0xFFFFFF33);
		SetMemory(0x58DC64, Add, 0x000000CD);
		SetMemory(0x58DC6C, Add, 0x0000010D);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000010D);
		SetMemory(0x58DC68, Add, 0x000000CD);
		SetMemory(0x58DC64, Add, 0xFFFFFF33);
		SetMemory(0x58DC6C, Add, 0xFFFFFEF3);
		SetMemory(0x58DC60, Add, 0xFFFFFEDA);
		SetMemory(0x58DC68, Add, 0xFFFFFF1A);
		SetMemory(0x58DC64, Add, 0x000000B1);
		SetMemory(0x58DC6C, Add, 0x000000F1);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000126);
		SetMemory(0x58DC68, Add, 0x000000E6);
		SetMemory(0x58DC64, Add, 0xFFFFFF4F);
		SetMemory(0x58DC6C, Add, 0xFFFFFF0F);
		SetMemory(0x58DC60, Add, 0xFFFFFEC4);
		SetMemory(0x58DC68, Add, 0xFFFFFF04);
		SetMemory(0x58DC64, Add, 0x00000092);
		SetMemory(0x58DC6C, Add, 0x000000D2);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000013C);
		SetMemory(0x58DC68, Add, 0x000000FC);
		SetMemory(0x58DC64, Add, 0xFFFFFF6E);
		SetMemory(0x58DC6C, Add, 0xFFFFFF2E);
		SetMemory(0x58DC60, Add, 0xFFFFFEB2);
		SetMemory(0x58DC68, Add, 0xFFFFFEF2);
		SetMemory(0x58DC64, Add, 0x00000071);
		SetMemory(0x58DC6C, Add, 0x000000B1);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000014E);
		SetMemory(0x58DC68, Add, 0x0000010E);
		SetMemory(0x58DC64, Add, 0xFFFFFF8F);
		SetMemory(0x58DC6C, Add, 0xFFFFFF4F);
		SetMemory(0x58DC60, Add, 0xFFFFFEA3);
		SetMemory(0x58DC68, Add, 0xFFFFFEE3);
		SetMemory(0x58DC64, Add, 0x0000004E);
		SetMemory(0x58DC6C, Add, 0x0000008E);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000015D);
		SetMemory(0x58DC68, Add, 0x0000011D);
		SetMemory(0x58DC64, Add, 0xFFFFFFB2);
		SetMemory(0x58DC6C, Add, 0xFFFFFF72);
		SetMemory(0x58DC60, Add, 0xFFFFFE99);
		SetMemory(0x58DC68, Add, 0xFFFFFED9);
		SetMemory(0x58DC64, Add, 0x0000002A);
		SetMemory(0x58DC6C, Add, 0x0000006A);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000167);
		SetMemory(0x58DC68, Add, 0x00000127);
		SetMemory(0x58DC64, Add, 0xFFFFFFD6);
		SetMemory(0x58DC6C, Add, 0xFFFFFF96);
		SetMemory(0x58DC60, Add, 0xFFFFFE93);
		SetMemory(0x58DC68, Add, 0xFFFFFED3);
		SetMemory(0x58DC64, Add, 0x00000005);
		SetMemory(0x58DC6C, Add, 0x00000045);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000016D);
		SetMemory(0x58DC68, Add, 0x0000012D);
		SetMemory(0x58DC64, Add, 0xFFFFFFFB);
		SetMemory(0x58DC6C, Add, 0xFFFFFFBB);
		SetMemory(0x58DC60, Add, 0xFFFFFE90);
		SetMemory(0x58DC68, Add, 0xFFFFFED0);
		SetMemory(0x58DC64, Add, 0xFFFFFFE1);
		SetMemory(0x58DC6C, Add, 0x00000020);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000170);
		SetMemory(0x58DC68, Add, 0x00000130);
		SetMemory(0x58DC64, Add, 0x0000001F);
		SetMemory(0x58DC6C, Add, 0xFFFFFFE0);
		SetMemory(0x58DC60, Add, 0xFFFFFE93);
		SetMemory(0x58DC68, Add, 0xFFFFFED3);
		SetMemory(0x58DC64, Add, 0xFFFFFFBB);
		SetMemory(0x58DC6C, Add, 0xFFFFFFFB);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000016D);
		SetMemory(0x58DC68, Add, 0x0000012D);
		SetMemory(0x58DC64, Add, 0x00000045);
		SetMemory(0x58DC6C, Add, 0x00000005);
		SetMemory(0x58DC60, Add, 0xFFFFFE99);
		SetMemory(0x58DC68, Add, 0xFFFFFED9);
		SetMemory(0x58DC64, Add, 0xFFFFFF96);
		SetMemory(0x58DC6C, Add, 0xFFFFFFD6);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000167);
		SetMemory(0x58DC68, Add, 0x00000127);
		SetMemory(0x58DC64, Add, 0x0000006A);
		SetMemory(0x58DC6C, Add, 0x0000002A);
		SetMemory(0x58DC60, Add, 0xFFFFFEA3);
		SetMemory(0x58DC68, Add, 0xFFFFFEE3);
		SetMemory(0x58DC64, Add, 0xFFFFFF72);
		SetMemory(0x58DC6C, Add, 0xFFFFFFB2);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000015D);
		SetMemory(0x58DC68, Add, 0x0000011D);
		SetMemory(0x58DC64, Add, 0x0000008E);
		SetMemory(0x58DC6C, Add, 0x0000004E);
		SetMemory(0x58DC60, Add, 0xFFFFFEB2);
		SetMemory(0x58DC68, Add, 0xFFFFFEF2);
		SetMemory(0x58DC64, Add, 0xFFFFFF4F);
		SetMemory(0x58DC6C, Add, 0xFFFFFF8F);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000014E);
		SetMemory(0x58DC68, Add, 0x0000010E);
		SetMemory(0x58DC64, Add, 0x000000B1);
		SetMemory(0x58DC6C, Add, 0x00000071);
		SetMemory(0x58DC60, Add, 0xFFFFFEC4);
		SetMemory(0x58DC68, Add, 0xFFFFFF04);
		SetMemory(0x58DC64, Add, 0xFFFFFF2E);
		SetMemory(0x58DC6C, Add, 0xFFFFFF6E);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000013C);
		SetMemory(0x58DC68, Add, 0x000000FC);
		SetMemory(0x58DC64, Add, 0x000000D2);
		SetMemory(0x58DC6C, Add, 0x00000092);
		SetMemory(0x58DC60, Add, 0xFFFFFEDA);
		SetMemory(0x58DC68, Add, 0xFFFFFF1A);
		SetMemory(0x58DC64, Add, 0xFFFFFF0F);
		SetMemory(0x58DC6C, Add, 0xFFFFFF4F);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000126);
		SetMemory(0x58DC68, Add, 0x000000E6);
		SetMemory(0x58DC64, Add, 0x000000F1);
		SetMemory(0x58DC6C, Add, 0x000000B1);
		SetMemory(0x58DC60, Add, 0xFFFFFEF3);
		SetMemory(0x58DC68, Add, 0xFFFFFF33);
		SetMemory(0x58DC64, Add, 0xFFFFFEF3);
		SetMemory(0x58DC6C, Add, 0xFFFFFF33);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000010D);
		SetMemory(0x58DC68, Add, 0x000000CD);
		SetMemory(0x58DC64, Add, 0x0000010D);
		SetMemory(0x58DC6C, Add, 0x000000CD);
		SetMemory(0x58DC60, Add, 0xFFFFFF0F);
		SetMemory(0x58DC68, Add, 0xFFFFFF4F);
		SetMemory(0x58DC64, Add, 0xFFFFFEDA);
		SetMemory(0x58DC6C, Add, 0xFFFFFF1A);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000F1);
		SetMemory(0x58DC68, Add, 0x000000B1);
		SetMemory(0x58DC64, Add, 0x00000126);
		SetMemory(0x58DC6C, Add, 0x000000E6);
		SetMemory(0x58DC60, Add, 0xFFFFFF2E);
		SetMemory(0x58DC68, Add, 0xFFFFFF6E);
		SetMemory(0x58DC64, Add, 0xFFFFFEC4);
		SetMemory(0x58DC6C, Add, 0xFFFFFF04);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000D2);
		SetMemory(0x58DC68, Add, 0x00000092);
		SetMemory(0x58DC64, Add, 0x0000013C);
		SetMemory(0x58DC6C, Add, 0x000000FC);
		SetMemory(0x58DC60, Add, 0xFFFFFF4F);
		SetMemory(0x58DC68, Add, 0xFFFFFF8F);
		SetMemory(0x58DC64, Add, 0xFFFFFEB2);
		SetMemory(0x58DC6C, Add, 0xFFFFFEF2);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000B1);
		SetMemory(0x58DC68, Add, 0x00000071);
		SetMemory(0x58DC64, Add, 0x0000014E);
		SetMemory(0x58DC6C, Add, 0x0000010E);
		SetMemory(0x58DC60, Add, 0xFFFFFF72);
		SetMemory(0x58DC68, Add, 0xFFFFFFB2);
		SetMemory(0x58DC64, Add, 0xFFFFFEA3);
		SetMemory(0x58DC6C, Add, 0xFFFFFEE3);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000008E);
		SetMemory(0x58DC68, Add, 0x0000004E);
		SetMemory(0x58DC64, Add, 0x0000015D);
		SetMemory(0x58DC6C, Add, 0x0000011D);
		SetMemory(0x58DC60, Add, 0xFFFFFF96);
		SetMemory(0x58DC68, Add, 0xFFFFFFD6);
		SetMemory(0x58DC64, Add, 0xFFFFFE99);
		SetMemory(0x58DC6C, Add, 0xFFFFFED9);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000006A);
		SetMemory(0x58DC68, Add, 0x0000002A);
		SetMemory(0x58DC64, Add, 0x00000167);
		SetMemory(0x58DC6C, Add, 0x00000127);
		SetMemory(0x58DC60, Add, 0xFFFFFFBB);
		SetMemory(0x58DC68, Add, 0xFFFFFFFB);
		SetMemory(0x58DC64, Add, 0xFFFFFE93);
		SetMemory(0x58DC6C, Add, 0xFFFFFED3);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000045);
		SetMemory(0x58DC68, Add, 0x00000005);
		SetMemory(0x58DC64, Add, 0x0000016D);
		SetMemory(0x58DC6C, Add, 0x0000012D);
		SetMemory(0x58DC60, Add, 0xFFFFFFBB);
		SetMemory(0x58DC68, Add, 0xFFFFFFFB);
		SetMemory(0x58DC64, Add, 0x0000015E);
		SetMemory(0x58DC6C, Add, 0x0000019E);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000045);
		SetMemory(0x58DC68, Add, 0x00000005);
		SetMemory(0x58DC64, Add, 0xFFFFFEA2);
		SetMemory(0x58DC6C, Add, 0xFFFFFE62);
		SetMemory(0x58DC60, Add, 0xFFFFFF96);
		SetMemory(0x58DC68, Add, 0xFFFFFFD6);
		SetMemory(0x58DC64, Add, 0x00000158);
		SetMemory(0x58DC6C, Add, 0x00000198);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000006A);
		SetMemory(0x58DC68, Add, 0x0000002A);
		SetMemory(0x58DC64, Add, 0xFFFFFEA8);
		SetMemory(0x58DC6C, Add, 0xFFFFFE68);
		SetMemory(0x58DC60, Add, 0xFFFFFF71);
		SetMemory(0x58DC68, Add, 0xFFFFFFB1);
		SetMemory(0x58DC64, Add, 0x0000014F);
		SetMemory(0x58DC6C, Add, 0x0000018F);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000008F);
		SetMemory(0x58DC68, Add, 0x0000004F);
		SetMemory(0x58DC64, Add, 0xFFFFFEB1);
		SetMemory(0x58DC6C, Add, 0xFFFFFE71);
		SetMemory(0x58DC60, Add, 0xFFFFFF4E);
		SetMemory(0x58DC68, Add, 0xFFFFFF8E);
		SetMemory(0x58DC64, Add, 0x00000142);
		SetMemory(0x58DC6C, Add, 0x00000182);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000B2);
		SetMemory(0x58DC68, Add, 0x00000072);
		SetMemory(0x58DC64, Add, 0xFFFFFEBE);
		SetMemory(0x58DC6C, Add, 0xFFFFFE7E);
		SetMemory(0x58DC60, Add, 0xFFFFFF2B);
		SetMemory(0x58DC68, Add, 0xFFFFFF6B);
		SetMemory(0x58DC64, Add, 0x00000132);
		SetMemory(0x58DC6C, Add, 0x00000172);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000D5);
		SetMemory(0x58DC68, Add, 0x00000095);
		SetMemory(0x58DC64, Add, 0xFFFFFECE);
		SetMemory(0x58DC6C, Add, 0xFFFFFE8E);
		SetMemory(0x58DC60, Add, 0xFFFFFF0B);
		SetMemory(0x58DC68, Add, 0xFFFFFF4B);
		SetMemory(0x58DC64, Add, 0x0000011F);
		SetMemory(0x58DC6C, Add, 0x0000015F);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000F5);
		SetMemory(0x58DC68, Add, 0x000000B5);
		SetMemory(0x58DC64, Add, 0xFFFFFEE1);
		SetMemory(0x58DC6C, Add, 0xFFFFFEA1);
		SetMemory(0x58DC60, Add, 0xFFFFFEED);
		SetMemory(0x58DC68, Add, 0xFFFFFF2D);
		SetMemory(0x58DC64, Add, 0x00000108);
		SetMemory(0x58DC6C, Add, 0x00000148);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000113);
		SetMemory(0x58DC68, Add, 0x000000D3);
		SetMemory(0x58DC64, Add, 0xFFFFFEF8);
		SetMemory(0x58DC6C, Add, 0xFFFFFEB8);
		SetMemory(0x58DC60, Add, 0xFFFFFED1);
		SetMemory(0x58DC68, Add, 0xFFFFFF11);
		SetMemory(0x58DC64, Add, 0x000000EF);
		SetMemory(0x58DC6C, Add, 0x0000012F);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000012F);
		SetMemory(0x58DC68, Add, 0x000000EF);
		SetMemory(0x58DC64, Add, 0xFFFFFF11);
		SetMemory(0x58DC6C, Add, 0xFFFFFED1);
		SetMemory(0x58DC60, Add, 0xFFFFFEB8);
		SetMemory(0x58DC68, Add, 0xFFFFFEF8);
		SetMemory(0x58DC64, Add, 0x000000D3);
		SetMemory(0x58DC6C, Add, 0x00000113);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000148);
		SetMemory(0x58DC68, Add, 0x00000108);
		SetMemory(0x58DC64, Add, 0xFFFFFF2D);
		SetMemory(0x58DC6C, Add, 0xFFFFFEED);
		SetMemory(0x58DC60, Add, 0xFFFFFEA1);
		SetMemory(0x58DC68, Add, 0xFFFFFEE1);
		SetMemory(0x58DC64, Add, 0x000000B5);
		SetMemory(0x58DC6C, Add, 0x000000F5);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000015F);
		SetMemory(0x58DC68, Add, 0x0000011F);
		SetMemory(0x58DC64, Add, 0xFFFFFF4B);
		SetMemory(0x58DC6C, Add, 0xFFFFFF0B);
		SetMemory(0x58DC60, Add, 0xFFFFFE8E);
		SetMemory(0x58DC68, Add, 0xFFFFFECE);
		SetMemory(0x58DC64, Add, 0x00000095);
		SetMemory(0x58DC6C, Add, 0x000000D5);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000172);
		SetMemory(0x58DC68, Add, 0x00000132);
		SetMemory(0x58DC64, Add, 0xFFFFFF6B);
		SetMemory(0x58DC6C, Add, 0xFFFFFF2B);
		SetMemory(0x58DC60, Add, 0xFFFFFE7E);
		SetMemory(0x58DC68, Add, 0xFFFFFEBE);
		SetMemory(0x58DC64, Add, 0x00000072);
		SetMemory(0x58DC6C, Add, 0x000000B2);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000182);
		SetMemory(0x58DC68, Add, 0x00000142);
		SetMemory(0x58DC64, Add, 0xFFFFFF8E);
		SetMemory(0x58DC6C, Add, 0xFFFFFF4E);
		SetMemory(0x58DC60, Add, 0xFFFFFE71);
		SetMemory(0x58DC68, Add, 0xFFFFFEB1);
		SetMemory(0x58DC64, Add, 0x0000004F);
		SetMemory(0x58DC6C, Add, 0x0000008F);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000018F);
		SetMemory(0x58DC68, Add, 0x0000014F);
		SetMemory(0x58DC64, Add, 0xFFFFFFB1);
		SetMemory(0x58DC6C, Add, 0xFFFFFF71);
		SetMemory(0x58DC60, Add, 0xFFFFFE68);
		SetMemory(0x58DC68, Add, 0xFFFFFEA8);
		SetMemory(0x58DC64, Add, 0x0000002A);
		SetMemory(0x58DC6C, Add, 0x0000006A);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000198);
		SetMemory(0x58DC68, Add, 0x00000158);
		SetMemory(0x58DC64, Add, 0xFFFFFFD6);
		SetMemory(0x58DC6C, Add, 0xFFFFFF96);
		SetMemory(0x58DC60, Add, 0xFFFFFE62);
		SetMemory(0x58DC68, Add, 0xFFFFFEA2);
		SetMemory(0x58DC64, Add, 0x00000005);
		SetMemory(0x58DC6C, Add, 0x00000045);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000019E);
		SetMemory(0x58DC68, Add, 0x0000015E);
		SetMemory(0x58DC64, Add, 0xFFFFFFFB);
		SetMemory(0x58DC6C, Add, 0xFFFFFFBB);
		SetMemory(0x58DC60, Add, 0xFFFFFE60);
		SetMemory(0x58DC68, Add, 0xFFFFFEA0);
		SetMemory(0x58DC64, Add, 0xFFFFFFE1);
		SetMemory(0x58DC6C, Add, 0x00000020);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000001A0);
		SetMemory(0x58DC68, Add, 0x00000160);
		SetMemory(0x58DC64, Add, 0x0000001F);
		SetMemory(0x58DC6C, Add, 0xFFFFFFE0);
		SetMemory(0x58DC60, Add, 0xFFFFFE62);
		SetMemory(0x58DC68, Add, 0xFFFFFEA2);
		SetMemory(0x58DC64, Add, 0xFFFFFFBB);
		SetMemory(0x58DC6C, Add, 0xFFFFFFFB);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000019E);
		SetMemory(0x58DC68, Add, 0x0000015E);
		SetMemory(0x58DC64, Add, 0x00000045);
		SetMemory(0x58DC6C, Add, 0x00000005);
		SetMemory(0x58DC60, Add, 0xFFFFFE68);
		SetMemory(0x58DC68, Add, 0xFFFFFEA8);
		SetMemory(0x58DC64, Add, 0xFFFFFF96);
		SetMemory(0x58DC6C, Add, 0xFFFFFFD6);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000198);
		SetMemory(0x58DC68, Add, 0x00000158);
		SetMemory(0x58DC64, Add, 0x0000006A);
		SetMemory(0x58DC6C, Add, 0x0000002A);
		SetMemory(0x58DC60, Add, 0xFFFFFE71);
		SetMemory(0x58DC68, Add, 0xFFFFFEB1);
		SetMemory(0x58DC64, Add, 0xFFFFFF71);
		SetMemory(0x58DC6C, Add, 0xFFFFFFB1);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000018F);
		SetMemory(0x58DC68, Add, 0x0000014F);
		SetMemory(0x58DC64, Add, 0x0000008F);
		SetMemory(0x58DC6C, Add, 0x0000004F);
		SetMemory(0x58DC60, Add, 0xFFFFFE7E);
		SetMemory(0x58DC68, Add, 0xFFFFFEBE);
		SetMemory(0x58DC64, Add, 0xFFFFFF4E);
		SetMemory(0x58DC6C, Add, 0xFFFFFF8E);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000182);
		SetMemory(0x58DC68, Add, 0x00000142);
		SetMemory(0x58DC64, Add, 0x000000B2);
		SetMemory(0x58DC6C, Add, 0x00000072);
		SetMemory(0x58DC60, Add, 0xFFFFFE8E);
		SetMemory(0x58DC68, Add, 0xFFFFFECE);
		SetMemory(0x58DC64, Add, 0xFFFFFF2B);
		SetMemory(0x58DC6C, Add, 0xFFFFFF6B);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000172);
		SetMemory(0x58DC68, Add, 0x00000132);
		SetMemory(0x58DC64, Add, 0x000000D5);
		SetMemory(0x58DC6C, Add, 0x00000095);
		SetMemory(0x58DC60, Add, 0xFFFFFEA1);
		SetMemory(0x58DC68, Add, 0xFFFFFEE1);
		SetMemory(0x58DC64, Add, 0xFFFFFF0B);
		SetMemory(0x58DC6C, Add, 0xFFFFFF4B);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000015F);
		SetMemory(0x58DC68, Add, 0x0000011F);
		SetMemory(0x58DC64, Add, 0x000000F5);
		SetMemory(0x58DC6C, Add, 0x000000B5);
		SetMemory(0x58DC60, Add, 0xFFFFFEB8);
		SetMemory(0x58DC68, Add, 0xFFFFFEF8);
		SetMemory(0x58DC64, Add, 0xFFFFFEED);
		SetMemory(0x58DC6C, Add, 0xFFFFFF2D);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000148);
		SetMemory(0x58DC68, Add, 0x00000108);
		SetMemory(0x58DC64, Add, 0x00000113);
		SetMemory(0x58DC6C, Add, 0x000000D3);
		SetMemory(0x58DC60, Add, 0xFFFFFED1);
		SetMemory(0x58DC68, Add, 0xFFFFFF11);
		SetMemory(0x58DC64, Add, 0xFFFFFED1);
		SetMemory(0x58DC6C, Add, 0xFFFFFF11);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000012F);
		SetMemory(0x58DC68, Add, 0x000000EF);
		SetMemory(0x58DC64, Add, 0x0000012F);
		SetMemory(0x58DC6C, Add, 0x000000EF);
		SetMemory(0x58DC60, Add, 0xFFFFFEED);
		SetMemory(0x58DC68, Add, 0xFFFFFF2D);
		SetMemory(0x58DC64, Add, 0xFFFFFEB8);
		SetMemory(0x58DC6C, Add, 0xFFFFFEF8);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000113);
		SetMemory(0x58DC68, Add, 0x000000D3);
		SetMemory(0x58DC64, Add, 0x00000148);
		SetMemory(0x58DC6C, Add, 0x00000108);
		SetMemory(0x58DC60, Add, 0xFFFFFF0B);
		SetMemory(0x58DC68, Add, 0xFFFFFF4B);
		SetMemory(0x58DC64, Add, 0xFFFFFEA1);
		SetMemory(0x58DC6C, Add, 0xFFFFFEE1);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000F5);
		SetMemory(0x58DC68, Add, 0x000000B5);
		SetMemory(0x58DC64, Add, 0x0000015F);
		SetMemory(0x58DC6C, Add, 0x0000011F);
		SetMemory(0x58DC60, Add, 0xFFFFFF2B);
		SetMemory(0x58DC68, Add, 0xFFFFFF6B);
		SetMemory(0x58DC64, Add, 0xFFFFFE8E);
		SetMemory(0x58DC6C, Add, 0xFFFFFECE);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000D5);
		SetMemory(0x58DC68, Add, 0x00000095);
		SetMemory(0x58DC64, Add, 0x00000172);
		SetMemory(0x58DC6C, Add, 0x00000132);
		SetMemory(0x58DC60, Add, 0xFFFFFF4E);
		SetMemory(0x58DC68, Add, 0xFFFFFF8E);
		SetMemory(0x58DC64, Add, 0xFFFFFE7E);
		SetMemory(0x58DC6C, Add, 0xFFFFFEBE);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000B2);
		SetMemory(0x58DC68, Add, 0x00000072);
		SetMemory(0x58DC64, Add, 0x00000182);
		SetMemory(0x58DC6C, Add, 0x00000142);
		SetMemory(0x58DC60, Add, 0xFFFFFF71);
		SetMemory(0x58DC68, Add, 0xFFFFFFB1);
		SetMemory(0x58DC64, Add, 0xFFFFFE71);
		SetMemory(0x58DC6C, Add, 0xFFFFFEB1);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000008F);
		SetMemory(0x58DC68, Add, 0x0000004F);
		SetMemory(0x58DC64, Add, 0x0000018F);
		SetMemory(0x58DC6C, Add, 0x0000014F);
		SetMemory(0x58DC60, Add, 0xFFFFFF96);
		SetMemory(0x58DC68, Add, 0xFFFFFFD6);
		SetMemory(0x58DC64, Add, 0xFFFFFE68);
		SetMemory(0x58DC6C, Add, 0xFFFFFEA8);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000006A);
		SetMemory(0x58DC68, Add, 0x0000002A);
		SetMemory(0x58DC64, Add, 0x00000198);
		SetMemory(0x58DC6C, Add, 0x00000158);
		SetMemory(0x58DC60, Add, 0xFFFFFFBB);
		SetMemory(0x58DC68, Add, 0xFFFFFFFB);
		SetMemory(0x58DC64, Add, 0xFFFFFE62);
		SetMemory(0x58DC6C, Add, 0xFFFFFEA2);
		Call_UnitIDVOvr
	})
DoActions(FP,{
		SetMemory(0x58DC60, Add, 0x00000045);
		SetMemory(0x58DC68, Add, 0x00000005);
		SetMemory(0x58DC64, Add, 0x0000019E);
		SetMemory(0x58DC6C, Add, 0x0000015E);
	})


Trigger {
	players = {FP},
	conditions = {
		Label(0x2021);
	},
	actions = {
		PreserveTrigger();
	}
}

Trigger {
	players = {FP},
	conditions = {
		Label(0x2022);
	},
	actions = {
		PreserveTrigger();
	}
}
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFA5);
		SetMemory(0x58DC68, Add, 0xFFFFFFE5);
		SetMemory(0x58DC64, Add, 0x0000001B);
		SetMemory(0x58DC6C, Add, 0x0000005B);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000005B);
		SetMemory(0x58DC68, Add, 0x0000001B);
		SetMemory(0x58DC64, Add, 0xFFFFFFE5);
		SetMemory(0x58DC6C, Add, 0xFFFFFFA5);
		SetMemory(0x58DC60, Add, 0xFFFFFF8C);
		SetMemory(0x58DC68, Add, 0xFFFFFFCC);
		SetMemory(0x58DC64, Add, 0xFFFFFFE1);
		SetMemory(0x58DC6C, Add, 0x00000020);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000074);
		SetMemory(0x58DC68, Add, 0x00000034);
		SetMemory(0x58DC64, Add, 0x0000001F);
		SetMemory(0x58DC6C, Add, 0xFFFFFFE0);
		SetMemory(0x58DC60, Add, 0xFFFFFFA5);
		SetMemory(0x58DC68, Add, 0xFFFFFFE5);
		SetMemory(0x58DC64, Add, 0xFFFFFFA5);
		SetMemory(0x58DC6C, Add, 0xFFFFFFE5);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000005B);
		SetMemory(0x58DC68, Add, 0x0000001B);
		SetMemory(0x58DC64, Add, 0x0000005B);
		SetMemory(0x58DC6C, Add, 0x0000001B);
		SetMemory(0x58DC60, Add, 0xFFFFFFA0);
		SetMemory(0x58DC68, Add, 0xFFFFFFE0);
		SetMemory(0x58DC64, Add, 0x0000007B);
		SetMemory(0x58DC6C, Add, 0x000000BB);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000060);
		SetMemory(0x58DC68, Add, 0x00000020);
		SetMemory(0x58DC64, Add, 0xFFFFFF85);
		SetMemory(0x58DC6C, Add, 0xFFFFFF45);
		SetMemory(0x58DC60, Add, 0xFFFFFF6A);
		SetMemory(0x58DC68, Add, 0xFFFFFFAA);
		SetMemory(0x58DC64, Add, 0x00000056);
		SetMemory(0x58DC6C, Add, 0x00000096);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000096);
		SetMemory(0x58DC68, Add, 0x00000056);
		SetMemory(0x58DC64, Add, 0xFFFFFFAA);
		SetMemory(0x58DC6C, Add, 0xFFFFFF6A);
		SetMemory(0x58DC60, Add, 0xFFFFFF45);
		SetMemory(0x58DC68, Add, 0xFFFFFF85);
		SetMemory(0x58DC64, Add, 0x00000020);
		SetMemory(0x58DC6C, Add, 0x00000060);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000BB);
		SetMemory(0x58DC68, Add, 0x0000007B);
		SetMemory(0x58DC64, Add, 0xFFFFFFE0);
		SetMemory(0x58DC6C, Add, 0xFFFFFFA0);
		SetMemory(0x58DC60, Add, 0xFFFFFF38);
		SetMemory(0x58DC68, Add, 0xFFFFFF78);
		SetMemory(0x58DC64, Add, 0xFFFFFFE1);
		SetMemory(0x58DC6C, Add, 0x00000020);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000C8);
		SetMemory(0x58DC68, Add, 0x00000088);
		SetMemory(0x58DC64, Add, 0x0000001F);
		SetMemory(0x58DC6C, Add, 0xFFFFFFE0);
		SetMemory(0x58DC60, Add, 0xFFFFFF45);
		SetMemory(0x58DC68, Add, 0xFFFFFF85);
		SetMemory(0x58DC64, Add, 0xFFFFFFA0);
		SetMemory(0x58DC6C, Add, 0xFFFFFFE0);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000BB);
		SetMemory(0x58DC68, Add, 0x0000007B);
		SetMemory(0x58DC64, Add, 0x00000060);
		SetMemory(0x58DC6C, Add, 0x00000020);
		SetMemory(0x58DC60, Add, 0xFFFFFF6A);
		SetMemory(0x58DC68, Add, 0xFFFFFFAA);
		SetMemory(0x58DC64, Add, 0xFFFFFF6A);
		SetMemory(0x58DC6C, Add, 0xFFFFFFAA);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000096);
		SetMemory(0x58DC68, Add, 0x00000056);
		SetMemory(0x58DC64, Add, 0x00000096);
		SetMemory(0x58DC6C, Add, 0x00000056);
		SetMemory(0x58DC60, Add, 0xFFFFFFA0);
		SetMemory(0x58DC68, Add, 0xFFFFFFE0);
		SetMemory(0x58DC64, Add, 0xFFFFFF45);
		SetMemory(0x58DC6C, Add, 0xFFFFFF85);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000060);
		SetMemory(0x58DC68, Add, 0x00000020);
		SetMemory(0x58DC64, Add, 0x000000BB);
		SetMemory(0x58DC6C, Add, 0x0000007B);
		SetMemory(0x58DC60, Add, 0xFFFFFF9F);
		SetMemory(0x58DC68, Add, 0xFFFFFFDF);
		SetMemory(0x58DC64, Add, 0x000000D3);
		SetMemory(0x58DC6C, Add, 0x00000113);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000061);
		SetMemory(0x58DC68, Add, 0x00000021);
		SetMemory(0x58DC64, Add, 0xFFFFFF2D);
		SetMemory(0x58DC6C, Add, 0xFFFFFEED);
		SetMemory(0x58DC60, Add, 0xFFFFFF63);
		SetMemory(0x58DC68, Add, 0xFFFFFFA3);
		SetMemory(0x58DC64, Add, 0x000000BA);
		SetMemory(0x58DC6C, Add, 0x000000FA);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000009D);
		SetMemory(0x58DC68, Add, 0x0000005D);
		SetMemory(0x58DC64, Add, 0xFFFFFF46);
		SetMemory(0x58DC6C, Add, 0xFFFFFF06);
		SetMemory(0x58DC60, Add, 0xFFFFFF2E);
		SetMemory(0x58DC68, Add, 0xFFFFFF6E);
		SetMemory(0x58DC64, Add, 0x00000092);
		SetMemory(0x58DC6C, Add, 0x000000D2);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000D2);
		SetMemory(0x58DC68, Add, 0x00000092);
		SetMemory(0x58DC64, Add, 0xFFFFFF6E);
		SetMemory(0x58DC6C, Add, 0xFFFFFF2E);
		SetMemory(0x58DC60, Add, 0xFFFFFF06);
		SetMemory(0x58DC68, Add, 0xFFFFFF46);
		SetMemory(0x58DC64, Add, 0x0000005D);
		SetMemory(0x58DC6C, Add, 0x0000009E);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000FA);
		SetMemory(0x58DC68, Add, 0x000000BA);
		SetMemory(0x58DC64, Add, 0xFFFFFFA3);
		SetMemory(0x58DC6C, Add, 0xFFFFFF62);
		SetMemory(0x58DC60, Add, 0xFFFFFEED);
		SetMemory(0x58DC68, Add, 0xFFFFFF2D);
		SetMemory(0x58DC64, Add, 0x00000021);
		SetMemory(0x58DC6C, Add, 0x00000061);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000113);
		SetMemory(0x58DC68, Add, 0x000000D3);
		SetMemory(0x58DC64, Add, 0xFFFFFFDF);
		SetMemory(0x58DC6C, Add, 0xFFFFFF9F);
		SetMemory(0x58DC60, Add, 0xFFFFFEE4);
		SetMemory(0x58DC68, Add, 0xFFFFFF24);
		SetMemory(0x58DC64, Add, 0xFFFFFFE1);
		SetMemory(0x58DC6C, Add, 0x00000020);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000011C);
		SetMemory(0x58DC68, Add, 0x000000DC);
		SetMemory(0x58DC64, Add, 0x0000001F);
		SetMemory(0x58DC6C, Add, 0xFFFFFFE0);
		SetMemory(0x58DC60, Add, 0xFFFFFEED);
		SetMemory(0x58DC68, Add, 0xFFFFFF2D);
		SetMemory(0x58DC64, Add, 0xFFFFFF9F);
		SetMemory(0x58DC6C, Add, 0xFFFFFFDF);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000113);
		SetMemory(0x58DC68, Add, 0x000000D3);
		SetMemory(0x58DC64, Add, 0x00000061);
		SetMemory(0x58DC6C, Add, 0x00000021);
		SetMemory(0x58DC60, Add, 0xFFFFFF06);
		SetMemory(0x58DC68, Add, 0xFFFFFF46);
		SetMemory(0x58DC64, Add, 0xFFFFFF62);
		SetMemory(0x58DC6C, Add, 0xFFFFFFA2);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000FA);
		SetMemory(0x58DC68, Add, 0x000000BA);
		SetMemory(0x58DC64, Add, 0x0000009E);
		SetMemory(0x58DC6C, Add, 0x0000005E);
		SetMemory(0x58DC60, Add, 0xFFFFFF2E);
		SetMemory(0x58DC68, Add, 0xFFFFFF6E);
		SetMemory(0x58DC64, Add, 0xFFFFFF2E);
		SetMemory(0x58DC6C, Add, 0xFFFFFF6E);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000D2);
		SetMemory(0x58DC68, Add, 0x00000092);
		SetMemory(0x58DC64, Add, 0x000000D2);
		SetMemory(0x58DC6C, Add, 0x00000092);
		SetMemory(0x58DC60, Add, 0xFFFFFF62);
		SetMemory(0x58DC68, Add, 0xFFFFFFA2);
		SetMemory(0x58DC64, Add, 0xFFFFFF06);
		SetMemory(0x58DC6C, Add, 0xFFFFFF46);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000009E);
		SetMemory(0x58DC68, Add, 0x0000005E);
		SetMemory(0x58DC64, Add, 0x000000FA);
		SetMemory(0x58DC6C, Add, 0x000000BA);
		SetMemory(0x58DC60, Add, 0xFFFFFF9F);
		SetMemory(0x58DC68, Add, 0xFFFFFFDF);
		SetMemory(0x58DC64, Add, 0xFFFFFEED);
		SetMemory(0x58DC6C, Add, 0xFFFFFF2D);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000061);
		SetMemory(0x58DC68, Add, 0x00000021);
		SetMemory(0x58DC64, Add, 0x00000113);
		SetMemory(0x58DC6C, Add, 0x000000D3);
		SetMemory(0x58DC60, Add, 0xFFFFFF9F);
		SetMemory(0x58DC68, Add, 0xFFFFFFDF);
		SetMemory(0x58DC64, Add, 0x00000129);
		SetMemory(0x58DC6C, Add, 0x00000169);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000061);
		SetMemory(0x58DC68, Add, 0x00000021);
		SetMemory(0x58DC64, Add, 0xFFFFFED7);
		SetMemory(0x58DC6C, Add, 0xFFFFFE97);
		SetMemory(0x58DC60, Add, 0xFFFFFF60);
		SetMemory(0x58DC68, Add, 0xFFFFFFA0);
		SetMemory(0x58DC64, Add, 0x00000116);
		SetMemory(0x58DC6C, Add, 0x00000156);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000A0);
		SetMemory(0x58DC68, Add, 0x00000060);
		SetMemory(0x58DC64, Add, 0xFFFFFEEA);
		SetMemory(0x58DC6C, Add, 0xFFFFFEAA);
		SetMemory(0x58DC60, Add, 0xFFFFFF26);
		SetMemory(0x58DC68, Add, 0xFFFFFF66);
		SetMemory(0x58DC64, Add, 0x000000F7);
		SetMemory(0x58DC6C, Add, 0x00000137);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000DA);
		SetMemory(0x58DC68, Add, 0x0000009A);
		SetMemory(0x58DC64, Add, 0xFFFFFF09);
		SetMemory(0x58DC6C, Add, 0xFFFFFEC9);
		SetMemory(0x58DC60, Add, 0xFFFFFEF3);
		SetMemory(0x58DC68, Add, 0xFFFFFF33);
		SetMemory(0x58DC64, Add, 0x000000CD);
		SetMemory(0x58DC6C, Add, 0x0000010D);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000010D);
		SetMemory(0x58DC68, Add, 0x000000CD);
		SetMemory(0x58DC64, Add, 0xFFFFFF33);
		SetMemory(0x58DC6C, Add, 0xFFFFFEF3);
		SetMemory(0x58DC60, Add, 0xFFFFFEC9);
		SetMemory(0x58DC68, Add, 0xFFFFFF09);
		SetMemory(0x58DC64, Add, 0x0000009A);
		SetMemory(0x58DC6C, Add, 0x000000DA);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000137);
		SetMemory(0x58DC68, Add, 0x000000F7);
		SetMemory(0x58DC64, Add, 0xFFFFFF66);
		SetMemory(0x58DC6C, Add, 0xFFFFFF26);
		SetMemory(0x58DC60, Add, 0xFFFFFEAA);
		SetMemory(0x58DC68, Add, 0xFFFFFEEA);
		SetMemory(0x58DC64, Add, 0x00000060);
		SetMemory(0x58DC6C, Add, 0x000000A0);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000156);
		SetMemory(0x58DC68, Add, 0x00000116);
		SetMemory(0x58DC64, Add, 0xFFFFFFA0);
		SetMemory(0x58DC6C, Add, 0xFFFFFF60);
		SetMemory(0x58DC60, Add, 0xFFFFFE97);
		SetMemory(0x58DC68, Add, 0xFFFFFED7);
		SetMemory(0x58DC64, Add, 0x00000021);
		SetMemory(0x58DC6C, Add, 0x00000061);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000169);
		SetMemory(0x58DC68, Add, 0x00000129);
		SetMemory(0x58DC64, Add, 0xFFFFFFDF);
		SetMemory(0x58DC6C, Add, 0xFFFFFF9F);
		SetMemory(0x58DC60, Add, 0xFFFFFE90);
		SetMemory(0x58DC68, Add, 0xFFFFFED0);
		SetMemory(0x58DC64, Add, 0xFFFFFFE1);
		SetMemory(0x58DC6C, Add, 0x00000020);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000170);
		SetMemory(0x58DC68, Add, 0x00000130);
		SetMemory(0x58DC64, Add, 0x0000001F);
		SetMemory(0x58DC6C, Add, 0xFFFFFFE0);
		SetMemory(0x58DC60, Add, 0xFFFFFE97);
		SetMemory(0x58DC68, Add, 0xFFFFFED7);
		SetMemory(0x58DC64, Add, 0xFFFFFF9F);
		SetMemory(0x58DC6C, Add, 0xFFFFFFDF);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000169);
		SetMemory(0x58DC68, Add, 0x00000129);
		SetMemory(0x58DC64, Add, 0x00000061);
		SetMemory(0x58DC6C, Add, 0x00000021);
		SetMemory(0x58DC60, Add, 0xFFFFFEAA);
		SetMemory(0x58DC68, Add, 0xFFFFFEEA);
		SetMemory(0x58DC64, Add, 0xFFFFFF60);
		SetMemory(0x58DC6C, Add, 0xFFFFFFA0);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000156);
		SetMemory(0x58DC68, Add, 0x00000116);
		SetMemory(0x58DC64, Add, 0x000000A0);
		SetMemory(0x58DC6C, Add, 0x00000060);
		SetMemory(0x58DC60, Add, 0xFFFFFEC9);
		SetMemory(0x58DC68, Add, 0xFFFFFF09);
		SetMemory(0x58DC64, Add, 0xFFFFFF26);
		SetMemory(0x58DC6C, Add, 0xFFFFFF66);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000137);
		SetMemory(0x58DC68, Add, 0x000000F7);
		SetMemory(0x58DC64, Add, 0x000000DA);
		SetMemory(0x58DC6C, Add, 0x0000009A);
		SetMemory(0x58DC60, Add, 0xFFFFFEF3);
		SetMemory(0x58DC68, Add, 0xFFFFFF33);
		SetMemory(0x58DC64, Add, 0xFFFFFEF3);
		SetMemory(0x58DC6C, Add, 0xFFFFFF33);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000010D);
		SetMemory(0x58DC68, Add, 0x000000CD);
		SetMemory(0x58DC64, Add, 0x0000010D);
		SetMemory(0x58DC6C, Add, 0x000000CD);
		SetMemory(0x58DC60, Add, 0xFFFFFF26);
		SetMemory(0x58DC68, Add, 0xFFFFFF66);
		SetMemory(0x58DC64, Add, 0xFFFFFEC9);
		SetMemory(0x58DC6C, Add, 0xFFFFFF09);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000DA);
		SetMemory(0x58DC68, Add, 0x0000009A);
		SetMemory(0x58DC64, Add, 0x00000137);
		SetMemory(0x58DC6C, Add, 0x000000F7);
		SetMemory(0x58DC60, Add, 0xFFFFFF60);
		SetMemory(0x58DC68, Add, 0xFFFFFFA0);
		SetMemory(0x58DC64, Add, 0xFFFFFEAA);
		SetMemory(0x58DC6C, Add, 0xFFFFFEEA);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000A0);
		SetMemory(0x58DC68, Add, 0x00000060);
		SetMemory(0x58DC64, Add, 0x00000156);
		SetMemory(0x58DC6C, Add, 0x00000116);
		SetMemory(0x58DC60, Add, 0xFFFFFF9F);
		SetMemory(0x58DC68, Add, 0xFFFFFFDF);
		SetMemory(0x58DC64, Add, 0xFFFFFE97);
		SetMemory(0x58DC6C, Add, 0xFFFFFED7);
		Call_UnitIDVOvr
	})
DoActions(FP,{
		SetMemory(0x58DC60, Add, 0x00000061);
		SetMemory(0x58DC68, Add, 0x00000021);
		SetMemory(0x58DC64, Add, 0x00000169);
		SetMemory(0x58DC6C, Add, 0x00000129);
	})

Trigger {
	players = {FP},
	conditions = {
		Label(0x2023);
	},
	actions = {
		PreserveTrigger();
	}
}

Trigger {
	players = {FP},
	conditions = {
		Label(0x2024);
	},
	actions = {
		PreserveTrigger();
	}
}
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFAE);
		SetMemory(0x58DC68, Add, 0xFFFFFFEE);
		SetMemory(0x58DC64, Add, 0x00000012);
		SetMemory(0x58DC6C, Add, 0x00000052);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000052);
		SetMemory(0x58DC68, Add, 0x00000012);
		SetMemory(0x58DC64, Add, 0xFFFFFFEE);
		SetMemory(0x58DC6C, Add, 0xFFFFFFAE);
		SetMemory(0x58DC60, Add, 0xFFFFFF98);
		SetMemory(0x58DC68, Add, 0xFFFFFFD8);
		SetMemory(0x58DC64, Add, 0xFFFFFFE1);
		SetMemory(0x58DC6C, Add, 0x00000020);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000068);
		SetMemory(0x58DC68, Add, 0x00000028);
		SetMemory(0x58DC64, Add, 0x0000001F);
		SetMemory(0x58DC6C, Add, 0xFFFFFFE0);
		SetMemory(0x58DC60, Add, 0xFFFFFFAE);
		SetMemory(0x58DC68, Add, 0xFFFFFFEE);
		SetMemory(0x58DC64, Add, 0xFFFFFFAE);
		SetMemory(0x58DC6C, Add, 0xFFFFFFEE);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000052);
		SetMemory(0x58DC68, Add, 0x00000012);
		SetMemory(0x58DC64, Add, 0x00000052);
		SetMemory(0x58DC6C, Add, 0x00000012);
		SetMemory(0x58DC60, Add, 0xFFFFFFA9);
		SetMemory(0x58DC68, Add, 0xFFFFFFE9);
		SetMemory(0x58DC64, Add, 0x00000065);
		SetMemory(0x58DC6C, Add, 0x000000A5);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000057);
		SetMemory(0x58DC68, Add, 0x00000017);
		SetMemory(0x58DC64, Add, 0xFFFFFF9B);
		SetMemory(0x58DC6C, Add, 0xFFFFFF5B);
		SetMemory(0x58DC60, Add, 0xFFFFFF7B);
		SetMemory(0x58DC68, Add, 0xFFFFFFBB);
		SetMemory(0x58DC64, Add, 0x00000045);
		SetMemory(0x58DC6C, Add, 0x00000085);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000085);
		SetMemory(0x58DC68, Add, 0x00000045);
		SetMemory(0x58DC64, Add, 0xFFFFFFBB);
		SetMemory(0x58DC6C, Add, 0xFFFFFF7B);
		SetMemory(0x58DC60, Add, 0xFFFFFF5B);
		SetMemory(0x58DC68, Add, 0xFFFFFF9B);
		SetMemory(0x58DC64, Add, 0x00000017);
		SetMemory(0x58DC6C, Add, 0x00000057);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000A5);
		SetMemory(0x58DC68, Add, 0x00000065);
		SetMemory(0x58DC64, Add, 0xFFFFFFE9);
		SetMemory(0x58DC6C, Add, 0xFFFFFFA9);
		SetMemory(0x58DC60, Add, 0xFFFFFF50);
		SetMemory(0x58DC68, Add, 0xFFFFFF90);
		SetMemory(0x58DC64, Add, 0xFFFFFFE1);
		SetMemory(0x58DC6C, Add, 0x00000020);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000B0);
		SetMemory(0x58DC68, Add, 0x00000070);
		SetMemory(0x58DC64, Add, 0x0000001F);
		SetMemory(0x58DC6C, Add, 0xFFFFFFE0);
		SetMemory(0x58DC60, Add, 0xFFFFFF5B);
		SetMemory(0x58DC68, Add, 0xFFFFFF9B);
		SetMemory(0x58DC64, Add, 0xFFFFFFA9);
		SetMemory(0x58DC6C, Add, 0xFFFFFFE9);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000A5);
		SetMemory(0x58DC68, Add, 0x00000065);
		SetMemory(0x58DC64, Add, 0x00000057);
		SetMemory(0x58DC6C, Add, 0x00000017);
		SetMemory(0x58DC60, Add, 0xFFFFFF7B);
		SetMemory(0x58DC68, Add, 0xFFFFFFBB);
		SetMemory(0x58DC64, Add, 0xFFFFFF7B);
		SetMemory(0x58DC6C, Add, 0xFFFFFFBB);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000085);
		SetMemory(0x58DC68, Add, 0x00000045);
		SetMemory(0x58DC64, Add, 0x00000085);
		SetMemory(0x58DC6C, Add, 0x00000045);
		SetMemory(0x58DC60, Add, 0xFFFFFFA9);
		SetMemory(0x58DC68, Add, 0xFFFFFFE9);
		SetMemory(0x58DC64, Add, 0xFFFFFF5B);
		SetMemory(0x58DC6C, Add, 0xFFFFFF9B);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000057);
		SetMemory(0x58DC68, Add, 0x00000017);
		SetMemory(0x58DC64, Add, 0x000000A5);
		SetMemory(0x58DC6C, Add, 0x00000065);
		SetMemory(0x58DC60, Add, 0xFFFFFFA9);
		SetMemory(0x58DC68, Add, 0xFFFFFFE9);
		SetMemory(0x58DC64, Add, 0x000000B0);
		SetMemory(0x58DC6C, Add, 0x000000F0);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000057);
		SetMemory(0x58DC68, Add, 0x00000017);
		SetMemory(0x58DC64, Add, 0xFFFFFF50);
		SetMemory(0x58DC6C, Add, 0xFFFFFF10);
		SetMemory(0x58DC60, Add, 0xFFFFFF75);
		SetMemory(0x58DC68, Add, 0xFFFFFFB5);
		SetMemory(0x58DC64, Add, 0x0000009B);
		SetMemory(0x58DC6C, Add, 0x000000DB);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000008B);
		SetMemory(0x58DC68, Add, 0x0000004B);
		SetMemory(0x58DC64, Add, 0xFFFFFF65);
		SetMemory(0x58DC6C, Add, 0xFFFFFF25);
		SetMemory(0x58DC60, Add, 0xFFFFFF48);
		SetMemory(0x58DC68, Add, 0xFFFFFF88);
		SetMemory(0x58DC64, Add, 0x00000078);
		SetMemory(0x58DC6C, Add, 0x000000B8);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000B8);
		SetMemory(0x58DC68, Add, 0x00000078);
		SetMemory(0x58DC64, Add, 0xFFFFFF88);
		SetMemory(0x58DC6C, Add, 0xFFFFFF48);
		SetMemory(0x58DC60, Add, 0xFFFFFF25);
		SetMemory(0x58DC68, Add, 0xFFFFFF65);
		SetMemory(0x58DC64, Add, 0x0000004B);
		SetMemory(0x58DC6C, Add, 0x0000008C);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000DB);
		SetMemory(0x58DC68, Add, 0x0000009B);
		SetMemory(0x58DC64, Add, 0xFFFFFFB5);
		SetMemory(0x58DC6C, Add, 0xFFFFFF74);
		SetMemory(0x58DC60, Add, 0xFFFFFF10);
		SetMemory(0x58DC68, Add, 0xFFFFFF50);
		SetMemory(0x58DC64, Add, 0x00000017);
		SetMemory(0x58DC6C, Add, 0x00000057);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000F0);
		SetMemory(0x58DC68, Add, 0x000000B0);
		SetMemory(0x58DC64, Add, 0xFFFFFFE9);
		SetMemory(0x58DC6C, Add, 0xFFFFFFA9);
		SetMemory(0x58DC60, Add, 0xFFFFFF08);
		SetMemory(0x58DC68, Add, 0xFFFFFF48);
		SetMemory(0x58DC64, Add, 0xFFFFFFE1);
		SetMemory(0x58DC6C, Add, 0x00000020);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000F8);
		SetMemory(0x58DC68, Add, 0x000000B8);
		SetMemory(0x58DC64, Add, 0x0000001F);
		SetMemory(0x58DC6C, Add, 0xFFFFFFE0);
		SetMemory(0x58DC60, Add, 0xFFFFFF10);
		SetMemory(0x58DC68, Add, 0xFFFFFF50);
		SetMemory(0x58DC64, Add, 0xFFFFFFA9);
		SetMemory(0x58DC6C, Add, 0xFFFFFFE9);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000F0);
		SetMemory(0x58DC68, Add, 0x000000B0);
		SetMemory(0x58DC64, Add, 0x00000057);
		SetMemory(0x58DC6C, Add, 0x00000017);
		SetMemory(0x58DC60, Add, 0xFFFFFF25);
		SetMemory(0x58DC68, Add, 0xFFFFFF65);
		SetMemory(0x58DC64, Add, 0xFFFFFF74);
		SetMemory(0x58DC6C, Add, 0xFFFFFFB4);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000DB);
		SetMemory(0x58DC68, Add, 0x0000009B);
		SetMemory(0x58DC64, Add, 0x0000008C);
		SetMemory(0x58DC6C, Add, 0x0000004C);
		SetMemory(0x58DC60, Add, 0xFFFFFF48);
		SetMemory(0x58DC68, Add, 0xFFFFFF88);
		SetMemory(0x58DC64, Add, 0xFFFFFF48);
		SetMemory(0x58DC6C, Add, 0xFFFFFF88);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000B8);
		SetMemory(0x58DC68, Add, 0x00000078);
		SetMemory(0x58DC64, Add, 0x000000B8);
		SetMemory(0x58DC6C, Add, 0x00000078);
		SetMemory(0x58DC60, Add, 0xFFFFFF74);
		SetMemory(0x58DC68, Add, 0xFFFFFFB4);
		SetMemory(0x58DC64, Add, 0xFFFFFF25);
		SetMemory(0x58DC6C, Add, 0xFFFFFF65);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000008C);
		SetMemory(0x58DC68, Add, 0x0000004C);
		SetMemory(0x58DC64, Add, 0x000000DB);
		SetMemory(0x58DC6C, Add, 0x0000009B);
		SetMemory(0x58DC60, Add, 0xFFFFFFA9);
		SetMemory(0x58DC68, Add, 0xFFFFFFE9);
		SetMemory(0x58DC64, Add, 0xFFFFFF10);
		SetMemory(0x58DC6C, Add, 0xFFFFFF50);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000057);
		SetMemory(0x58DC68, Add, 0x00000017);
		SetMemory(0x58DC64, Add, 0x000000F0);
		SetMemory(0x58DC6C, Add, 0x000000B0);
		SetMemory(0x58DC60, Add, 0xFFFFFFA8);
		SetMemory(0x58DC68, Add, 0xFFFFFFE8);
		SetMemory(0x58DC64, Add, 0x000000FA);
		SetMemory(0x58DC6C, Add, 0x0000013A);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000058);
		SetMemory(0x58DC68, Add, 0x00000018);
		SetMemory(0x58DC64, Add, 0xFFFFFF06);
		SetMemory(0x58DC6C, Add, 0xFFFFFEC6);
		SetMemory(0x58DC60, Add, 0xFFFFFF72);
		SetMemory(0x58DC68, Add, 0xFFFFFFB2);
		SetMemory(0x58DC64, Add, 0x000000EA);
		SetMemory(0x58DC6C, Add, 0x0000012A);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000008E);
		SetMemory(0x58DC68, Add, 0x0000004E);
		SetMemory(0x58DC64, Add, 0xFFFFFF16);
		SetMemory(0x58DC6C, Add, 0xFFFFFED6);
		SetMemory(0x58DC60, Add, 0xFFFFFF40);
		SetMemory(0x58DC68, Add, 0xFFFFFF80);
		SetMemory(0x58DC64, Add, 0x000000CF);
		SetMemory(0x58DC6C, Add, 0x0000010F);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000C0);
		SetMemory(0x58DC68, Add, 0x00000080);
		SetMemory(0x58DC64, Add, 0xFFFFFF31);
		SetMemory(0x58DC6C, Add, 0xFFFFFEF1);
		SetMemory(0x58DC60, Add, 0xFFFFFF15);
		SetMemory(0x58DC68, Add, 0xFFFFFF55);
		SetMemory(0x58DC64, Add, 0x000000AB);
		SetMemory(0x58DC6C, Add, 0x000000EB);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000EB);
		SetMemory(0x58DC68, Add, 0x000000AB);
		SetMemory(0x58DC64, Add, 0xFFFFFF55);
		SetMemory(0x58DC6C, Add, 0xFFFFFF15);
		SetMemory(0x58DC60, Add, 0xFFFFFEF1);
		SetMemory(0x58DC68, Add, 0xFFFFFF31);
		SetMemory(0x58DC64, Add, 0x00000080);
		SetMemory(0x58DC6C, Add, 0x000000C0);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000010F);
		SetMemory(0x58DC68, Add, 0x000000CF);
		SetMemory(0x58DC64, Add, 0xFFFFFF80);
		SetMemory(0x58DC6C, Add, 0xFFFFFF40);
		SetMemory(0x58DC60, Add, 0xFFFFFED6);
		SetMemory(0x58DC68, Add, 0xFFFFFF16);
		SetMemory(0x58DC64, Add, 0x0000004E);
		SetMemory(0x58DC6C, Add, 0x0000008E);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000012A);
		SetMemory(0x58DC68, Add, 0x000000EA);
		SetMemory(0x58DC64, Add, 0xFFFFFFB2);
		SetMemory(0x58DC6C, Add, 0xFFFFFF72);
		SetMemory(0x58DC60, Add, 0xFFFFFEC6);
		SetMemory(0x58DC68, Add, 0xFFFFFF06);
		SetMemory(0x58DC64, Add, 0x00000018);
		SetMemory(0x58DC6C, Add, 0x00000058);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000013A);
		SetMemory(0x58DC68, Add, 0x000000FA);
		SetMemory(0x58DC64, Add, 0xFFFFFFE8);
		SetMemory(0x58DC6C, Add, 0xFFFFFFA8);
		SetMemory(0x58DC60, Add, 0xFFFFFEC0);
		SetMemory(0x58DC68, Add, 0xFFFFFF00);
		SetMemory(0x58DC64, Add, 0xFFFFFFE1);
		SetMemory(0x58DC6C, Add, 0x00000020);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000140);
		SetMemory(0x58DC68, Add, 0x00000100);
		SetMemory(0x58DC64, Add, 0x0000001F);
		SetMemory(0x58DC6C, Add, 0xFFFFFFE0);
		SetMemory(0x58DC60, Add, 0xFFFFFEC6);
		SetMemory(0x58DC68, Add, 0xFFFFFF06);
		SetMemory(0x58DC64, Add, 0xFFFFFFA8);
		SetMemory(0x58DC6C, Add, 0xFFFFFFE8);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000013A);
		SetMemory(0x58DC68, Add, 0x000000FA);
		SetMemory(0x58DC64, Add, 0x00000058);
		SetMemory(0x58DC6C, Add, 0x00000018);
		SetMemory(0x58DC60, Add, 0xFFFFFED6);
		SetMemory(0x58DC68, Add, 0xFFFFFF16);
		SetMemory(0x58DC64, Add, 0xFFFFFF72);
		SetMemory(0x58DC6C, Add, 0xFFFFFFB2);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000012A);
		SetMemory(0x58DC68, Add, 0x000000EA);
		SetMemory(0x58DC64, Add, 0x0000008E);
		SetMemory(0x58DC6C, Add, 0x0000004E);
		SetMemory(0x58DC60, Add, 0xFFFFFEF1);
		SetMemory(0x58DC68, Add, 0xFFFFFF31);
		SetMemory(0x58DC64, Add, 0xFFFFFF40);
		SetMemory(0x58DC6C, Add, 0xFFFFFF80);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000010F);
		SetMemory(0x58DC68, Add, 0x000000CF);
		SetMemory(0x58DC64, Add, 0x000000C0);
		SetMemory(0x58DC6C, Add, 0x00000080);
		SetMemory(0x58DC60, Add, 0xFFFFFF15);
		SetMemory(0x58DC68, Add, 0xFFFFFF55);
		SetMemory(0x58DC64, Add, 0xFFFFFF15);
		SetMemory(0x58DC6C, Add, 0xFFFFFF55);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000EB);
		SetMemory(0x58DC68, Add, 0x000000AB);
		SetMemory(0x58DC64, Add, 0x000000EB);
		SetMemory(0x58DC6C, Add, 0x000000AB);
		SetMemory(0x58DC60, Add, 0xFFFFFF40);
		SetMemory(0x58DC68, Add, 0xFFFFFF80);
		SetMemory(0x58DC64, Add, 0xFFFFFEF1);
		SetMemory(0x58DC6C, Add, 0xFFFFFF31);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000C0);
		SetMemory(0x58DC68, Add, 0x00000080);
		SetMemory(0x58DC64, Add, 0x0000010F);
		SetMemory(0x58DC6C, Add, 0x000000CF);
		SetMemory(0x58DC60, Add, 0xFFFFFF72);
		SetMemory(0x58DC68, Add, 0xFFFFFFB2);
		SetMemory(0x58DC64, Add, 0xFFFFFED6);
		SetMemory(0x58DC6C, Add, 0xFFFFFF16);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000008E);
		SetMemory(0x58DC68, Add, 0x0000004E);
		SetMemory(0x58DC64, Add, 0x0000012A);
		SetMemory(0x58DC6C, Add, 0x000000EA);
		SetMemory(0x58DC60, Add, 0xFFFFFFA8);
		SetMemory(0x58DC68, Add, 0xFFFFFFE8);
		SetMemory(0x58DC64, Add, 0xFFFFFEC6);
		SetMemory(0x58DC6C, Add, 0xFFFFFF06);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000058);
		SetMemory(0x58DC68, Add, 0x00000018);
		SetMemory(0x58DC64, Add, 0x0000013A);
		SetMemory(0x58DC6C, Add, 0x000000FA);
		SetMemory(0x58DC60, Add, 0xFFFFFFA8);
		SetMemory(0x58DC68, Add, 0xFFFFFFE8);
		SetMemory(0x58DC64, Add, 0x00000143);
		SetMemory(0x58DC6C, Add, 0x00000183);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000058);
		SetMemory(0x58DC68, Add, 0x00000018);
		SetMemory(0x58DC64, Add, 0xFFFFFEBD);
		SetMemory(0x58DC6C, Add, 0xFFFFFE7D);
		SetMemory(0x58DC60, Add, 0xFFFFFF71);
		SetMemory(0x58DC68, Add, 0xFFFFFFB1);
		SetMemory(0x58DC64, Add, 0x00000136);
		SetMemory(0x58DC6C, Add, 0x00000176);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000008F);
		SetMemory(0x58DC68, Add, 0x0000004F);
		SetMemory(0x58DC64, Add, 0xFFFFFECA);
		SetMemory(0x58DC6C, Add, 0xFFFFFE8A);
		SetMemory(0x58DC60, Add, 0xFFFFFF3D);
		SetMemory(0x58DC68, Add, 0xFFFFFF7D);
		SetMemory(0x58DC64, Add, 0x00000120);
		SetMemory(0x58DC6C, Add, 0x00000160);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000C3);
		SetMemory(0x58DC68, Add, 0x00000083);
		SetMemory(0x58DC64, Add, 0xFFFFFEE0);
		SetMemory(0x58DC6C, Add, 0xFFFFFEA0);
		SetMemory(0x58DC60, Add, 0xFFFFFF0D);
		SetMemory(0x58DC68, Add, 0xFFFFFF4D);
		SetMemory(0x58DC64, Add, 0x00000103);
		SetMemory(0x58DC6C, Add, 0x00000143);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000F3);
		SetMemory(0x58DC68, Add, 0x000000B3);
		SetMemory(0x58DC64, Add, 0xFFFFFEFD);
		SetMemory(0x58DC6C, Add, 0xFFFFFEBD);
		SetMemory(0x58DC60, Add, 0xFFFFFEE2);
		SetMemory(0x58DC68, Add, 0xFFFFFF22);
		SetMemory(0x58DC64, Add, 0x000000DE);
		SetMemory(0x58DC6C, Add, 0x0000011E);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000011E);
		SetMemory(0x58DC68, Add, 0x000000DE);
		SetMemory(0x58DC64, Add, 0xFFFFFF22);
		SetMemory(0x58DC6C, Add, 0xFFFFFEE2);
		SetMemory(0x58DC60, Add, 0xFFFFFEBD);
		SetMemory(0x58DC68, Add, 0xFFFFFEFD);
		SetMemory(0x58DC64, Add, 0x000000B3);
		SetMemory(0x58DC6C, Add, 0x000000F3);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000143);
		SetMemory(0x58DC68, Add, 0x00000103);
		SetMemory(0x58DC64, Add, 0xFFFFFF4D);
		SetMemory(0x58DC6C, Add, 0xFFFFFF0D);
		SetMemory(0x58DC60, Add, 0xFFFFFEA0);
		SetMemory(0x58DC68, Add, 0xFFFFFEE0);
		SetMemory(0x58DC64, Add, 0x00000083);
		SetMemory(0x58DC6C, Add, 0x000000C3);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000160);
		SetMemory(0x58DC68, Add, 0x00000120);
		SetMemory(0x58DC64, Add, 0xFFFFFF7D);
		SetMemory(0x58DC6C, Add, 0xFFFFFF3D);
		SetMemory(0x58DC60, Add, 0xFFFFFE8A);
		SetMemory(0x58DC68, Add, 0xFFFFFECA);
		SetMemory(0x58DC64, Add, 0x0000004F);
		SetMemory(0x58DC6C, Add, 0x0000008F);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000176);
		SetMemory(0x58DC68, Add, 0x00000136);
		SetMemory(0x58DC64, Add, 0xFFFFFFB1);
		SetMemory(0x58DC6C, Add, 0xFFFFFF71);
		SetMemory(0x58DC60, Add, 0xFFFFFE7D);
		SetMemory(0x58DC68, Add, 0xFFFFFEBD);
		SetMemory(0x58DC64, Add, 0x00000018);
		SetMemory(0x58DC6C, Add, 0x00000058);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000183);
		SetMemory(0x58DC68, Add, 0x00000143);
		SetMemory(0x58DC64, Add, 0xFFFFFFE8);
		SetMemory(0x58DC6C, Add, 0xFFFFFFA8);
		SetMemory(0x58DC60, Add, 0xFFFFFE78);
		SetMemory(0x58DC68, Add, 0xFFFFFEB8);
		SetMemory(0x58DC64, Add, 0xFFFFFFE1);
		SetMemory(0x58DC6C, Add, 0x00000020);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000188);
		SetMemory(0x58DC68, Add, 0x00000148);
		SetMemory(0x58DC64, Add, 0x0000001F);
		SetMemory(0x58DC6C, Add, 0xFFFFFFE0);
		SetMemory(0x58DC60, Add, 0xFFFFFE7D);
		SetMemory(0x58DC68, Add, 0xFFFFFEBD);
		SetMemory(0x58DC64, Add, 0xFFFFFFA8);
		SetMemory(0x58DC6C, Add, 0xFFFFFFE8);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000183);
		SetMemory(0x58DC68, Add, 0x00000143);
		SetMemory(0x58DC64, Add, 0x00000058);
		SetMemory(0x58DC6C, Add, 0x00000018);
		SetMemory(0x58DC60, Add, 0xFFFFFE8A);
		SetMemory(0x58DC68, Add, 0xFFFFFECA);
		SetMemory(0x58DC64, Add, 0xFFFFFF71);
		SetMemory(0x58DC6C, Add, 0xFFFFFFB1);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000176);
		SetMemory(0x58DC68, Add, 0x00000136);
		SetMemory(0x58DC64, Add, 0x0000008F);
		SetMemory(0x58DC6C, Add, 0x0000004F);
		SetMemory(0x58DC60, Add, 0xFFFFFEA0);
		SetMemory(0x58DC68, Add, 0xFFFFFEE0);
		SetMemory(0x58DC64, Add, 0xFFFFFF3D);
		SetMemory(0x58DC6C, Add, 0xFFFFFF7D);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000160);
		SetMemory(0x58DC68, Add, 0x00000120);
		SetMemory(0x58DC64, Add, 0x000000C3);
		SetMemory(0x58DC6C, Add, 0x00000083);
		SetMemory(0x58DC60, Add, 0xFFFFFEBD);
		SetMemory(0x58DC68, Add, 0xFFFFFEFD);
		SetMemory(0x58DC64, Add, 0xFFFFFF0D);
		SetMemory(0x58DC6C, Add, 0xFFFFFF4D);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000143);
		SetMemory(0x58DC68, Add, 0x00000103);
		SetMemory(0x58DC64, Add, 0x000000F3);
		SetMemory(0x58DC6C, Add, 0x000000B3);
		SetMemory(0x58DC60, Add, 0xFFFFFEE2);
		SetMemory(0x58DC68, Add, 0xFFFFFF22);
		SetMemory(0x58DC64, Add, 0xFFFFFEE2);
		SetMemory(0x58DC6C, Add, 0xFFFFFF22);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000011E);
		SetMemory(0x58DC68, Add, 0x000000DE);
		SetMemory(0x58DC64, Add, 0x0000011E);
		SetMemory(0x58DC6C, Add, 0x000000DE);
		SetMemory(0x58DC60, Add, 0xFFFFFF0D);
		SetMemory(0x58DC68, Add, 0xFFFFFF4D);
		SetMemory(0x58DC64, Add, 0xFFFFFEBD);
		SetMemory(0x58DC6C, Add, 0xFFFFFEFD);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000F3);
		SetMemory(0x58DC68, Add, 0x000000B3);
		SetMemory(0x58DC64, Add, 0x00000143);
		SetMemory(0x58DC6C, Add, 0x00000103);
		SetMemory(0x58DC60, Add, 0xFFFFFF3D);
		SetMemory(0x58DC68, Add, 0xFFFFFF7D);
		SetMemory(0x58DC64, Add, 0xFFFFFEA0);
		SetMemory(0x58DC6C, Add, 0xFFFFFEE0);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000C3);
		SetMemory(0x58DC68, Add, 0x00000083);
		SetMemory(0x58DC64, Add, 0x00000160);
		SetMemory(0x58DC6C, Add, 0x00000120);
		SetMemory(0x58DC60, Add, 0xFFFFFF71);
		SetMemory(0x58DC68, Add, 0xFFFFFFB1);
		SetMemory(0x58DC64, Add, 0xFFFFFE8A);
		SetMemory(0x58DC6C, Add, 0xFFFFFECA);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000008F);
		SetMemory(0x58DC68, Add, 0x0000004F);
		SetMemory(0x58DC64, Add, 0x00000176);
		SetMemory(0x58DC6C, Add, 0x00000136);
		SetMemory(0x58DC60, Add, 0xFFFFFFA8);
		SetMemory(0x58DC68, Add, 0xFFFFFFE8);
		SetMemory(0x58DC64, Add, 0xFFFFFE7D);
		SetMemory(0x58DC6C, Add, 0xFFFFFEBD);
		Call_UnitIDVOvr
	})
DoActions(FP,{
		SetMemory(0x58DC60, Add, 0x00000058);
		SetMemory(0x58DC68, Add, 0x00000018);
		SetMemory(0x58DC64, Add, 0x00000183);
		SetMemory(0x58DC6C, Add, 0x00000143);
	})
Trigger {
	players = {FP},
	conditions = {
		Label(0x2025);
	},
	actions = {
		PreserveTrigger();
	}
}

Trigger {
	players = {FP},
	conditions = {
		Label(0x2026);
	},
	actions = {
		PreserveTrigger();
	}
}
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFB6);
		SetMemory(0x58DC68, Add, 0xFFFFFFF6);
		SetMemory(0x58DC64, Add, 0x0000000A);
		SetMemory(0x58DC6C, Add, 0x0000004A);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000004A);
		SetMemory(0x58DC68, Add, 0x0000000A);
		SetMemory(0x58DC64, Add, 0xFFFFFFF6);
		SetMemory(0x58DC6C, Add, 0xFFFFFFB6);
		SetMemory(0x58DC60, Add, 0xFFFFFFA4);
		SetMemory(0x58DC68, Add, 0xFFFFFFE4);
		SetMemory(0x58DC64, Add, 0xFFFFFFE1);
		SetMemory(0x58DC6C, Add, 0x00000020);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000005C);
		SetMemory(0x58DC68, Add, 0x0000001C);
		SetMemory(0x58DC64, Add, 0x0000001F);
		SetMemory(0x58DC6C, Add, 0xFFFFFFE0);
		SetMemory(0x58DC60, Add, 0xFFFFFFB6);
		SetMemory(0x58DC68, Add, 0xFFFFFFF6);
		SetMemory(0x58DC64, Add, 0xFFFFFFB6);
		SetMemory(0x58DC6C, Add, 0xFFFFFFF6);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000004A);
		SetMemory(0x58DC68, Add, 0x0000000A);
		SetMemory(0x58DC64, Add, 0x0000004A);
		SetMemory(0x58DC6C, Add, 0x0000000A);
		SetMemory(0x58DC60, Add, 0xFFFFFFB3);
		SetMemory(0x58DC68, Add, 0xFFFFFFF3);
		SetMemory(0x58DC64, Add, 0x0000004E);
		SetMemory(0x58DC6C, Add, 0x0000008E);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000004D);
		SetMemory(0x58DC68, Add, 0x0000000D);
		SetMemory(0x58DC64, Add, 0xFFFFFFB2);
		SetMemory(0x58DC6C, Add, 0xFFFFFF72);
		SetMemory(0x58DC60, Add, 0xFFFFFF8C);
		SetMemory(0x58DC68, Add, 0xFFFFFFCC);
		SetMemory(0x58DC64, Add, 0x00000034);
		SetMemory(0x58DC6C, Add, 0x00000074);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000074);
		SetMemory(0x58DC68, Add, 0x00000034);
		SetMemory(0x58DC64, Add, 0xFFFFFFCC);
		SetMemory(0x58DC6C, Add, 0xFFFFFF8C);
		SetMemory(0x58DC60, Add, 0xFFFFFF72);
		SetMemory(0x58DC68, Add, 0xFFFFFFB2);
		SetMemory(0x58DC64, Add, 0x0000000D);
		SetMemory(0x58DC6C, Add, 0x0000004D);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000008E);
		SetMemory(0x58DC68, Add, 0x0000004E);
		SetMemory(0x58DC64, Add, 0xFFFFFFF3);
		SetMemory(0x58DC6C, Add, 0xFFFFFFB3);
		SetMemory(0x58DC60, Add, 0xFFFFFF68);
		SetMemory(0x58DC68, Add, 0xFFFFFFA8);
		SetMemory(0x58DC64, Add, 0xFFFFFFE1);
		SetMemory(0x58DC6C, Add, 0x00000020);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000098);
		SetMemory(0x58DC68, Add, 0x00000058);
		SetMemory(0x58DC64, Add, 0x0000001F);
		SetMemory(0x58DC6C, Add, 0xFFFFFFE0);
		SetMemory(0x58DC60, Add, 0xFFFFFF72);
		SetMemory(0x58DC68, Add, 0xFFFFFFB2);
		SetMemory(0x58DC64, Add, 0xFFFFFFB3);
		SetMemory(0x58DC6C, Add, 0xFFFFFFF3);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000008E);
		SetMemory(0x58DC68, Add, 0x0000004E);
		SetMemory(0x58DC64, Add, 0x0000004D);
		SetMemory(0x58DC6C, Add, 0x0000000D);
		SetMemory(0x58DC60, Add, 0xFFFFFF8C);
		SetMemory(0x58DC68, Add, 0xFFFFFFCC);
		SetMemory(0x58DC64, Add, 0xFFFFFF8C);
		SetMemory(0x58DC6C, Add, 0xFFFFFFCC);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000074);
		SetMemory(0x58DC68, Add, 0x00000034);
		SetMemory(0x58DC64, Add, 0x00000074);
		SetMemory(0x58DC6C, Add, 0x00000034);
		SetMemory(0x58DC60, Add, 0xFFFFFFB3);
		SetMemory(0x58DC68, Add, 0xFFFFFFF3);
		SetMemory(0x58DC64, Add, 0xFFFFFF72);
		SetMemory(0x58DC6C, Add, 0xFFFFFFB2);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000004D);
		SetMemory(0x58DC68, Add, 0x0000000D);
		SetMemory(0x58DC64, Add, 0x0000008E);
		SetMemory(0x58DC6C, Add, 0x0000004E);
		SetMemory(0x58DC60, Add, 0xFFFFFFB2);
		SetMemory(0x58DC68, Add, 0xFFFFFFF2);
		SetMemory(0x58DC64, Add, 0x0000008D);
		SetMemory(0x58DC6C, Add, 0x000000CD);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000004E);
		SetMemory(0x58DC68, Add, 0x0000000E);
		SetMemory(0x58DC64, Add, 0xFFFFFF73);
		SetMemory(0x58DC6C, Add, 0xFFFFFF33);
		SetMemory(0x58DC60, Add, 0xFFFFFF87);
		SetMemory(0x58DC68, Add, 0xFFFFFFC7);
		SetMemory(0x58DC64, Add, 0x0000007B);
		SetMemory(0x58DC6C, Add, 0x000000BB);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000079);
		SetMemory(0x58DC68, Add, 0x00000039);
		SetMemory(0x58DC64, Add, 0xFFFFFF85);
		SetMemory(0x58DC6C, Add, 0xFFFFFF45);
		SetMemory(0x58DC60, Add, 0xFFFFFF61);
		SetMemory(0x58DC68, Add, 0xFFFFFFA1);
		SetMemory(0x58DC64, Add, 0x0000005F);
		SetMemory(0x58DC6C, Add, 0x0000009F);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000009F);
		SetMemory(0x58DC68, Add, 0x0000005F);
		SetMemory(0x58DC64, Add, 0xFFFFFFA1);
		SetMemory(0x58DC6C, Add, 0xFFFFFF61);
		SetMemory(0x58DC60, Add, 0xFFFFFF45);
		SetMemory(0x58DC68, Add, 0xFFFFFF85);
		SetMemory(0x58DC64, Add, 0x00000039);
		SetMemory(0x58DC6C, Add, 0x00000079);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000BB);
		SetMemory(0x58DC68, Add, 0x0000007B);
		SetMemory(0x58DC64, Add, 0xFFFFFFC7);
		SetMemory(0x58DC6C, Add, 0xFFFFFF87);
		SetMemory(0x58DC60, Add, 0xFFFFFF33);
		SetMemory(0x58DC68, Add, 0xFFFFFF73);
		SetMemory(0x58DC64, Add, 0x0000000E);
		SetMemory(0x58DC6C, Add, 0x0000004E);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000CD);
		SetMemory(0x58DC68, Add, 0x0000008D);
		SetMemory(0x58DC64, Add, 0xFFFFFFF2);
		SetMemory(0x58DC6C, Add, 0xFFFFFFB2);
		SetMemory(0x58DC60, Add, 0xFFFFFF2C);
		SetMemory(0x58DC68, Add, 0xFFFFFF6C);
		SetMemory(0x58DC64, Add, 0xFFFFFFE1);
		SetMemory(0x58DC6C, Add, 0x00000020);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000D4);
		SetMemory(0x58DC68, Add, 0x00000094);
		SetMemory(0x58DC64, Add, 0x0000001F);
		SetMemory(0x58DC6C, Add, 0xFFFFFFE0);
		SetMemory(0x58DC60, Add, 0xFFFFFF33);
		SetMemory(0x58DC68, Add, 0xFFFFFF73);
		SetMemory(0x58DC64, Add, 0xFFFFFFB2);
		SetMemory(0x58DC6C, Add, 0xFFFFFFF2);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000CD);
		SetMemory(0x58DC68, Add, 0x0000008D);
		SetMemory(0x58DC64, Add, 0x0000004E);
		SetMemory(0x58DC6C, Add, 0x0000000E);
		SetMemory(0x58DC60, Add, 0xFFFFFF45);
		SetMemory(0x58DC68, Add, 0xFFFFFF85);
		SetMemory(0x58DC64, Add, 0xFFFFFF86);
		SetMemory(0x58DC6C, Add, 0xFFFFFFC6);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000BB);
		SetMemory(0x58DC68, Add, 0x0000007B);
		SetMemory(0x58DC64, Add, 0x0000007A);
		SetMemory(0x58DC6C, Add, 0x0000003A);
		SetMemory(0x58DC60, Add, 0xFFFFFF61);
		SetMemory(0x58DC68, Add, 0xFFFFFFA1);
		SetMemory(0x58DC64, Add, 0xFFFFFF61);
		SetMemory(0x58DC6C, Add, 0xFFFFFFA1);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000009F);
		SetMemory(0x58DC68, Add, 0x0000005F);
		SetMemory(0x58DC64, Add, 0x0000009F);
		SetMemory(0x58DC6C, Add, 0x0000005F);
		SetMemory(0x58DC60, Add, 0xFFFFFF86);
		SetMemory(0x58DC68, Add, 0xFFFFFFC6);
		SetMemory(0x58DC64, Add, 0xFFFFFF45);
		SetMemory(0x58DC6C, Add, 0xFFFFFF85);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000007A);
		SetMemory(0x58DC68, Add, 0x0000003A);
		SetMemory(0x58DC64, Add, 0x000000BB);
		SetMemory(0x58DC6C, Add, 0x0000007B);
		SetMemory(0x58DC60, Add, 0xFFFFFFB2);
		SetMemory(0x58DC68, Add, 0xFFFFFFF2);
		SetMemory(0x58DC64, Add, 0xFFFFFF33);
		SetMemory(0x58DC6C, Add, 0xFFFFFF73);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000004E);
		SetMemory(0x58DC68, Add, 0x0000000E);
		SetMemory(0x58DC64, Add, 0x000000CD);
		SetMemory(0x58DC6C, Add, 0x0000008D);
		SetMemory(0x58DC60, Add, 0xFFFFFFB2);
		SetMemory(0x58DC68, Add, 0xFFFFFFF2);
		SetMemory(0x58DC64, Add, 0x000000CB);
		SetMemory(0x58DC6C, Add, 0x0000010B);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000004E);
		SetMemory(0x58DC68, Add, 0x0000000E);
		SetMemory(0x58DC64, Add, 0xFFFFFF35);
		SetMemory(0x58DC6C, Add, 0xFFFFFEF5);
		SetMemory(0x58DC60, Add, 0xFFFFFF85);
		SetMemory(0x58DC68, Add, 0xFFFFFFC5);
		SetMemory(0x58DC64, Add, 0x000000BD);
		SetMemory(0x58DC6C, Add, 0x000000FD);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000007B);
		SetMemory(0x58DC68, Add, 0x0000003B);
		SetMemory(0x58DC64, Add, 0xFFFFFF43);
		SetMemory(0x58DC6C, Add, 0xFFFFFF03);
		SetMemory(0x58DC60, Add, 0xFFFFFF5B);
		SetMemory(0x58DC68, Add, 0xFFFFFF9B);
		SetMemory(0x58DC64, Add, 0x000000A7);
		SetMemory(0x58DC6C, Add, 0x000000E7);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000A5);
		SetMemory(0x58DC68, Add, 0x00000065);
		SetMemory(0x58DC64, Add, 0xFFFFFF59);
		SetMemory(0x58DC6C, Add, 0xFFFFFF19);
		SetMemory(0x58DC60, Add, 0xFFFFFF37);
		SetMemory(0x58DC68, Add, 0xFFFFFF77);
		SetMemory(0x58DC64, Add, 0x00000089);
		SetMemory(0x58DC6C, Add, 0x000000C9);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000C9);
		SetMemory(0x58DC68, Add, 0x00000089);
		SetMemory(0x58DC64, Add, 0xFFFFFF77);
		SetMemory(0x58DC6C, Add, 0xFFFFFF37);
		SetMemory(0x58DC60, Add, 0xFFFFFF19);
		SetMemory(0x58DC68, Add, 0xFFFFFF59);
		SetMemory(0x58DC64, Add, 0x00000065);
		SetMemory(0x58DC6C, Add, 0x000000A5);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000E7);
		SetMemory(0x58DC68, Add, 0x000000A7);
		SetMemory(0x58DC64, Add, 0xFFFFFF9B);
		SetMemory(0x58DC6C, Add, 0xFFFFFF5B);
		SetMemory(0x58DC60, Add, 0xFFFFFF03);
		SetMemory(0x58DC68, Add, 0xFFFFFF43);
		SetMemory(0x58DC64, Add, 0x0000003B);
		SetMemory(0x58DC6C, Add, 0x0000007B);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000FD);
		SetMemory(0x58DC68, Add, 0x000000BD);
		SetMemory(0x58DC64, Add, 0xFFFFFFC5);
		SetMemory(0x58DC6C, Add, 0xFFFFFF85);
		SetMemory(0x58DC60, Add, 0xFFFFFEF5);
		SetMemory(0x58DC68, Add, 0xFFFFFF35);
		SetMemory(0x58DC64, Add, 0x0000000E);
		SetMemory(0x58DC6C, Add, 0x0000004E);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000010B);
		SetMemory(0x58DC68, Add, 0x000000CB);
		SetMemory(0x58DC64, Add, 0xFFFFFFF2);
		SetMemory(0x58DC6C, Add, 0xFFFFFFB2);
		SetMemory(0x58DC60, Add, 0xFFFFFEF0);
		SetMemory(0x58DC68, Add, 0xFFFFFF30);
		SetMemory(0x58DC64, Add, 0xFFFFFFE1);
		SetMemory(0x58DC6C, Add, 0x00000020);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000110);
		SetMemory(0x58DC68, Add, 0x000000D0);
		SetMemory(0x58DC64, Add, 0x0000001F);
		SetMemory(0x58DC6C, Add, 0xFFFFFFE0);
		SetMemory(0x58DC60, Add, 0xFFFFFEF5);
		SetMemory(0x58DC68, Add, 0xFFFFFF35);
		SetMemory(0x58DC64, Add, 0xFFFFFFB2);
		SetMemory(0x58DC6C, Add, 0xFFFFFFF2);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000010B);
		SetMemory(0x58DC68, Add, 0x000000CB);
		SetMemory(0x58DC64, Add, 0x0000004E);
		SetMemory(0x58DC6C, Add, 0x0000000E);
		SetMemory(0x58DC60, Add, 0xFFFFFF03);
		SetMemory(0x58DC68, Add, 0xFFFFFF43);
		SetMemory(0x58DC64, Add, 0xFFFFFF85);
		SetMemory(0x58DC6C, Add, 0xFFFFFFC5);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000FD);
		SetMemory(0x58DC68, Add, 0x000000BD);
		SetMemory(0x58DC64, Add, 0x0000007B);
		SetMemory(0x58DC6C, Add, 0x0000003B);
		SetMemory(0x58DC60, Add, 0xFFFFFF19);
		SetMemory(0x58DC68, Add, 0xFFFFFF59);
		SetMemory(0x58DC64, Add, 0xFFFFFF5B);
		SetMemory(0x58DC6C, Add, 0xFFFFFF9B);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000E7);
		SetMemory(0x58DC68, Add, 0x000000A7);
		SetMemory(0x58DC64, Add, 0x000000A5);
		SetMemory(0x58DC6C, Add, 0x00000065);
		SetMemory(0x58DC60, Add, 0xFFFFFF37);
		SetMemory(0x58DC68, Add, 0xFFFFFF77);
		SetMemory(0x58DC64, Add, 0xFFFFFF37);
		SetMemory(0x58DC6C, Add, 0xFFFFFF77);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000C9);
		SetMemory(0x58DC68, Add, 0x00000089);
		SetMemory(0x58DC64, Add, 0x000000C9);
		SetMemory(0x58DC6C, Add, 0x00000089);
		SetMemory(0x58DC60, Add, 0xFFFFFF5B);
		SetMemory(0x58DC68, Add, 0xFFFFFF9B);
		SetMemory(0x58DC64, Add, 0xFFFFFF19);
		SetMemory(0x58DC6C, Add, 0xFFFFFF59);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000A5);
		SetMemory(0x58DC68, Add, 0x00000065);
		SetMemory(0x58DC64, Add, 0x000000E7);
		SetMemory(0x58DC6C, Add, 0x000000A7);
		SetMemory(0x58DC60, Add, 0xFFFFFF85);
		SetMemory(0x58DC68, Add, 0xFFFFFFC5);
		SetMemory(0x58DC64, Add, 0xFFFFFF03);
		SetMemory(0x58DC6C, Add, 0xFFFFFF43);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000007B);
		SetMemory(0x58DC68, Add, 0x0000003B);
		SetMemory(0x58DC64, Add, 0x000000FD);
		SetMemory(0x58DC6C, Add, 0x000000BD);
		SetMemory(0x58DC60, Add, 0xFFFFFFB2);
		SetMemory(0x58DC68, Add, 0xFFFFFFF2);
		SetMemory(0x58DC64, Add, 0xFFFFFEF5);
		SetMemory(0x58DC6C, Add, 0xFFFFFF35);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000004E);
		SetMemory(0x58DC68, Add, 0x0000000E);
		SetMemory(0x58DC64, Add, 0x0000010B);
		SetMemory(0x58DC6C, Add, 0x000000CB);
		SetMemory(0x58DC60, Add, 0xFFFFFFB2);
		SetMemory(0x58DC68, Add, 0xFFFFFFF2);
		SetMemory(0x58DC64, Add, 0x00000108);
		SetMemory(0x58DC6C, Add, 0x00000148);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000004E);
		SetMemory(0x58DC68, Add, 0x0000000E);
		SetMemory(0x58DC64, Add, 0xFFFFFEF8);
		SetMemory(0x58DC6C, Add, 0xFFFFFEB8);
		SetMemory(0x58DC60, Add, 0xFFFFFF84);
		SetMemory(0x58DC68, Add, 0xFFFFFFC4);
		SetMemory(0x58DC64, Add, 0x000000FD);
		SetMemory(0x58DC6C, Add, 0x0000013D);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000007C);
		SetMemory(0x58DC68, Add, 0x0000003C);
		SetMemory(0x58DC64, Add, 0xFFFFFF03);
		SetMemory(0x58DC6C, Add, 0xFFFFFEC3);
		SetMemory(0x58DC60, Add, 0xFFFFFF58);
		SetMemory(0x58DC68, Add, 0xFFFFFF98);
		SetMemory(0x58DC64, Add, 0x000000EB);
		SetMemory(0x58DC6C, Add, 0x0000012B);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000A8);
		SetMemory(0x58DC68, Add, 0x00000068);
		SetMemory(0x58DC64, Add, 0xFFFFFF15);
		SetMemory(0x58DC6C, Add, 0xFFFFFED5);
		SetMemory(0x58DC60, Add, 0xFFFFFF30);
		SetMemory(0x58DC68, Add, 0xFFFFFF70);
		SetMemory(0x58DC64, Add, 0x000000D2);
		SetMemory(0x58DC6C, Add, 0x00000112);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000D0);
		SetMemory(0x58DC68, Add, 0x00000090);
		SetMemory(0x58DC64, Add, 0xFFFFFF2E);
		SetMemory(0x58DC6C, Add, 0xFFFFFEEE);
		SetMemory(0x58DC60, Add, 0xFFFFFF0C);
		SetMemory(0x58DC68, Add, 0xFFFFFF4C);
		SetMemory(0x58DC64, Add, 0x000000B4);
		SetMemory(0x58DC6C, Add, 0x000000F4);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000F4);
		SetMemory(0x58DC68, Add, 0x000000B4);
		SetMemory(0x58DC64, Add, 0xFFFFFF4C);
		SetMemory(0x58DC6C, Add, 0xFFFFFF0C);
		SetMemory(0x58DC60, Add, 0xFFFFFEEE);
		SetMemory(0x58DC68, Add, 0xFFFFFF2E);
		SetMemory(0x58DC64, Add, 0x00000090);
		SetMemory(0x58DC6C, Add, 0x000000D0);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000112);
		SetMemory(0x58DC68, Add, 0x000000D2);
		SetMemory(0x58DC64, Add, 0xFFFFFF70);
		SetMemory(0x58DC6C, Add, 0xFFFFFF30);
		SetMemory(0x58DC60, Add, 0xFFFFFED5);
		SetMemory(0x58DC68, Add, 0xFFFFFF15);
		SetMemory(0x58DC64, Add, 0x00000068);
		SetMemory(0x58DC6C, Add, 0x000000A8);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000012B);
		SetMemory(0x58DC68, Add, 0x000000EB);
		SetMemory(0x58DC64, Add, 0xFFFFFF98);
		SetMemory(0x58DC6C, Add, 0xFFFFFF58);
		SetMemory(0x58DC60, Add, 0xFFFFFEC3);
		SetMemory(0x58DC68, Add, 0xFFFFFF03);
		SetMemory(0x58DC64, Add, 0x0000003C);
		SetMemory(0x58DC6C, Add, 0x0000007C);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000013D);
		SetMemory(0x58DC68, Add, 0x000000FD);
		SetMemory(0x58DC64, Add, 0xFFFFFFC4);
		SetMemory(0x58DC6C, Add, 0xFFFFFF84);
		SetMemory(0x58DC60, Add, 0xFFFFFEB8);
		SetMemory(0x58DC68, Add, 0xFFFFFEF8);
		SetMemory(0x58DC64, Add, 0x0000000E);
		SetMemory(0x58DC6C, Add, 0x0000004E);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000148);
		SetMemory(0x58DC68, Add, 0x00000108);
		SetMemory(0x58DC64, Add, 0xFFFFFFF2);
		SetMemory(0x58DC6C, Add, 0xFFFFFFB2);
		SetMemory(0x58DC60, Add, 0xFFFFFEB4);
		SetMemory(0x58DC68, Add, 0xFFFFFEF4);
		SetMemory(0x58DC64, Add, 0xFFFFFFE1);
		SetMemory(0x58DC6C, Add, 0x00000020);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000014C);
		SetMemory(0x58DC68, Add, 0x0000010C);
		SetMemory(0x58DC64, Add, 0x0000001F);
		SetMemory(0x58DC6C, Add, 0xFFFFFFE0);
		SetMemory(0x58DC60, Add, 0xFFFFFEB8);
		SetMemory(0x58DC68, Add, 0xFFFFFEF8);
		SetMemory(0x58DC64, Add, 0xFFFFFFB2);
		SetMemory(0x58DC6C, Add, 0xFFFFFFF2);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000148);
		SetMemory(0x58DC68, Add, 0x00000108);
		SetMemory(0x58DC64, Add, 0x0000004E);
		SetMemory(0x58DC6C, Add, 0x0000000E);
		SetMemory(0x58DC60, Add, 0xFFFFFEC3);
		SetMemory(0x58DC68, Add, 0xFFFFFF03);
		SetMemory(0x58DC64, Add, 0xFFFFFF84);
		SetMemory(0x58DC6C, Add, 0xFFFFFFC4);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000013D);
		SetMemory(0x58DC68, Add, 0x000000FD);
		SetMemory(0x58DC64, Add, 0x0000007C);
		SetMemory(0x58DC6C, Add, 0x0000003C);
		SetMemory(0x58DC60, Add, 0xFFFFFED5);
		SetMemory(0x58DC68, Add, 0xFFFFFF15);
		SetMemory(0x58DC64, Add, 0xFFFFFF58);
		SetMemory(0x58DC6C, Add, 0xFFFFFF98);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000012B);
		SetMemory(0x58DC68, Add, 0x000000EB);
		SetMemory(0x58DC64, Add, 0x000000A8);
		SetMemory(0x58DC6C, Add, 0x00000068);
		SetMemory(0x58DC60, Add, 0xFFFFFEEE);
		SetMemory(0x58DC68, Add, 0xFFFFFF2E);
		SetMemory(0x58DC64, Add, 0xFFFFFF30);
		SetMemory(0x58DC6C, Add, 0xFFFFFF70);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000112);
		SetMemory(0x58DC68, Add, 0x000000D2);
		SetMemory(0x58DC64, Add, 0x000000D0);
		SetMemory(0x58DC6C, Add, 0x00000090);
		SetMemory(0x58DC60, Add, 0xFFFFFF0C);
		SetMemory(0x58DC68, Add, 0xFFFFFF4C);
		SetMemory(0x58DC64, Add, 0xFFFFFF0C);
		SetMemory(0x58DC6C, Add, 0xFFFFFF4C);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000F4);
		SetMemory(0x58DC68, Add, 0x000000B4);
		SetMemory(0x58DC64, Add, 0x000000F4);
		SetMemory(0x58DC6C, Add, 0x000000B4);
		SetMemory(0x58DC60, Add, 0xFFFFFF30);
		SetMemory(0x58DC68, Add, 0xFFFFFF70);
		SetMemory(0x58DC64, Add, 0xFFFFFEEE);
		SetMemory(0x58DC6C, Add, 0xFFFFFF2E);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000D0);
		SetMemory(0x58DC68, Add, 0x00000090);
		SetMemory(0x58DC64, Add, 0x00000112);
		SetMemory(0x58DC6C, Add, 0x000000D2);
		SetMemory(0x58DC60, Add, 0xFFFFFF58);
		SetMemory(0x58DC68, Add, 0xFFFFFF98);
		SetMemory(0x58DC64, Add, 0xFFFFFED5);
		SetMemory(0x58DC6C, Add, 0xFFFFFF15);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000A8);
		SetMemory(0x58DC68, Add, 0x00000068);
		SetMemory(0x58DC64, Add, 0x0000012B);
		SetMemory(0x58DC6C, Add, 0x000000EB);
		SetMemory(0x58DC60, Add, 0xFFFFFF84);
		SetMemory(0x58DC68, Add, 0xFFFFFFC4);
		SetMemory(0x58DC64, Add, 0xFFFFFEC3);
		SetMemory(0x58DC6C, Add, 0xFFFFFF03);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000007C);
		SetMemory(0x58DC68, Add, 0x0000003C);
		SetMemory(0x58DC64, Add, 0x0000013D);
		SetMemory(0x58DC6C, Add, 0x000000FD);
		SetMemory(0x58DC60, Add, 0xFFFFFFB2);
		SetMemory(0x58DC68, Add, 0xFFFFFFF2);
		SetMemory(0x58DC64, Add, 0xFFFFFEB8);
		SetMemory(0x58DC6C, Add, 0xFFFFFEF8);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000004E);
		SetMemory(0x58DC68, Add, 0x0000000E);
		SetMemory(0x58DC64, Add, 0x00000148);
		SetMemory(0x58DC6C, Add, 0x00000108);
		SetMemory(0x58DC60, Add, 0xFFFFFFB2);
		SetMemory(0x58DC68, Add, 0xFFFFFFF2);
		SetMemory(0x58DC64, Add, 0x00000144);
		SetMemory(0x58DC6C, Add, 0x00000184);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000004E);
		SetMemory(0x58DC68, Add, 0x0000000E);
		SetMemory(0x58DC64, Add, 0xFFFFFEBC);
		SetMemory(0x58DC6C, Add, 0xFFFFFE7C);
		SetMemory(0x58DC60, Add, 0xFFFFFF83);
		SetMemory(0x58DC68, Add, 0xFFFFFFC3);
		SetMemory(0x58DC64, Add, 0x0000013B);
		SetMemory(0x58DC6C, Add, 0x0000017B);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000007D);
		SetMemory(0x58DC68, Add, 0x0000003D);
		SetMemory(0x58DC64, Add, 0xFFFFFEC5);
		SetMemory(0x58DC6C, Add, 0xFFFFFE85);
		SetMemory(0x58DC60, Add, 0xFFFFFF57);
		SetMemory(0x58DC68, Add, 0xFFFFFF97);
		SetMemory(0x58DC64, Add, 0x0000012C);
		SetMemory(0x58DC6C, Add, 0x0000016C);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000A9);
		SetMemory(0x58DC68, Add, 0x00000069);
		SetMemory(0x58DC64, Add, 0xFFFFFED4);
		SetMemory(0x58DC6C, Add, 0xFFFFFE94);
		SetMemory(0x58DC60, Add, 0xFFFFFF2D);
		SetMemory(0x58DC68, Add, 0xFFFFFF6D);
		SetMemory(0x58DC64, Add, 0x00000117);
		SetMemory(0x58DC6C, Add, 0x00000157);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000D3);
		SetMemory(0x58DC68, Add, 0x00000093);
		SetMemory(0x58DC64, Add, 0xFFFFFEE9);
		SetMemory(0x58DC6C, Add, 0xFFFFFEA9);
		SetMemory(0x58DC60, Add, 0xFFFFFF05);
		SetMemory(0x58DC68, Add, 0xFFFFFF45);
		SetMemory(0x58DC64, Add, 0x000000FD);
		SetMemory(0x58DC6C, Add, 0x0000013D);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000FB);
		SetMemory(0x58DC68, Add, 0x000000BB);
		SetMemory(0x58DC64, Add, 0xFFFFFF03);
		SetMemory(0x58DC6C, Add, 0xFFFFFEC3);
		SetMemory(0x58DC60, Add, 0xFFFFFEE2);
		SetMemory(0x58DC68, Add, 0xFFFFFF22);
		SetMemory(0x58DC64, Add, 0x000000DE);
		SetMemory(0x58DC6C, Add, 0x0000011E);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000011E);
		SetMemory(0x58DC68, Add, 0x000000DE);
		SetMemory(0x58DC64, Add, 0xFFFFFF22);
		SetMemory(0x58DC6C, Add, 0xFFFFFEE2);
		SetMemory(0x58DC60, Add, 0xFFFFFEC3);
		SetMemory(0x58DC68, Add, 0xFFFFFF03);
		SetMemory(0x58DC64, Add, 0x000000BB);
		SetMemory(0x58DC6C, Add, 0x000000FB);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000013D);
		SetMemory(0x58DC68, Add, 0x000000FD);
		SetMemory(0x58DC64, Add, 0xFFFFFF45);
		SetMemory(0x58DC6C, Add, 0xFFFFFF05);
		SetMemory(0x58DC60, Add, 0xFFFFFEA9);
		SetMemory(0x58DC68, Add, 0xFFFFFEE9);
		SetMemory(0x58DC64, Add, 0x00000093);
		SetMemory(0x58DC6C, Add, 0x000000D3);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000157);
		SetMemory(0x58DC68, Add, 0x00000117);
		SetMemory(0x58DC64, Add, 0xFFFFFF6D);
		SetMemory(0x58DC6C, Add, 0xFFFFFF2D);
		SetMemory(0x58DC60, Add, 0xFFFFFE94);
		SetMemory(0x58DC68, Add, 0xFFFFFED4);
		SetMemory(0x58DC64, Add, 0x00000069);
		SetMemory(0x58DC6C, Add, 0x000000A9);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000016C);
		SetMemory(0x58DC68, Add, 0x0000012C);
		SetMemory(0x58DC64, Add, 0xFFFFFF97);
		SetMemory(0x58DC6C, Add, 0xFFFFFF57);
		SetMemory(0x58DC60, Add, 0xFFFFFE85);
		SetMemory(0x58DC68, Add, 0xFFFFFEC5);
		SetMemory(0x58DC64, Add, 0x0000003D);
		SetMemory(0x58DC6C, Add, 0x0000007D);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000017B);
		SetMemory(0x58DC68, Add, 0x0000013B);
		SetMemory(0x58DC64, Add, 0xFFFFFFC3);
		SetMemory(0x58DC6C, Add, 0xFFFFFF83);
		SetMemory(0x58DC60, Add, 0xFFFFFE7C);
		SetMemory(0x58DC68, Add, 0xFFFFFEBC);
		SetMemory(0x58DC64, Add, 0x0000000E);
		SetMemory(0x58DC6C, Add, 0x0000004E);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000184);
		SetMemory(0x58DC68, Add, 0x00000144);
		SetMemory(0x58DC64, Add, 0xFFFFFFF2);
		SetMemory(0x58DC6C, Add, 0xFFFFFFB2);
		SetMemory(0x58DC60, Add, 0xFFFFFE78);
		SetMemory(0x58DC68, Add, 0xFFFFFEB8);
		SetMemory(0x58DC64, Add, 0xFFFFFFE1);
		SetMemory(0x58DC6C, Add, 0x00000020);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000188);
		SetMemory(0x58DC68, Add, 0x00000148);
		SetMemory(0x58DC64, Add, 0x0000001F);
		SetMemory(0x58DC6C, Add, 0xFFFFFFE0);
		SetMemory(0x58DC60, Add, 0xFFFFFE7C);
		SetMemory(0x58DC68, Add, 0xFFFFFEBC);
		SetMemory(0x58DC64, Add, 0xFFFFFFB2);
		SetMemory(0x58DC6C, Add, 0xFFFFFFF2);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000184);
		SetMemory(0x58DC68, Add, 0x00000144);
		SetMemory(0x58DC64, Add, 0x0000004E);
		SetMemory(0x58DC6C, Add, 0x0000000E);
		SetMemory(0x58DC60, Add, 0xFFFFFE85);
		SetMemory(0x58DC68, Add, 0xFFFFFEC5);
		SetMemory(0x58DC64, Add, 0xFFFFFF83);
		SetMemory(0x58DC6C, Add, 0xFFFFFFC3);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000017B);
		SetMemory(0x58DC68, Add, 0x0000013B);
		SetMemory(0x58DC64, Add, 0x0000007D);
		SetMemory(0x58DC6C, Add, 0x0000003D);
		SetMemory(0x58DC60, Add, 0xFFFFFE94);
		SetMemory(0x58DC68, Add, 0xFFFFFED4);
		SetMemory(0x58DC64, Add, 0xFFFFFF57);
		SetMemory(0x58DC6C, Add, 0xFFFFFF97);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000016C);
		SetMemory(0x58DC68, Add, 0x0000012C);
		SetMemory(0x58DC64, Add, 0x000000A9);
		SetMemory(0x58DC6C, Add, 0x00000069);
		SetMemory(0x58DC60, Add, 0xFFFFFEA9);
		SetMemory(0x58DC68, Add, 0xFFFFFEE9);
		SetMemory(0x58DC64, Add, 0xFFFFFF2C);
		SetMemory(0x58DC6C, Add, 0xFFFFFF6C);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000157);
		SetMemory(0x58DC68, Add, 0x00000117);
		SetMemory(0x58DC64, Add, 0x000000D4);
		SetMemory(0x58DC6C, Add, 0x00000094);
		SetMemory(0x58DC60, Add, 0xFFFFFEC3);
		SetMemory(0x58DC68, Add, 0xFFFFFF03);
		SetMemory(0x58DC64, Add, 0xFFFFFF05);
		SetMemory(0x58DC6C, Add, 0xFFFFFF45);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000013D);
		SetMemory(0x58DC68, Add, 0x000000FD);
		SetMemory(0x58DC64, Add, 0x000000FB);
		SetMemory(0x58DC6C, Add, 0x000000BB);
		SetMemory(0x58DC60, Add, 0xFFFFFEE2);
		SetMemory(0x58DC68, Add, 0xFFFFFF22);
		SetMemory(0x58DC64, Add, 0xFFFFFEE2);
		SetMemory(0x58DC6C, Add, 0xFFFFFF22);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000011E);
		SetMemory(0x58DC68, Add, 0x000000DE);
		SetMemory(0x58DC64, Add, 0x0000011E);
		SetMemory(0x58DC6C, Add, 0x000000DE);
		SetMemory(0x58DC60, Add, 0xFFFFFF05);
		SetMemory(0x58DC68, Add, 0xFFFFFF45);
		SetMemory(0x58DC64, Add, 0xFFFFFEC3);
		SetMemory(0x58DC6C, Add, 0xFFFFFF03);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000FB);
		SetMemory(0x58DC68, Add, 0x000000BB);
		SetMemory(0x58DC64, Add, 0x0000013D);
		SetMemory(0x58DC6C, Add, 0x000000FD);
		SetMemory(0x58DC60, Add, 0xFFFFFF2C);
		SetMemory(0x58DC68, Add, 0xFFFFFF6C);
		SetMemory(0x58DC64, Add, 0xFFFFFEA9);
		SetMemory(0x58DC6C, Add, 0xFFFFFEE9);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000D4);
		SetMemory(0x58DC68, Add, 0x00000094);
		SetMemory(0x58DC64, Add, 0x00000157);
		SetMemory(0x58DC6C, Add, 0x00000117);
		SetMemory(0x58DC60, Add, 0xFFFFFF57);
		SetMemory(0x58DC68, Add, 0xFFFFFF97);
		SetMemory(0x58DC64, Add, 0xFFFFFE94);
		SetMemory(0x58DC6C, Add, 0xFFFFFED4);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000A9);
		SetMemory(0x58DC68, Add, 0x00000069);
		SetMemory(0x58DC64, Add, 0x0000016C);
		SetMemory(0x58DC6C, Add, 0x0000012C);
		SetMemory(0x58DC60, Add, 0xFFFFFF83);
		SetMemory(0x58DC68, Add, 0xFFFFFFC3);
		SetMemory(0x58DC64, Add, 0xFFFFFE85);
		SetMemory(0x58DC6C, Add, 0xFFFFFEC5);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000007D);
		SetMemory(0x58DC68, Add, 0x0000003D);
		SetMemory(0x58DC64, Add, 0x0000017B);
		SetMemory(0x58DC6C, Add, 0x0000013B);
		SetMemory(0x58DC60, Add, 0xFFFFFFB2);
		SetMemory(0x58DC68, Add, 0xFFFFFFF2);
		SetMemory(0x58DC64, Add, 0xFFFFFE7C);
		SetMemory(0x58DC6C, Add, 0xFFFFFEBC);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000004E);
		SetMemory(0x58DC68, Add, 0x0000000E);
		SetMemory(0x58DC64, Add, 0x00000184);
		SetMemory(0x58DC6C, Add, 0x00000144);
		SetMemory(0x58DC60, Add, 0xFFFFFFB1);
		SetMemory(0x58DC68, Add, 0xFFFFFFF1);
		SetMemory(0x58DC64, Add, 0x00000181);
		SetMemory(0x58DC6C, Add, 0x000001C1);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000004F);
		SetMemory(0x58DC68, Add, 0x0000000F);
		SetMemory(0x58DC64, Add, 0xFFFFFE7F);
		SetMemory(0x58DC6C, Add, 0xFFFFFE3F);
		SetMemory(0x58DC60, Add, 0xFFFFFF83);
		SetMemory(0x58DC68, Add, 0xFFFFFFC3);
		SetMemory(0x58DC64, Add, 0x00000179);
		SetMemory(0x58DC6C, Add, 0x000001B9);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000007D);
		SetMemory(0x58DC68, Add, 0x0000003D);
		SetMemory(0x58DC64, Add, 0xFFFFFE87);
		SetMemory(0x58DC6C, Add, 0xFFFFFE47);
		SetMemory(0x58DC60, Add, 0xFFFFFF56);
		SetMemory(0x58DC68, Add, 0xFFFFFF96);
		SetMemory(0x58DC64, Add, 0x0000016C);
		SetMemory(0x58DC6C, Add, 0x000001AC);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000AA);
		SetMemory(0x58DC68, Add, 0x0000006A);
		SetMemory(0x58DC64, Add, 0xFFFFFE94);
		SetMemory(0x58DC6C, Add, 0xFFFFFE54);
		SetMemory(0x58DC60, Add, 0xFFFFFF2A);
		SetMemory(0x58DC68, Add, 0xFFFFFF6A);
		SetMemory(0x58DC64, Add, 0x0000015A);
		SetMemory(0x58DC6C, Add, 0x0000019A);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000D6);
		SetMemory(0x58DC68, Add, 0x00000096);
		SetMemory(0x58DC64, Add, 0xFFFFFEA6);
		SetMemory(0x58DC6C, Add, 0xFFFFFE66);
		SetMemory(0x58DC60, Add, 0xFFFFFF01);
		SetMemory(0x58DC68, Add, 0xFFFFFF41);
		SetMemory(0x58DC64, Add, 0x00000143);
		SetMemory(0x58DC6C, Add, 0x00000183);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000FF);
		SetMemory(0x58DC68, Add, 0x000000BF);
		SetMemory(0x58DC64, Add, 0xFFFFFEBD);
		SetMemory(0x58DC6C, Add, 0xFFFFFE7D);
		SetMemory(0x58DC60, Add, 0xFFFFFEDB);
		SetMemory(0x58DC68, Add, 0xFFFFFF1B);
		SetMemory(0x58DC64, Add, 0x00000128);
		SetMemory(0x58DC6C, Add, 0x00000168);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000125);
		SetMemory(0x58DC68, Add, 0x000000E5);
		SetMemory(0x58DC64, Add, 0xFFFFFED8);
		SetMemory(0x58DC6C, Add, 0xFFFFFE98);
		SetMemory(0x58DC60, Add, 0xFFFFFEB8);
		SetMemory(0x58DC68, Add, 0xFFFFFEF8);
		SetMemory(0x58DC64, Add, 0x00000108);
		SetMemory(0x58DC6C, Add, 0x00000148);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000148);
		SetMemory(0x58DC68, Add, 0x00000108);
		SetMemory(0x58DC64, Add, 0xFFFFFEF8);
		SetMemory(0x58DC6C, Add, 0xFFFFFEB8);
		SetMemory(0x58DC60, Add, 0xFFFFFE98);
		SetMemory(0x58DC68, Add, 0xFFFFFED8);
		SetMemory(0x58DC64, Add, 0x000000E5);
		SetMemory(0x58DC6C, Add, 0x00000125);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000168);
		SetMemory(0x58DC68, Add, 0x00000128);
		SetMemory(0x58DC64, Add, 0xFFFFFF1B);
		SetMemory(0x58DC6C, Add, 0xFFFFFEDB);
		SetMemory(0x58DC60, Add, 0xFFFFFE7D);
		SetMemory(0x58DC68, Add, 0xFFFFFEBD);
		SetMemory(0x58DC64, Add, 0x000000BF);
		SetMemory(0x58DC6C, Add, 0x000000FF);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000183);
		SetMemory(0x58DC68, Add, 0x00000143);
		SetMemory(0x58DC64, Add, 0xFFFFFF41);
		SetMemory(0x58DC6C, Add, 0xFFFFFF01);
		SetMemory(0x58DC60, Add, 0xFFFFFE66);
		SetMemory(0x58DC68, Add, 0xFFFFFEA6);
		SetMemory(0x58DC64, Add, 0x00000096);
		SetMemory(0x58DC6C, Add, 0x000000D6);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000019A);
		SetMemory(0x58DC68, Add, 0x0000015A);
		SetMemory(0x58DC64, Add, 0xFFFFFF6A);
		SetMemory(0x58DC6C, Add, 0xFFFFFF2A);
		SetMemory(0x58DC60, Add, 0xFFFFFE54);
		SetMemory(0x58DC68, Add, 0xFFFFFE94);
		SetMemory(0x58DC64, Add, 0x0000006A);
		SetMemory(0x58DC6C, Add, 0x000000AA);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000001AC);
		SetMemory(0x58DC68, Add, 0x0000016C);
		SetMemory(0x58DC64, Add, 0xFFFFFF96);
		SetMemory(0x58DC6C, Add, 0xFFFFFF56);
		SetMemory(0x58DC60, Add, 0xFFFFFE47);
		SetMemory(0x58DC68, Add, 0xFFFFFE87);
		SetMemory(0x58DC64, Add, 0x0000003D);
		SetMemory(0x58DC6C, Add, 0x0000007D);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000001B9);
		SetMemory(0x58DC68, Add, 0x00000179);
		SetMemory(0x58DC64, Add, 0xFFFFFFC3);
		SetMemory(0x58DC6C, Add, 0xFFFFFF83);
		SetMemory(0x58DC60, Add, 0xFFFFFE3F);
		SetMemory(0x58DC68, Add, 0xFFFFFE7F);
		SetMemory(0x58DC64, Add, 0x0000000F);
		SetMemory(0x58DC6C, Add, 0x0000004F);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000001C1);
		SetMemory(0x58DC68, Add, 0x00000181);
		SetMemory(0x58DC64, Add, 0xFFFFFFF1);
		SetMemory(0x58DC6C, Add, 0xFFFFFFB1);
		SetMemory(0x58DC60, Add, 0xFFFFFE3C);
		SetMemory(0x58DC68, Add, 0xFFFFFE7C);
		SetMemory(0x58DC64, Add, 0xFFFFFFE1);
		SetMemory(0x58DC6C, Add, 0x00000020);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000001C4);
		SetMemory(0x58DC68, Add, 0x00000184);
		SetMemory(0x58DC64, Add, 0x0000001F);
		SetMemory(0x58DC6C, Add, 0xFFFFFFE0);
		SetMemory(0x58DC60, Add, 0xFFFFFE3F);
		SetMemory(0x58DC68, Add, 0xFFFFFE7F);
		SetMemory(0x58DC64, Add, 0xFFFFFFB1);
		SetMemory(0x58DC6C, Add, 0xFFFFFFF1);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000001C1);
		SetMemory(0x58DC68, Add, 0x00000181);
		SetMemory(0x58DC64, Add, 0x0000004F);
		SetMemory(0x58DC6C, Add, 0x0000000F);
		SetMemory(0x58DC60, Add, 0xFFFFFE47);
		SetMemory(0x58DC68, Add, 0xFFFFFE87);
		SetMemory(0x58DC64, Add, 0xFFFFFF83);
		SetMemory(0x58DC6C, Add, 0xFFFFFFC3);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000001B9);
		SetMemory(0x58DC68, Add, 0x00000179);
		SetMemory(0x58DC64, Add, 0x0000007D);
		SetMemory(0x58DC6C, Add, 0x0000003D);
		SetMemory(0x58DC60, Add, 0xFFFFFE54);
		SetMemory(0x58DC68, Add, 0xFFFFFE94);
		SetMemory(0x58DC64, Add, 0xFFFFFF56);
		SetMemory(0x58DC6C, Add, 0xFFFFFF96);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000001AC);
		SetMemory(0x58DC68, Add, 0x0000016C);
		SetMemory(0x58DC64, Add, 0x000000AA);
		SetMemory(0x58DC6C, Add, 0x0000006A);
		SetMemory(0x58DC60, Add, 0xFFFFFE66);
		SetMemory(0x58DC68, Add, 0xFFFFFEA6);
		SetMemory(0x58DC64, Add, 0xFFFFFF2A);
		SetMemory(0x58DC6C, Add, 0xFFFFFF6A);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000019A);
		SetMemory(0x58DC68, Add, 0x0000015A);
		SetMemory(0x58DC64, Add, 0x000000D6);
		SetMemory(0x58DC6C, Add, 0x00000096);
		SetMemory(0x58DC60, Add, 0xFFFFFE7D);
		SetMemory(0x58DC68, Add, 0xFFFFFEBD);
		SetMemory(0x58DC64, Add, 0xFFFFFF01);
		SetMemory(0x58DC6C, Add, 0xFFFFFF41);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000183);
		SetMemory(0x58DC68, Add, 0x00000143);
		SetMemory(0x58DC64, Add, 0x000000FF);
		SetMemory(0x58DC6C, Add, 0x000000BF);
		SetMemory(0x58DC60, Add, 0xFFFFFE98);
		SetMemory(0x58DC68, Add, 0xFFFFFED8);
		SetMemory(0x58DC64, Add, 0xFFFFFEDB);
		SetMemory(0x58DC6C, Add, 0xFFFFFF1B);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000168);
		SetMemory(0x58DC68, Add, 0x00000128);
		SetMemory(0x58DC64, Add, 0x00000125);
		SetMemory(0x58DC6C, Add, 0x000000E5);
		SetMemory(0x58DC60, Add, 0xFFFFFEB8);
		SetMemory(0x58DC68, Add, 0xFFFFFEF8);
		SetMemory(0x58DC64, Add, 0xFFFFFEB8);
		SetMemory(0x58DC6C, Add, 0xFFFFFEF8);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000148);
		SetMemory(0x58DC68, Add, 0x00000108);
		SetMemory(0x58DC64, Add, 0x00000148);
		SetMemory(0x58DC6C, Add, 0x00000108);
		SetMemory(0x58DC60, Add, 0xFFFFFEDB);
		SetMemory(0x58DC68, Add, 0xFFFFFF1B);
		SetMemory(0x58DC64, Add, 0xFFFFFE98);
		SetMemory(0x58DC6C, Add, 0xFFFFFED8);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000125);
		SetMemory(0x58DC68, Add, 0x000000E5);
		SetMemory(0x58DC64, Add, 0x00000168);
		SetMemory(0x58DC6C, Add, 0x00000128);
		SetMemory(0x58DC60, Add, 0xFFFFFF01);
		SetMemory(0x58DC68, Add, 0xFFFFFF41);
		SetMemory(0x58DC64, Add, 0xFFFFFE7D);
		SetMemory(0x58DC6C, Add, 0xFFFFFEBD);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000FF);
		SetMemory(0x58DC68, Add, 0x000000BF);
		SetMemory(0x58DC64, Add, 0x00000183);
		SetMemory(0x58DC6C, Add, 0x00000143);
		SetMemory(0x58DC60, Add, 0xFFFFFF2A);
		SetMemory(0x58DC68, Add, 0xFFFFFF6A);
		SetMemory(0x58DC64, Add, 0xFFFFFE66);
		SetMemory(0x58DC6C, Add, 0xFFFFFEA6);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000D6);
		SetMemory(0x58DC68, Add, 0x00000096);
		SetMemory(0x58DC64, Add, 0x0000019A);
		SetMemory(0x58DC6C, Add, 0x0000015A);
		SetMemory(0x58DC60, Add, 0xFFFFFF56);
		SetMemory(0x58DC68, Add, 0xFFFFFF96);
		SetMemory(0x58DC64, Add, 0xFFFFFE54);
		SetMemory(0x58DC6C, Add, 0xFFFFFE94);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000AA);
		SetMemory(0x58DC68, Add, 0x0000006A);
		SetMemory(0x58DC64, Add, 0x000001AC);
		SetMemory(0x58DC6C, Add, 0x0000016C);
		SetMemory(0x58DC60, Add, 0xFFFFFF83);
		SetMemory(0x58DC68, Add, 0xFFFFFFC3);
		SetMemory(0x58DC64, Add, 0xFFFFFE47);
		SetMemory(0x58DC6C, Add, 0xFFFFFE87);
		Call_UnitIDVOvr
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000007D);
		SetMemory(0x58DC68, Add, 0x0000003D);
		SetMemory(0x58DC64, Add, 0x000001B9);
		SetMemory(0x58DC6C, Add, 0x00000179);
		SetMemory(0x58DC60, Add, 0xFFFFFFB1);
		SetMemory(0x58DC68, Add, 0xFFFFFFF1);
		SetMemory(0x58DC64, Add, 0xFFFFFE3F);
		SetMemory(0x58DC6C, Add, 0xFFFFFE7F);
		Call_UnitIDVOvr
	})
DoActions(FP,{
		SetMemory(0x58DC60, Add, 0x0000004F);
		SetMemory(0x58DC68, Add, 0x0000000F);
		SetMemory(0x58DC64, Add, 0x000001C1);
		SetMemory(0x58DC6C, Add, 0x00000181);
	})
Trigger {
	players = {FP},
	conditions = {
		Label(0x2027);
	},
	actions = {
		PreserveTrigger();
	}
}
Trigger {
	players = {FP},
	conditions = {
		Label(0x2028);
	},
	actions = {
		PreserveTrigger();
	}
}
NIf(FP,Memory(0x628438,AtLeast,1))
CRead(FP,Nextptrs,0x628438,"X",0xFFFFFF,1)
CDoActions(FP,{TSetMemoryX(0x66321C, SetTo, CBHeight,0xFF)})
CDoActions(FP,{
	TSetMemory(0x58DC60 + 0x14*0,Add,CBX),
	TSetMemory(0x58DC68 + 0x14*0,Add,CBX),
	TSetMemory(0x58DC64 + 0x14*0,Add,_Add(CBY,10)),
	TSetMemory(0x58DC6C + 0x14*0,Add,_Add(CBY,10)),
	CreateUnit(1, 204, 1, FP),
	TSetMemory(_Add(Nextptrs,25),SetTo,CBUnitId)
})
CRead(FP,Locs,_Add(Nextptrs,10),"X",0xFFFFFFFF)
CDoActions(FP,{
	TSetMemoryX(_Add(Nextptrs,22),SetTo,Locs,0xFFFFFFFF),
	TSetMemoryX(_Add(Nextptrs,8),SetTo,_Mul(_Mov(CBAngle),256),0xFF00),
	TSetMemoryX(_Add(Nextptrs,19),SetTo,135*256,0xFF00)
})
NIfEnd()
Trigger {
	players = {FP},
	conditions = {
		Label(0x2029);
	},
	actions = {
		PreserveTrigger();
	}
}
CJumpEnd(AllPlayers,0)
NoAirCollisionX(FP)
Enable_HideErrorMessage(FP)
function CreateBullet(UnitId,Height,Angle,X,Y)
CDoActions(FP,{
	TSetCVar(FP,CBY[2],SetTo,Y),
	TSetCVar(FP,CBX[2],SetTo,X),
	TSetCVar(FP,CBAngle[2],SetTo,Angle),
	TSetCVar(FP,CBHeight[2],SetTo,Height),
	TSetCVar(FP,CBUnitId[2],SetTo,UnitId),
	SetNext("X",0x201E,0),
	SetNext(0x201F,"X",1)
})
end
function CreateBulletPosCalc(UnitId,Height,Angle,X,Y)
CDoActions(FP,{
	TSetCVar(FP,CBY[2],SetTo,Y),
	TSetCVar(FP,CBX[2],SetTo,X),
	TSetCVar(FP,CBAngle[2],SetTo,Angle),
	TSetCVar(FP,CBHeight[2],SetTo,Height),
	TSetCVar(FP,CBUnitId[2],SetTo,UnitId),
	SetNext("X",0x2028,0),
	SetNext(0x2029,"X",1)
})
end

function Call_Gun_LocPos()
DoActionsX(FP,{SetNext("X",0x2000,0),SetNext(0x2001,"X",1)})
end


Call_UnitIDV = {SetNext("X",0x2006,0),SetNext(0x2007,"X",1)}
Call_UnitIDVLair = {SetNext("X",0x2008,0),SetNext(0x2009,"X",1)}
Call_UnitIDVHive = {SetNext("X",0x200A,0),SetNext(0x200B,"X",1)}
Call_ZergSpawnSet_Lair = {SetNext("X",0x2010,0),SetNext(0x2011,"X",1)}
Call_ZergSpawnSet_Hive = {SetNext("X",0x2012,0),SetNext(0x2013,"X",1)}
function Call_Gun_TempSave()
DoActionsX(FP,{SetNext("X",0x2014,0),SetNext(0x2015,"X",1)})
end
Call_UnitIDV2Lair = {SetNext("X",0x2016,0),SetNext(0x2017,"X",1)}
Call_UnitIDV2Hive = {SetNext("X",0x2018,0),SetNext(0x2019,"X",1)}

CereZergShape = {SetNext("X",0x2020,0),SetNext(0x2021,"X",1)}
CereEasyShape = {SetNext("X",0x2022,0),SetNext(0x2023,"X",1)}
CereHardShape = {SetNext("X",0x2024,0),SetNext(0x2025,"X",1)}
CereBurstShape = {SetNext("X",0x2026,0),SetNext(0x2027,"X",1)}
CereDiff = {CereEasyShape,CereHardShape,CereBurstShape}
GiveUnitsArr = {}
VArrPatchTable ={}
CIfOnce(FP,Always()) -- onPluginStart





for i = 1, #HeroIndexArr do
Trigger {
	players = {FP},
	conditions = {
		Label(0);
	},
	actions = {
		SetCVar(FP,RepHeroIndex[2],SetTo,HeroIndexArr[i]);
		SetNext("X",0x200E,0);
		SetNext(0x200F,"X",1);
	}
}
end







for i = 0, 5 do
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		Command(i,AtLeast,1,111);
		},
	actions = {
		SetCVar(FP,SetPlayers[2],Add,1);
		
		}
		}
end
for i = 0, 29 do
	local UnitTable3 = {3,8,10,17,19,21,23,25,28,29,52,57,61,63,65,66,67,68,71,75,76,77,78,79,80,81,86,88,98,102}
table.insert(VArrPatchTable,SetVArrayX(VArr(UArr3,i),"Value",SetTo,UnitTable3[i+1]))

end

for i = 0, 3 do
	local ZergUnitLair = {54, 53, 40, 39}
	local ZergUnitHive = {48, 51, 104, 53}
table.insert(VArrPatchTable,SetVArrayX(VArr(ZUnitLairArr,i),"Value",SetTo,ZergUnitLair[i+1]))
table.insert(VArrPatchTable,SetVArrayX(VArr(ZUnitHiveArr,i),"Value",SetTo,ZergUnitHive[i+1]))
end

for i = 0, 15 do
	local UnitTable = {10,17,19,21,25,28,29,3,8,17,21,28,52,57,23,102}
	local UnitTable2 = {63,65,66,67,75,76,77,78,79,88,86,81,80,98,74,75}
table.insert(VArrPatchTable,SetVArrayX(VArr(UArr1,i),"Value",SetTo,UnitTable[i+1]))
table.insert(VArrPatchTable,SetVArrayX(VArr(UArr2,i),"Value",SetTo,UnitTable2[i+1]))
end


table.insert(VArrPatchTable,SetCVar(FP,HPointVar[2],SetTo,HPointFactor))
table.insert(VArrPatchTable,SetCVar(FP,AtkUpMax[2],SetTo,255))



DoActions2X(FP,VArrPatchTable,1)

for j=1, 6 do
Marine[j] = f_GetStrptr(FP,V(0x306+j-1),"\x0D\x0D\x0D"..Color[j].."NM".._0D)
HMarine[j] = f_GetStrptr(FP,V(0x30C+j-1),"\x0D\x0D\x0D"..Color[j].."HM".._0D)
LumMarine[j] = f_GetStrptr(FP,V(0x312+j-1),"\x0D\x0D\x0D"..Color[j].."LM".._0D)
Lumia[j] = f_GetStrptr(FP,V(0x318+j-1),"\x0D\x0D\x0D"..Color[j].."RM".._0D)
LumiaCT[j] = f_GetStrptr(FP,V(0x31E+j-1),"\x0D\x0D\x0D"..Player[j].."Lumia".._0D)
ShieldT[j] = f_GetStrptr(FP,V(0x324+j-1),"\x0D\x0D\x0D"..Player[j].."Shield".._0D)
ATKExitText[j] = f_GetStrptr(FP,V(0x32A+j-1),"\x0D\x0D\x0D"..Player[j].."Exit".._0D)
ATKUpText1[j] = f_GetStrptr(FP,V(0x330+j-1),"\x0D\x0D\x0D"..Player[j].."100".._0D)
ATKUpText2[j] = f_GetStrptr(FP,V(0x336+j-1),"\x0D\x0D\x0D"..Player[j].."200".._0D)
PlayerName[j] = f_GetStrptr(FP,V(0x33D+j-1),"\x0D\x0D\x0D"..Player[j].."".._0D)
MarineL[j] = GetStrSizeD(1,Marine[j])
HMarineL[j] = GetStrSizeD(1,HMarine[j])
LumMarineL[j] = GetStrSizeD(1,LumMarine[j])
LumiaL[j] = GetStrSizeD(1,Lumia[j])
end
for i = 0, 5 do
ItoName(FP,i,VArr(Names[i+1],0),ColorCode[i+1])
_0DPatchforVArr(Names[i+1],6)
end
HeroKill = f_GetStrptr(FP,HeroTxtStrPtr,"\x0D\x0D\x0DHK".._0D)
HeroKill = f_GetStrptr(FP,UPCompStrPtr,"\x0D\x0D\x0DUPC".._0D)
f_GetStrptr(FP,HiddenModeStrPtr,"HD".._0D)
t00 = "\x0d\x0d\x0d\x12\x02◆ \x0d\x0d\x0d\x0d\x0d\x0d\x0d\x0d"
t01 = "\x0d\x0d\x0d\x04의 \x04Marine\x04이 \x1C우주\x04의 \x15먼지\x04로 돌아갔습니다.. \x02◆\x0d\x0d\x0d\x0d\x0d\x0d\x0d\x0d"
t02 = "\x0d\x0d\x0d\x04의 \x1BH \x04Marine\x04이 \x1C우주\x04의 \x15먼지\x04로 돌아갔습니다.. \x04(\x08Death \x10C\x0Fount \x04+ \x060.5\x04)\x02◆\x0d\x0d\x0d\x0d\x0d\x0d\x0d\x0d"
t04 = "\x0d\x0d\x0d\x04의 \x11Ｎ\x07Ｅ\x1FＢ\x1CＵ\x17Ｌ\x11Ａ \x04가 \x1C우주\x04의 \x15먼지\x04로 돌아갔습니다.. \x04(\x08Death \x10C\x0Fount \x04+ \x063\x04)\x02◆\x0d\x0d\x0d\x0d\x0d\x0d\x0d\x0d"
t10 = "\x0d\x0d\x0d\x13\x03† \x04\x0d\x0d\x0d\x0d\x0d\x0d\x0d\x0d"
--플레이어 이름
t11 = "\x0d\x0d\x0d\x04이(가) \x06【 \x08Ｌ\x11ｕ\x03ｍ\x18ｉ\x0EＡ \x10】 \x04를 \x19소환\x04하였습니다.  \x03†\x0d\x0d\x0d\x0d\x0d\x0d\x0d\x0d"
t12 = "\x0d\x0d\x0d\x12\x07『 \x0d\x0d\x0d\x0d\x0d\x0d\x0d\x0d"
--플레이어 이름
t13 = "\x0d\x0d\x0d\x04이(가) \x1C빛의 보호막\x04을 사용했습니다. \x07』\x0d\x0d\x0d\x0d\x0d\x0d\x0d\x0d"
t14 = "\x0d\x0d\x0d\\x13\x0d\x0d\x0d\x0d\x0d\x0d\x0d\x0d"
t15 = "\x0d\x0d\x0d\x04(이)가 게임에서 나갔습니다."
t16 = "\x0d\x0d\x0d\x04(이)가 \x03공격력 \x04업그레이드를 100까지 끝냈습니다.\x0d\x0d\x0d\x0d\x0d\x0d\x0d\x0d"
t17 = "\x0d\x0d\x0d\x04(이)가 \x03공격력 \x04업그레이드를 200까지 끝냈습니다.\x0d\x0d\x0d\x0d\x0d\x0d\x0d\x0d"
t18 = "\x0d\x0d\x0d\x0d\x0d\x0d\x0d\x0d\x0d\x13\x0d\x0d\x0d\x0d\x0d\x0d\x0d"
t19 = "\x0d\x0d\x0d\x0d\x0d\x0d\x13\x15▶ ▶ ▶ [\x04 \x0d\x0d\x0d\x0d\x0d\x0d"
t20 = "\x0d\x0d\x0d\x0d\x0d\x0d \x11사살\x10 +\x17 \x0d\x0d\x0d\x0d\x0d\x0d"
t21 = "\x0d\x0d\x0d\x0d\x0d\x0d\x0d\x0d\x0d\x0d\x0d\x0d P t s \x15] \x15◀ ◀ ◀\x0d\x0d\x0d\x0d\x0d\x0d"
t22 = "\x0d\x0d\x0d\x0d\x0d\x0d\x0d\x04 미네랄을 소비하여 총 \x0d\x0d\x0d\x0d\x0d\x0d"
t23 = "\x0d\x0d\x0d\x0d\x0d\x0d\x0d\x04 \x04회 업그레이드를 완료하였습니다. \x07』\x0d\x0d\x0d\x0d\x0d\x0d"

t24 = "\x0d\x0d\x0d\x0d\x0d\x04현재 선택가능 플레이어는...\x0d\x0d\x0d\x0d\x0d"
t25 = {
"\x0d\x0d\x0d\x0d\x0d\x04 : \x04[Q] \x0EEASY \x04[W] \x08HARD \x04[E] \x11BURST\x0d\x0d\x0d\x0d\x0d",
"\x0d\x0d\x0d\x0d\x0d\x04 : \x03[Q] \x0EEASY \x04[W] \x08HARD \x04[E] \x11BURST\x0d\x0d\x0d\x0d\x0d",
"\x0d\x0d\x0d\x0d\x0d\x04 : \x04[Q] \x0EEASY \x03[W] \x08HARD \x04[E] \x11BURST\x0d\x0d\x0d\x0d\x0d",
"\x0d\x0d\x0d\x0d\x0d\x04 : \x04[Q] \x0EEASY \x04[W] \x08HARD \x03[E] \x11BURST\x0d\x0d\x0d\x0d\x0d"
}

t26 = {
"\x0d\x0d\x0d\x0d\x0d\x04 : \x02[Q] \x0EEASY \x02[W] \x08HARD \x02[E] \x11BURST\x0d\x0d\x0d\x0d\x0d",
"\x0d\x0d\x0d\x0d\x0d\x04 : \x03[Q] \x0EEASY \x02[W] \x02HARD \x02[E] \x02BURST\x0d\x0d\x0d\x0d\x0d",
"\x0d\x0d\x0d\x0d\x0d\x04 : \x02[Q] \x02EASY \x03[W] \x08HARD \x02[E] \x02BURST\x0d\x0d\x0d\x0d\x0d",
"\x0d\x0d\x0d\x0d\x0d\x04 : \x02[Q] \x02EASY \x02[W] \x02HARD \x03[E] \x11BURST\x0d\x0d\x0d\x0d\x0d"
}
t28 = {
"\x0d\x0d\x0d\x0d\x0d\x04 : \x02[Q] \x02신나는 \x02[W] \x02진지한 \x02[E] \x02강렬한 \x02[R] \x02강렬한2\x0d\x0d\x0d\x0d\x0d",
"\x0d\x0d\x0d\x0d\x0d\x04 : \x03[Q] \x0E신나는 \x02[W] \x02진지한 \x02[E] \x02강렬한 \x02[R] \x02강렬한2\x0d\x0d\x0d\x0d\x0d",
"\x0d\x0d\x0d\x0d\x0d\x04 : \x02[Q] \x02신나는 \x03[W] \x08진지한 \x02[E] \x02강렬한 \x02[R] \x02강렬한2\x0d\x0d\x0d\x0d\x0d",
"\x0d\x0d\x0d\x0d\x0d\x04 : \x02[Q] \x02신나는 \x02[W] \x02진지한 \x03[E] \x11강렬한 \x02[R] \x02강렬한2\x0d\x0d\x0d\x0d\x0d",
"\x0d\x0d\x0d\x0d\x0d\x04 : \x02[Q] \x02신나는 \x02[W] \x02진지한 \x02[E] \x02강렬한 \x03[R] \x10강렬한2\x0d\x0d\x0d\x0d\x0d"
}

t27 = {
"\x0d\x0d\x0d\x0d\x0d\x04 : \x04[Q] \x0E신나는 \x04[W] \x08진지한 \x04[E] \x11강렬한 \x04[R] \x10강렬한2 \x04[T] \x17메모리 \x04[X] \x1F익시드 \x04[M] \x1C스페셜\x0d\x0d\x0d\x0d\x0d", -- GMode 3
"\x0d\x0d\x0d\x0d\x0d\x04 : \x03[Q] \x0E신나는 \x04[W] \x08진지한 \x04[E] \x11강렬한 \x04[R] \x10강렬한2 \x04[T] \x17메모리 \x04[X] \x1F익시드 \x04[M] \x1C스페셜\x0d\x0d\x0d\x0d\x0d",
"\x0d\x0d\x0d\x0d\x0d\x04 : \x04[Q] \x0E신나는 \x03[W] \x08진지한 \x04[E] \x11강렬한 \x04[R] \x10강렬한2 \x04[T] \x17메모리 \x04[X] \x1F익시드 \x04[M] \x1C스페셜\x0d\x0d\x0d\x0d\x0d",
"\x0d\x0d\x0d\x0d\x0d\x04 : \x04[Q] \x0E신나는 \x04[W] \x08진지한 \x03[E] \x11강렬한 \x04[R] \x10강렬한2 \x04[T] \x17메모리 \x04[X] \x1F익시드 \x04[M] \x1C스페셜\x0d\x0d\x0d\x0d\x0d",
"\x0d\x0d\x0d\x0d\x0d\x04 : \x04[Q] \x0E신나는 \x04[W] \x08진지한 \x04[E] \x11강렬한 \x03[R] \x10강렬한2 \x04[T] \x17메모리 \x04[X] \x1F익시드 \x04[M] \x1C스페셜\x0d\x0d\x0d\x0d\x0d",
"\x0d\x0d\x0d\x0d\x0d\x04 : \x04[Q] \x0E신나는 \x04[W] \x08진지한 \x04[E] \x11강렬한 \x04[R] \x10강렬한2 \x03[T] \x17메모리 \x04[X] \x1F익시드 \x04[M] \x1C스페셜\x0d\x0d\x0d\x0d\x0d",
"\x0d\x0d\x0d\x0d\x0d\x04 : \x04[Q] \x0E신나는 \x04[W] \x08진지한 \x04[E] \x11강렬한 \x04[R] \x10강렬한2 \x04[T] \x17메모리 \x03[X] \x1F익시드 \x04[M] \x1C스페셜\x0d\x0d\x0d\x0d\x0d",
"\x0d\x0d\x0d\x0d\x0d\x04 : \x04[Q] \x0E신나는 \x04[W] \x08진지한 \x04[E] \x11강렬한 \x04[R] \x10강렬한2 \x04[T] \x17메모리 \x04[X] \x1F익시드 \x03[M] \x1C스페셜\x0d\x0d\x0d\x0d\x0d"
}
Print_String(FP,_TMem(Arr(Str00,0)),t00,0)
Print_String(FP,_TMem(Arr(Str01,0)),t01,0)
Print_String(FP,_TMem(Arr(Str02,0)),t02,0)
Print_String(FP,_TMem(Arr(Str04,0)),t04,0)
Print_String(FP,_TMem(Arr(Str10,0)),t10,0)
Print_String(FP,_TMem(Arr(Str11,0)),t11,0)
Print_String(FP,_TMem(Arr(Str12,0)),t12,0)
Print_String(FP,_TMem(Arr(Str13,0)),t13,0)
Print_String(FP,_TMem(Arr(Str14,0)),t14,0)
Print_String(FP,_TMem(Arr(Str15,0)),t15,0)
Print_String(FP,_TMem(Arr(Str16,0)),t16,0)
Print_String(FP,_TMem(Arr(Str17,0)),t17,0)
Print_String(FP,_TMem(Arr(Str18,0)),t18,0)
Print_String(FP,_TMem(Arr(Str19,0)),t19,0)
Print_String(FP,_TMem(Arr(Str20,0)),t20,0)
Print_String(FP,_TMem(Arr(Str21,0)),t21,0)
Print_String(FP,_TMem(Arr(Str22,0)),t22,0)
Print_String(FP,_TMem(Arr(Str23,0)),t23,0)
Print_String(FP,_TMem(Arr(Str24,0)),t24,0)

Str25L = {}
Str26L = {}
Str27L = {}
Str28L = {}
for i = 0, 3 do
Print_String(FP,_TMem(Arr(Str25[i+1],0)),t25[i+1],0)
table.insert(Str25L,GetStrSizeD(0,t25[i+1]))
Print_String(FP,_TMem(Arr(Str26[i+1],0)),t26[i+1],0)
table.insert(Str26L,GetStrSizeD(0,t26[i+1]))
end

for i = 0, 4 do
Print_String(FP,_TMem(Arr(Str28[i+1],0)),t28[i+1],0)
table.insert(Str28L,GetStrSizeD(0,t28[i+1]))
end
for i = 0, 7 do
Print_String(FP,_TMem(Arr(Str27[i+1],0)),t27[i+1],0)
table.insert(Str27L,GetStrSizeD(0,t27[i+1]))
end


Str00L = GetStrSizeD(0,t00)
Str01L = GetStrSizeD(0,t01)
Str02L = GetStrSizeD(0,t02)
Str10L = GetStrSizeD(0,t10)
Str11L = GetStrSizeD(0,t11)
Str12L = GetStrSizeD(0,t12)
Str13L = GetStrSizeD(0,t13)
Str14L = GetStrSizeD(0,t14)
Str15L = GetStrSizeD(0,t15)
Str16L = GetStrSizeD(0,t16)
Str17L = GetStrSizeD(0,t17)
Str18L = GetStrSizeD(0,t18)
Str19L = GetStrSizeD(0,t19)
Str20L = GetStrSizeD(0,t20)
Str21L = GetStrSizeD(0,t21)
Str22L = GetStrSizeD(0,t22)
Str23L = GetStrSizeD(0,t23)
Str24L = GetStrSizeD(0,t24)
for i = 0, 5 do
t03 = "\x0d\x0d\x0d\x04의 \x03G\x0Fa\x10L\x0Fa\x03X\x0Fy "..Color[i+1].."M\x16arine\x04이 \x1C우주\x04의 \x15먼지\x04로 돌아갔습니다.. \x04(\x08Death \x10C\x0Fount \x04+ \x061\x04)\x02◆\x0d\x0d\x0d\x0d\x0d\x0d\x0d\x0d"
Print_String(FP,_TMem(Arr(Str03[i+1],0)),t03,0)
Str03L[i+1] = GetStrSizeD(0,t03)
end
Str04L = GetStrSizeD(0,t04)
for i = 0, 5 do
f_MemCpy(FP,V(0x306+i),_TMem(Arr(Str00,0),"X","X",1),Str00L-3)
f_MovCpy(FP,_Add(V(0x306+i),Str00L),VArr(Names[i+1],0),4*6)
f_MemCpy(FP,_Add(V(0x306+i),Str00L+(4*6)+3),_TMem(Arr(Str01,0),"X","X",1),Str01L-3)
f_MemCpy(FP,V(0x30C+i),_TMem(Arr(Str00,0),"X","X",1),Str00L-3)
f_MovCpy(FP,_Add(V(0x30C+i),Str00L),VArr(Names[i+1],0),4*6)
f_MemCpy(FP,_Add(V(0x30C+i),Str00L+(4*6)+3),_TMem(Arr(Str02,0),"X","X",1),Str02L-3)
f_MemCpy(FP,V(0x312+i),_TMem(Arr(Str00,0),"X","X",1),Str00L-3)
f_MovCpy(FP,_Add(V(0x312+i),Str00L),VArr(Names[i+1],0),4*6)
f_MemCpy(FP,_Add(V(0x312+i),Str00L+(4*6)+3),_TMem(Arr(Str03[i+1],0),"X","X",1),Str03L[i+1]-3)
f_MemCpy(FP,V(0x318+i),_TMem(Arr(Str00,0),"X","X",1),Str00L-3)
f_MovCpy(FP,_Add(V(0x318+i),Str00L),VArr(Names[i+1],0),4*6)
f_MemCpy(FP,_Add(V(0x318+i),Str00L+(4*6)+3),_TMem(Arr(Str04,0),"X","X",1),Str04L-3)
f_MemCpy(FP,V(0x31E+i),_TMem(Arr(Str10,0),"X","X",1),Str10L-3)
f_MovCpy(FP,_Add(V(0x31E+i),Str10L),VArr(Names[i+1],0),4*6)
f_MemCpy(FP,_Add(V(0x31E+i),Str10L+(4*6)+3),_TMem(Arr(Str11,0),"X","X",1),Str11L-3)
f_MemCpy(FP,V(0x324+i),_TMem(Arr(Str12,0),"X","X",1),Str12L-3)
f_MovCpy(FP,_Add(V(0x324+i),Str12L),VArr(Names[i+1],0),4*6)
f_MemCpy(FP,_Add(V(0x324+i),Str12L+(4*6)+3),_TMem(Arr(Str13,0),"X","X",1),Str13L-3)
f_MemCpy(FP,V(0x32A+i),_TMem(Arr(Str14,0),"X","X",1),Str14L-3)
f_MovCpy(FP,_Add(V(0x32A+i),Str14L),VArr(Names[i+1],0),4*6)
f_MemCpy(FP,_Add(V(0x32A+i),Str14L+(4*6)+3),_TMem(Arr(Str15,0),"X","X",1),Str15L-3)
f_MemCpy(FP,V(0x330+i),_TMem(Arr(Str14,0),"X","X",1),Str14L-3)
f_MovCpy(FP,_Add(V(0x330+i),Str14L),VArr(Names[i+1],0),4*6)
f_MemCpy(FP,_Add(V(0x330+i),Str14L+(4*6)+3),_TMem(Arr(Str16,0),"X","X",1),Str16L-3)
f_MemCpy(FP,V(0x336+i),_TMem(Arr(Str14,0),"X","X",1),Str14L-3)
f_MovCpy(FP,_Add(V(0x336+i),Str14L),VArr(Names[i+1],0),4*6)
f_MemCpy(FP,_Add(V(0x336+i),Str14L+(4*6)+3),_TMem(Arr(Str17,0),"X","X",1),Str17L-3)
f_MemCpy(FP,V(0x33D+i),_TMem(Arr(Str18,0),"X","X",1),Str18L-3)
f_MovCpy(FP,_Add(V(0x33D+i),Str18L),VArr(Names[i+1],0),5*4)
end
f_MemCpy(FP,HeroTxtStrPtr,_TMem(Arr(Str19,0),"X","X",1),Str19L-3)
--f_MemCpy(FP,_Add(HeroTxtStrPtr,Str19L),UnitNamePtr+(i*0x20),0x20)
f_MemCpy(FP,_Add(HeroTxtStrPtr,Str19L-3+0x20),_TMem(Arr(Str20,0),"X","X",1),Str20L-3)
--ItoDec(FP,HPoint,_TMem(Arr(HPointT,0),"X","X",1),2,0x1F,0)
--f_MemCpy(FP,_Add(HeroTxtStrPtr,Str19L+0x20+Str20L),_TMem(Arr(HPointT,0),"X","X",1),16)
f_MemCpy(FP,_Add(HeroTxtStrPtr,Str19L-3+0x20+Str20L-3+16),_TMem(Arr(Str21,0),"X","X",1),Str21L-3)
f_MemCpy(FP,UPCompStrPtr,_TMem(Arr(Str12,0),"X","X",1),Str12L-3)
--f_MemCpy(FP,_Add(UPCompStrPtr,Str12L-3),_TMem(Arr(UpCompTxt,0),"X","X",1),5*4)
f_MemCpy(FP,_Add(UPCompStrPtr,Str12L-3+20),_TMem(Arr(Str22,0),"X","X",1),Str22L-3)
--f_MemCpy(FP,_Add(UPCompStrPtr,Str12L-3+20+Str22L-3),_TMem(Arr(UpCompRet,0),"X","X",1),5*4)
f_MemCpy(FP,_Add(UPCompStrPtr,Str12L-3+20+Str22L-3+20),_TMem(Arr(Str23,0),"X","X",1),Str23L-3)
--f_Read(FP,0x6559A8,InfArmorFactor,"X",0xFFFF)
CRead(FP,_Mem(InfArmorFactor),0x6559A8,"X",0xFFFF)
--f_Read(FP,,InfWeaponFactor,"X",0xFFFF0000)
CRead(FP,_Mem(InfWeaponFactor),0x6559A8+0xC,"X",0xFFFF0000)
CDiv(FP,InfWeaponFactor,65536)
for i=0, 227 do
Print_String(FP,EPD(0x591000+(0x20*i)),DecodeUnit(i),0)
end

CMov(FP,0x6509B0,EPD(0x591000))
NWhile(FP,Memory(0x6509B0,AtMost,EPD(0x591000+(0x20*227))))
Trigger2(FP,{DeathsX(CurrentPlayer,Exactly,0,0,0xFF)},{
SetDeathsX(CurrentPlayer,SetTo,0x0D,0,0xFF)
},{preserved})
Trigger2(FP,{DeathsX(CurrentPlayer,Exactly,0,0,0xFF00)},{
SetDeathsX(CurrentPlayer,SetTo,0x0D*0x100,0,0xFF00)
},{preserved})
Trigger2(FP,{DeathsX(CurrentPlayer,Exactly,0,0,0xFF0000)},{
SetDeathsX(CurrentPlayer,SetTo,0x0D*0x10000,0,0xFF0000)
},{preserved})
Trigger2(FP,{DeathsX(CurrentPlayer,Exactly,0,0,0xFF000000)},{
SetDeathsX(CurrentPlayer,SetTo,0x0D*0x1000000,0,0xFF000000)
},{preserved})
CAdd(FP,0x6509B0,1)
NWhileEnd()
SetRecoverCp()
RecoverCp(FP)
CIfEnd()

CJump(FP,0xF01)
Trigger {
	players = {FP},
	conditions = {
		Label(0x3000);
	},
	actions = {
		PreserveTrigger();
	}
}
f_Read(FP,TempUpgradePtr,CurrentUpgrade)


CIf(FP,CVar(FP,TempUpgradeMaskRet[2],AtMost,256^2))
CMod(FP,CurrentUpgrade,_Mul(TempUpgradeMaskRet,256))
CIfEnd()
CDiv(FP,CurrentUpgrade,TempUpgradeMaskRet)

CIfX(FP,CDeaths(FP,AtLeast,1,ifUpisAtk))
CMov(FP,UpGradeAv,AtkUpMax)
CElseX()
CMov(FP,UpGradeAv,255)
CIfXEnd()
DoActionsX(FP,SetCDeaths(FP,SetTo,0,ifUpisAtk))


CMov(FP,0x6509B0,UpgradeCP)
CJumpEnd(FP,CurrentUpgrade[2])
NWhile(FP,{
TCVar(FP,CurrentUpgrade[2],AtMost,_Sub(UpGradeAv,1)),
CVar(FP,UpgradeMax[2],AtLeast,1),
TAccumulate(CurrentPlayer,AtLeast,_Mul(CurrentUpgrade,UpgradeFactor),Ore),
TMemoryX(TempUpgradePtr,AtMost,_Mul(TempUpgradeMaskRet,_Sub(UpGradeAv,1)),_Mul(TempUpgradeMaskRet,255))})
CDoActions(FP,{
TSetCVar(FP,CurrentFactor[2],Add,_Mul(CurrentUpgrade,UpgradeFactor)),
TSetResources(CurrentPlayer,Subtract,_Mul(CurrentUpgrade,UpgradeFactor),Ore),
SetCVar(FP,CurrentUpgrade[2],Add,1),
SetCVar(FP,UpCount[2],Add,1),
SetCVar(FP,UpgradeMax[2],Subtract,1),
--TSetCVar(FP,CurrentFactor[2],Add,_Mul(CurrentUpgrade,UpgradeFactor)),
TSetMemoryX(TempUpgradePtr,Add,_Mul(TempUpgradeMaskRet,1),_Mul(TempUpgradeMaskRet,255))})
CJump(FP,CurrentUpgrade[2])
NWhileEnd()
NJump(FP,0x24,CVar(FP,UpCount[2],Exactly,0),{
		TSetMemory(0x6509B0,SetTo,UpgradeCP),
		DisplayText("\x12\x07『 \x04잔액이 부족합니다. \x07』",4),
		SetMemory(0x6509B0,SetTo,FP)
		})
ItoDec(FP,CurrentFactor,VArr(UpCompTxt,0),2,0x1F,0)
ItoDec(FP,UpCount,VArr(UpCompRet,0),2,0x19,0)
_0DPatchforVArr(UpCompRet,4)
_0DPatchforVArr(UpCompTxt,4)
f_Movcpy(FP,_Add(UPCompStrPtr,Str12L-3),VArr(UpCompTxt,0),5*4)
f_Movcpy(FP,_Add(UPCompStrPtr,Str12L-3+20+Str22L-3),VArr(UpCompRet,0),5*4)
--[[
for i = 0, 5 do
CIf(FP,{CVar(FP,UpgradeCP[2],Exactly,i),Command(i,AtLeast,1,"Terran Medic")})
CDoActions(FP,{TSetMemoryX(AtkUpgradePtrArr[i+1],SetTo,_Mul(CurrentUpgrade,(256^AtkUpgradeMaskRetArr[i+1])),255*(256^AtkUpgradeMaskRetArr[i+1]))})
DoActions(FP,{RemoveUnit("Terran Medic",i)})
CIfEnd()
CIf(FP,{CVar(FP,UpgradeCP[2],Exactly,i),Command(i,AtLeast,1,"Terran Firebat")})
CDoActions(FP,{TSetMemoryX(DefUpgradePtrArr[i+1],SetTo,_Mul(CurrentUpgrade,(256^AtkUpgradeMaskRetArr[i+1])),255*(256^DefUpgradeMaskRetArr[i+1]))})
DoActions(FP,{RemoveUnit("Terran Firebat",i)})
CIfEnd()
end
for j = 0,7 do
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CVar(FP,CurrentUpgrade[2],Exactly,j^2,j^2);
	},
	actions = {
		SetMemoryX(UpgradePtrArr[i+1],SetTo,j^2*(256^UpgradeMaskRetArr[i+1]),j^2*(256^UpgradeMaskRetArr[i+1]));
		SetCVar(FP,CurrentUpgrade[2],SetTo,j^2,j^2);
		PreserveTrigger();
	}
	}
end
--]]
CDoActions(FP,{
		TSetMemory(0x6509B0,SetTo,UpgradeCP),
		DisplayText("\x0D\x0D\x0DUPC".._0D,4),
		SetMemory(0x6509B0,SetTo,FP)
		})
NJumpEnd(FP,0x24)

 Trigger {
	players = {FP},
	conditions = {
		Label(0x3001);
	},
	actions = {
		PreserveTrigger();
	}
}



 Trigger {
	players = {FP},
	conditions = {
		Label(0x3002);
	},
	actions = {
		PreserveTrigger();
	}
}

Call_SaveCp()
f_Read(FP,BackupCP,HIndex,"X",0xFF)
CMod(FP,HIndex2,HIndex,2,0xFF)
f_Read(FP,_Add(_Div(HIndex,2),EPD(0x663EB8)),HPoint)
NIfX(FP,{TMemory(_Mem(HIndex2),AtLeast,1)})
CDiv(FP,HPoint,65536)
NElseX()
CMod(FP,HPoint,65536)
NIfXEnd()
CMov(FP,HPoint10,_Mul(HPoint,HPointVar))
ItoDec(FP,HPoint10,VArr(HPointT,0),2,0x1F,0)
for j=0,4 do
TriggerX(FP,{VArrayX(VArr(HPointT,j),"Value",Exactly,0,0xFF)},{
SetVArrayX(VArr(HPointT,j),"Value",SetTo,0x0D,0xFF)
},{preserved})
TriggerX(FP,{VArrayX(VArr(HPointT,j),"Value",Exactly,0,0xFF00)},{
SetVArrayX(VArr(HPointT,j),"Value",SetTo,0x0D*0x100,0xFF00)
},{preserved})
TriggerX(FP,{VArrayX(VArr(HPointT,j),"Value",Exactly,0,0xFF0000)},{
SetVArrayX(VArr(HPointT,j),"Value",SetTo,0x0D*0x10000,0xFF0000)
},{preserved})
TriggerX(FP,{VArrayX(VArr(HPointT,j),"Value",Exactly,0,0xFF000000)},{
SetVArrayX(VArr(HPointT,j),"Value",SetTo,0x0D*0x1000000,0xFF000000)
},{preserved})
end
f_MovCpy(FP,_Add(HeroTxtStrPtr,Str19L+0x20+Str20L),VArr(HPointT,0),16)
f_MemCpy(FP,_Add(HeroTxtStrPtr,Str19L),_Add(_Mul(HIndex,0x20),UnitNamePtr),0x20)
CDoActions(FP,{TSetScore(Force1,Add,HPoint10,Kills)})
HText = "\x0D\x0D\x0DHK".._0D
Trigger {
	players = {FP},
	conditions = {
	},
	actions = {
		SetMemory(0x6509B0, SetTo, 0);
		DisplayText(HText,4);
		PlayWAV("staredit\\wav\\HeroKill.ogg");PlayWAV("staredit\\wav\\HeroKill.ogg");
		SetMemory(0x6509B0, SetTo, 1);
		DisplayText(HText,4);
		PlayWAV("staredit\\wav\\HeroKill.ogg");PlayWAV("staredit\\wav\\HeroKill.ogg");
		SetMemory(0x6509B0, SetTo, 2);
		DisplayText(HText,4);
		PlayWAV("staredit\\wav\\HeroKill.ogg");PlayWAV("staredit\\wav\\HeroKill.ogg");
		SetMemory(0x6509B0, SetTo, 3);
		DisplayText(HText,4);
		PlayWAV("staredit\\wav\\HeroKill.ogg");PlayWAV("staredit\\wav\\HeroKill.ogg");
		SetMemory(0x6509B0, SetTo, 4);
		DisplayText(HText,4);
		PlayWAV("staredit\\wav\\HeroKill.ogg");PlayWAV("staredit\\wav\\HeroKill.ogg");
		SetMemory(0x6509B0, SetTo, 5);
		DisplayText(HText,4);
		PlayWAV("staredit\\wav\\HeroKill.ogg");PlayWAV("staredit\\wav\\HeroKill.ogg");
		SetMemory(0x6509B0, SetTo, 128);
		DisplayText(HText,4);
		PlayWAV("staredit\\wav\\HeroKill.ogg");PlayWAV("staredit\\wav\\HeroKill.ogg");
		SetMemory(0x6509B0, SetTo, 129);
		DisplayText(HText,4);
		PlayWAV("staredit\\wav\\HeroKill.ogg");PlayWAV("staredit\\wav\\HeroKill.ogg");
		SetMemory(0x6509B0, SetTo, 130);
		DisplayText(HText,4);
		PlayWAV("staredit\\wav\\HeroKill.ogg");PlayWAV("staredit\\wav\\HeroKill.ogg");
		SetMemory(0x6509B0, SetTo, 131);
		DisplayText(HText,4);
		PlayWAV("staredit\\wav\\HeroKill.ogg");PlayWAV("staredit\\wav\\HeroKill.ogg");
		SetMemory(0x6509B0, SetTo, FP);
		PreserveTrigger();
	},
	}
Call_LoadCp()

 Trigger {
	players = {FP},
	conditions = {
		Label(0x3003);
	},
	actions = {
		PreserveTrigger();
	}
}

 Trigger {
	players = {FP},
	conditions = {
		Label(0x3004);
	},
	actions = {
		PreserveTrigger();
	}
}
DoActions(FP,MoveCp(Subtract,15*4))
SaveCp(FP,BackupPosData)
DoActions(FP,MoveCp(Subtract,1*4))
Call_SaveCp()

NIf(FP,{TDeathsX(_Add(BackupCP,16),Exactly,216,0,0xFF)})
CMov(FP,0x6509B0,EPD(GunPtrMemory))
NWhile(FP,{Deaths(CurrentPlayer,AtLeast,1,0),Deaths(EPD(0x6509B0),AtMost,EPD(GunPtrMemory)+50,0)})
CAdd(FP,0x6509B0,1)
NWhileEnd()
SaveCp(FP,PosSavePtr)
CDoActions(FP,{TSetMemory(PosSavePtr,SetTo,_Read(BackupPosData,0xFFF0FFF)),TSetMemoryX(PosSavePtr,SetTo,_Div(_Read(BackupCP,0xFF0000),16),0xF000)})
NIfEnd()

CMov(FP,0x6509B0,EPD(MemoryPtr))
NWhile(FP,{Deaths(CurrentPlayer,AtLeast,1,0),Deaths(EPD(0x6509B0),AtMost,EPD(MemoryPtr)+200,0)})
CAdd(FP,0x6509B0,2)
NWhileEnd()
SaveCp(FP,PosSavePtr)
CDoActions(FP,{TSetMemory(PosSavePtr,SetTo,_Read(BackupPosData,0xFFF0FFF)),TSetMemoryX(PosSavePtr,SetTo,_Mul(BdIndex,0x1000),0xF000),TSetMemoryX(_Add(PosSavePtr,1),SetTo,_Read(BackupCP,0xFF0000),0xFF0000)})
--CMov(FP,_Add(_Mul(CurrentArr,12),0x58D740),_Read(BackupPosData))
CAdd(FP,WhileLaunch,1)
Call_LoadCp()
DoActions(FP,{SetDeathsX(CurrentPlayer,SetTo,0,0,0x00FF0000),MoveCp(Add,16*4)})
 Trigger {
	players = {FP},
	conditions = {
		Label(0x3005);
	},
	actions = {
		PreserveTrigger();
	}
}
CJumpEnd(FP,0xF01)
CIf(FP,{Memory(0x628438, AtLeast, 0x00000001),CDeaths(FP,Exactly,0,Print13)})
Print_13(FP,{P1,P2,P3,P4,P5,P6},nil)
DoActionsX(FP,SetCDeaths(FP,Add,88,Print13))
CIfEnd()

DoActionsX(FP,SetCDeaths(FP,Subtract,1,Print13))

CIf(FP,Switch("Switch 201",Cleared))
UpButtonSetArr = {}
for i=0, 5 do
table.insert(UpButtonSetArr,SetMemoryB(0x58D2B0+(46*i)+8,SetTo,0))
table.insert(UpButtonSetArr,SetMemoryB(0x58D2B0+(46*i)+9,SetTo,0))
table.insert(UpButtonSetArr,SetMemoryB(0x58D2B0+(46*i)+1,SetTo,0))
table.insert(UpButtonSetArr,SetMemoryB(0x58D2B0+(46*i)+2,SetTo,0))
end
DoActions2(FP,UpButtonSetArr)
CIfX(FP,Never())
	for i = 0, 5 do
	CElseIfX(PlayerCheck(i,1))
	CMov(FP,SelCP,i)
	end
	CIfXEnd()
LoadCp(FP,SelCP)

HiddenCommand = {51,50,52,50,52,50,50}
for i = 1, #HiddenCommand do
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		Deaths(CurrentPlayer,AtLeast,1,HiddenCommand[i]);
		CDeaths(FP,Exactly,i-1,HiddenMode);
		CDeaths(FP,AtMost,0,KeyToggle);
	},
	actions = {
		SetCDeaths(FP,SetTo,1,KeyToggle);
		SetCDeaths(FP,Add,1,HiddenMode);
	}
	}
end

Trigger {
	players = {FP},
	conditions = {
		Label(0);
		Deaths(CurrentPlayer,AtLeast,1,50);
		CDeaths(FP,AtMost,0,KeyToggle);
	},
	actions = {
		SetCDeaths(FP,SetTo,1,KeyToggle);
		PreserveTrigger();
	}
	}

Trigger {
	players = {FP},
	conditions = {
		Label(0);
		Deaths(CurrentPlayer,AtLeast,1,51);
		CDeaths(FP,AtMost,0,KeyToggle);
	},
	actions = {
		SetCDeaths(FP,SetTo,1,KeyToggle);
		PreserveTrigger();
	}
	}

Trigger {
	players = {FP},
	conditions = {
		Label(0);
		Deaths(CurrentPlayer,AtLeast,1,52);
		CDeaths(FP,AtMost,0,KeyToggle);
	},
	actions = {
		SetCDeaths(FP,SetTo,1,KeyToggle);
		PreserveTrigger();
	}
	}

Trigger {
	players = {FP},
	conditions = {
		Label(0);
		Deaths(CurrentPlayer,AtMost,0,50);
		Deaths(CurrentPlayer,AtMost,0,51);
		Deaths(CurrentPlayer,AtMost,0,52);
	},
	actions = {
		SetCDeaths(FP,SetTo,0,KeyToggle);
		PreserveTrigger();
	}
	}


CIf(FP,{CDeaths(FP,AtLeast,7,HiddenMode),CDeaths(FP,Exactly,0,ModeO)})

Trigger {
	players = {FP},
	conditions = {
		Label(0);
		Deaths(CurrentPlayer,AtLeast,1,66);
		CVar(FP,HondonMode[2],AtMost,0);
		CDeaths(FP,AtMost,0,ToggleHondon);
		
	},
	actions = {
		SetCVar(FP,HondonMode[2],SetTo,1);
		SetCDeaths(FP,SetTo,1,ToggleHondon);
		SetCDeaths(FP,SetTo,1,ToggleSound);
		PreserveTrigger();
	}
	}
	
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		Deaths(CurrentPlayer,AtLeast,1,66);
		CVar(FP,HondonMode[2],AtLeast,1);
		CDeaths(FP,AtMost,0,ToggleHondon);
		
	},
	actions = {
		SetCVar(FP,HondonMode[2],SetTo,0);
		SetCDeaths(FP,SetTo,1,ToggleHondon);
		SetCDeaths(FP,SetTo,1,ToggleSound);
		PreserveTrigger();
	}
	}

Trigger {
	players = {FP},
	conditions = {
		Label(0);
		Deaths(CurrentPlayer,AtLeast,1,60);
		CVar(FP,HiddenHP[2],AtMost,4);
		CDeaths(FP,AtMost,0,Toggle1);
		
	},
	actions = {
		SetCVar(FP,HiddenHP[2],Add,1);
		SetCDeaths(FP,SetTo,1,Toggle1);
		SetCDeaths(FP,SetTo,1,ToggleSound);
		PreserveTrigger();
	}
	}

Trigger {
	players = {FP},
	conditions = {
		Label(0);
		Deaths(CurrentPlayer,AtLeast,1,63);
		CVar(FP,HiddenHPM[2],AtMost,4);
		CDeaths(FP,AtMost,0,ToggleA);
	},
	actions = {
		SetCVar(FP,HiddenHPM[2],Add,1);
		SetCDeaths(FP,SetTo,1,ToggleA);
		SetCDeaths(FP,SetTo,1,ToggleSound);
		PreserveTrigger();
	}
	}


Trigger {
	players = {FP},
	conditions = {
		Label(0);
		Deaths(CurrentPlayer,AtLeast,1,61);
		CVar(FP,HiddenATK[2],AtMost,4);
		CDeaths(FP,AtMost,0,Toggle2);
		
	},
	actions = {
		SetCVar(FP,HiddenATK[2],Add,1);
		SetCDeaths(FP,SetTo,1,Toggle2);
		SetCDeaths(FP,SetTo,1,ToggleSound);
		PreserveTrigger();
	}
	}


Trigger {
	players = {FP},
	conditions = {
		Label(0);
		Deaths(CurrentPlayer,AtLeast,1,64);
		CVar(FP,HiddenATKM[2],AtMost,4);
		CDeaths(FP,AtMost,0,ToggleS);
	},
	actions = {
		SetCVar(FP,HiddenATKM[2],Add,1);
		SetCDeaths(FP,SetTo,1,ToggleS);
		SetCDeaths(FP,SetTo,1,ToggleSound);
		PreserveTrigger();
	}
	}


Trigger {
	players = {FP},
	conditions = {
		Label(0);
		Deaths(CurrentPlayer,AtLeast,1,62);
		CVar(FP,HiddenPts[2],AtMost,4);
		CDeaths(FP,AtMost,0,Toggle3);
		
	},
	actions = {
		SetCVar(FP,HiddenPts[2],Add,1);
		SetCDeaths(FP,SetTo,1,Toggle3);
		SetCDeaths(FP,SetTo,1,ToggleSound);
		PreserveTrigger();
	}
	}

Trigger {
	players = {FP},
	conditions = {
		Label(0);
		Deaths(CurrentPlayer,AtLeast,1,65);
		CVar(FP,HiddenPtsM[2],AtMost,4);
		CDeaths(FP,AtMost,0,ToggleD);
	},
	actions = {
		SetCVar(FP,HiddenPtsM[2],Add,1);
		SetCDeaths(FP,SetTo,1,ToggleD);
		SetCDeaths(FP,SetTo,1,ToggleSound);
		PreserveTrigger();
	}
	}

	

Trigger {
	players = {FP},
	conditions = {
		Label(0);
		Deaths(CurrentPlayer,AtMost,0,60);
	},
	actions = {
		SetCDeaths(FP,SetTo,0,Toggle1);
		PreserveTrigger();
	}
	}
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		Deaths(CurrentPlayer,AtMost,0,61);
	},
	actions = {
		SetCDeaths(FP,SetTo,0,Toggle2);
		PreserveTrigger();
	}
	}
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		Deaths(CurrentPlayer,AtMost,0,62);
	},
	actions = {
		SetCDeaths(FP,SetTo,0,Toggle3);
		PreserveTrigger();
	}
	}
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		Deaths(CurrentPlayer,AtMost,0,63);
	},
	actions = {
		SetCDeaths(FP,SetTo,0,ToggleA);
		PreserveTrigger();
	}
	}
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		Deaths(CurrentPlayer,AtMost,0,64);
	},
	actions = {
		SetCDeaths(FP,SetTo,0,ToggleS);
		PreserveTrigger();
	}
	}
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		Deaths(CurrentPlayer,AtMost,0,65);
	},
	actions = {
		SetCDeaths(FP,SetTo,0,ToggleD);
		PreserveTrigger();
	}
	}

	Trigger {
		players = {FP},
		conditions = {
			Label(0);
			Deaths(CurrentPlayer,AtMost,0,66);
		},
		actions = {
			SetCDeaths(FP,SetTo,0,ToggleHondon);
			PreserveTrigger();
		}
		}
	
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CVar(FP,HiddenHPM[2],AtLeast,1);
		CVar(FP,HiddenHP[2],AtLeast,1);
	},
	actions = {
		SetCVar(FP,HiddenHP[2],Subtract,1);
		SetCVar(FP,HiddenHPM[2],Subtract,1);
		PreserveTrigger();
	}
	}
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CVar(FP,HiddenATKM[2],AtLeast,1);
		CVar(FP,HiddenATK[2],AtLeast,1);
	},
	actions = {
		SetCVar(FP,HiddenATK[2],Subtract,1);
		SetCVar(FP,HiddenATKM[2],Subtract,1);
		PreserveTrigger();
	}
	}
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CVar(FP,HiddenPtsM[2],AtLeast,1);
		CVar(FP,HiddenPts[2],AtLeast,1);
	},
	actions = {
		SetCVar(FP,HiddenPts[2],Subtract,1);
		SetCVar(FP,HiddenPtsM[2],Subtract,1);
		PreserveTrigger();
	}
	}
CIfEnd()
CIf(FP,{CDeaths(FP,AtMost,0,BGMSel),CDeaths(FP,AtMost,0,ModeSel)})
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		Deaths(CurrentPlayer,AtLeast,1,210);
	},
	actions = {
		SetCDeaths(FP,SetTo,1,Gmode);
		PreserveTrigger();
	}
	}
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		Deaths(CurrentPlayer,AtLeast,1,211);
	},
	actions = {
		SetCDeaths(FP,SetTo,2,Gmode);
		PreserveTrigger();
	}
	}
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		Deaths(CurrentPlayer,AtLeast,1,212);
	},
	actions = {
		SetCDeaths(FP,SetTo,3,Gmode);
		PreserveTrigger();
	}
	}
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtLeast,1,GMode);
		Deaths(CurrentPlayer,AtLeast,1,213);
	},
	actions = {
		SetCDeaths(FP,SetTo,1,ModeSel);
		SetCDeaths(FP,SetTo,1,SelectorT);
		PreserveTrigger();
	}
	}
CIfEnd()
CIf(FP,CDeaths(FP,Exactly,1,BGMSel))
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtLeast,1,GMode);
		Deaths(CurrentPlayer,AtLeast,1,210);
	},
	actions = {
		SetCDeaths(FP,SetTo,1,BGMMode);
		PreserveTrigger();
	}
	}
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtLeast,1,GMode);
		Deaths(CurrentPlayer,AtLeast,1,211);
	},
	actions = {
		SetCDeaths(FP,SetTo,2,BGMMode);
		PreserveTrigger();
	}
	}
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtLeast,1,GMode);
		Deaths(CurrentPlayer,AtLeast,1,212);
	},
	actions = {
		SetCDeaths(FP,SetTo,3,BGMMode);
		PreserveTrigger();
	}
	}
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtLeast,1,GMode);
		Deaths(CurrentPlayer,AtLeast,1,215);
	},
	actions = {
		SetCDeaths(FP,SetTo,4,BGMMode);
		PreserveTrigger();
	}
	}
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtLeast,1,GMode);
		Deaths(CurrentPlayer,AtLeast,1,216);
	},
	actions = {
		SetCDeaths(FP,SetTo,5,BGMMode);
		PreserveTrigger();
	}
	}
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtLeast,1,GMode);
		Deaths(CurrentPlayer,AtLeast,1,218);
	},
	actions = {
		SetCDeaths(FP,SetTo,6,BGMMode);
		PreserveTrigger();
	}
	}
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtLeast,1,GMode);
		Deaths(CurrentPlayer,AtLeast,1,51);
	},
	actions = {
		SetCDeaths(FP,SetTo,7,BGMMode);
		PreserveTrigger();
	}
	}
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtLeast,1,BGMMode);
		Deaths(CurrentPlayer,AtLeast,1,213);
	},
	actions = {
		SetCDeaths(FP,SetTo,2,BGMSel);
		SetCDeaths(FP,SetTo,1,SelectorT);
		PreserveTrigger();
	}
	}





CIfEnd()
SetRecoverCp()
RecoverCp(FP)

Trigger { -- 인트로1
	players = {FP},
	conditions = {
		Label(0);
		Switch("Switch 201",Cleared);
	},
	actions = {
		SetMemory(0x6509B0, SetTo, 0);
		CenterView(64);
		SetMemory(0x6509B0, SetTo, 1);
		CenterView(64);
		SetMemory(0x6509B0, SetTo, 2);
		CenterView(64);
		SetMemory(0x6509B0, SetTo, 3);
		CenterView(64);
		SetMemory(0x6509B0, SetTo, 4);
		CenterView(64);
		SetMemory(0x6509B0, SetTo, 5);
		CenterView(64);
		SetMemory(0x6509B0, SetTo, 128);
		CenterView(64);
		SetMemory(0x6509B0, SetTo, 129);
		CenterView(64);
		SetMemory(0x6509B0, SetTo, 130);
		CenterView(64);
		SetMemory(0x6509B0, SetTo, 131);
		CenterView(64);
		SetMemory(0x6509B0, SetTo, FP);
		PreserveTrigger();
		
		
	},
	}
CIf(FP,CDeaths(FP,Exactly,0,ModeO))

CIf(FP,CDeaths(FP,AtLeast,7,HiddenMode))
HiddenModeStr = "\x0D\x0D\x0D\x0D\x13\x10[ \x04(\x08HP \x04: -0) (\x1BATK \x04: -0) (\x1FPts \x04: -0) (\x10혼돈 옵션 \x04: OFF) \x10]\x0D\x0D\x0D\x0D\x0D"
HiddenModeStr2 = "\x0D\x0D\x0D\x0D\x13\x10[ \x04(\x08HP \x04: -0) (\x1BATK \x04: -0) (\x1FPts \x04: -0) (\x10혼돈 옵션 \x08: ON) \x10]\x0D\x0D\x0D\x0D\x0D"
CIfX(FP,CVar(FP,HondonMode[2],AtMost,0))
Print_StringX(FP,VArr(HiddenModeT,0),HiddenModeStr,0)
CelseX()
Print_StringX(FP,VArr(HiddenModeT,0),HiddenModeStr2,0)
CIfXEnd()
HiddenModeL = GetStrSizeD(0,HiddenModeStr)
HiddenFindT = "\x13\x04히든 커맨드 입력성공.\n\x13\x04값 올림 버튼 : \x071,2,3. \x04내림 버튼 : \x07A,S,D\n\x13\x10혼돈 옵션 \x07활성화 \x04: ~버튼"
WavFile = "staredit\\wav\\Unlock.ogg"
	Trigger {
	players = {FP},
	conditions = {
		Label(0);
	},
	actions = {
		SetMemory(0x6509B0, SetTo, 0);
		PlayWAV(WavFile);
		DisplayText(HiddenFindT,4);
		DisplayText("\x13\x10[ \x04(\x08HP \x04: 0) (\x1BATK \x04: 0) (\x1FPts \x04: 0) (\x10혼돈 옵션 \x04: OFF) \x10]",4);
		SetMemory(0x6509B0, SetTo, 1);
		PlayWAV(WavFile);
		DisplayText(HiddenFindT,4);
		DisplayText("\x13\x10[ \x04(\x08HP \x04: 0) (\x1BATK \x04: 0) (\x1FPts \x04: 0) (\x10혼돈 옵션 \x04: OFF) \x10]",4);
		SetMemory(0x6509B0, SetTo, 2);
		PlayWAV(WavFile);
		DisplayText(HiddenFindT,4);
		DisplayText("\x13\x10[ \x04(\x08HP \x04: 0) (\x1BATK \x04: 0) (\x1FPts \x04: 0) (\x10혼돈 옵션 \x04: OFF) \x10]",4);
		SetMemory(0x6509B0, SetTo, 3);
		PlayWAV(WavFile);
		DisplayText(HiddenFindT,4);
		DisplayText("\x13\x10[ \x04(\x08HP \x04: 0) (\x1BATK \x04: 0) (\x1FPts \x04: 0) (\x10혼돈 옵션 \x04: OFF) \x10]",4);
		SetMemory(0x6509B0, SetTo, 4);
		PlayWAV(WavFile);
		DisplayText(HiddenFindT,4);
		DisplayText("\x13\x10[ \x04(\x08HP \x04: 0) (\x1BATK \x04: 0) (\x1FPts \x04: 0) (\x10혼돈 옵션 \x04: OFF) \x10]",4);
		SetMemory(0x6509B0, SetTo, 5);
		PlayWAV(WavFile);
		DisplayText(HiddenFindT,4);
		DisplayText("\x13\x10[ \x04(\x08HP \x04: 0) (\x1BATK \x04: 0) (\x1FPts \x04: 0) (\x10혼돈 옵션 \x04: OFF) \x10]",4);
		SetMemory(0x6509B0, SetTo, 128);
		PlayWAV(WavFile);
		DisplayText(HiddenFindT,4);
		DisplayText("\x13\x10[ \x04(\x08HP \x04: 0) (\x1BATK \x04: 0) (\x1FPts \x04: 0) (\x10혼돈 옵션 \x04: OFF) \x10]",4);
		SetMemory(0x6509B0, SetTo, 129);
		PlayWAV(WavFile);
		DisplayText(HiddenFindT,4);
		DisplayText("\x13\x10[ \x04(\x08HP \x04: 0) (\x1BATK \x04: 0) (\x1FPts \x04: 0) (\x10혼돈 옵션 \x04: OFF) \x10]",4);
		SetMemory(0x6509B0, SetTo, 130);
		PlayWAV(WavFile);
		DisplayText(HiddenFindT,4);
		DisplayText("\x13\x10[ \x04(\x08HP \x04: 0) (\x1BATK \x04: 0) (\x1FPts \x04: 0) (\x10혼돈 옵션 \x04: OFF) \x10]",4);
		SetMemory(0x6509B0, SetTo, 131);
		PlayWAV(WavFile);
		DisplayText(HiddenFindT,4);
		DisplayText("\x13\x10[ \x04(\x08HP \x04: 0) (\x1BATK \x04: 0) (\x1FPts \x04: 0) (\x10혼돈 옵션 \x04: OFF) \x10]",4);
		SetMemory(0x6509B0, SetTo, FP);
	}
	}


--[[
Trigger {
	players = {FP},
	conditions = {
		Label(0);
	},
	actions = {
		
		SetMemory(0x640B60, SetTo, 0x0D0D0D0D);
		SetMemory(0x640B64, SetTo, 0x205B100D);
		SetMemory(0x640B68, SetTo, 0x48082804);
		SetMemory(0x640B6C, SetTo, 0x3A042050);
		SetMemory(0x640B70, SetTo, 0x29302D20); -- 4
		SetMemory(0x640B74, SetTo, 0x411B2820);
		SetMemory(0x640B78, SetTo, 0x04204B54);
		SetMemory(0x640B7C, SetTo, 0x302D203A); -- 7
		SetMemory(0x640B80, SetTo, 0x1F282029);
		SetMemory(0x640B84, SetTo, 0x20737450);
		SetMemory(0x640B88, SetTo, 0x2D203A04); 
		SetMemory(0x640B8C, SetTo, 0x10202930); -- 11
		SetMemory(0x640B90, SetTo, 0x0D0D0D5D);
		SetMemory(0x640B94, SetTo, 0x00000D0D);
		PreserveTrigger();
	},
}
--]]
for i = 2, 0, -1 do
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CVar(FP,HiddenHP[2],AtLeast,(2^i),(2^i));
		
	},
	actions = {
		SetCVAar(VArr(HiddenModeT,4),SetTo,(2^i)*65536,(2^i)*65536);
		PreserveTrigger();
	}
}
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CVar(FP,HiddenHPM[2],AtLeast,(2^i),(2^i));
		
	},
	actions = {
		SetCVAar(VArr(HiddenModeT,4),SetTo,(2^i)*65536,(2^i)*65536);
		PreserveTrigger();
	}
}
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CVar(FP,HiddenATK[2],AtLeast,(2^i),(2^i));
		
	},
	actions = {
		SetCVAar(VArr(HiddenModeT,7),SetTo,(2^i)*16777216,(2^i)*16777216);
		PreserveTrigger();
	}
}
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CVar(FP,HiddenATKM[2],AtLeast,(2^i),(2^i));
		
	},
	actions = {
		SetCVAar(VArr(HiddenModeT,7),SetTo,(2^i)*16777216,(2^i)*16777216);
		PreserveTrigger();
	}
}
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CVar(FP,HiddenPts[2],AtLeast,(2^i),(2^i));
		
	},
	actions = {
		SetCVAar(VArr(HiddenModeT,11),SetTo,(2^i)*1,(2^i)*1);
		PreserveTrigger();
	}
}
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CVar(FP,HiddenPtsM[2],AtLeast,(2^i),(2^i));
		
	},
	actions = {
		SetCVAar(VArr(HiddenModeT,11),SetTo,(2^i)*1,(2^i)*1);
		PreserveTrigger();
	}
}
end


Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CVar(FP,HiddenHPM[2],AtLeast,1);
		
	},
	actions = {
		SetCVAar(VArr(HiddenModeT,4),SetTo,0x2D*256,0xFF00);
		PreserveTrigger();
	}
}
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CVar(FP,HiddenHPM[2],AtMost,0);
		
	},
	actions = {
		SetCVAar(VArr(HiddenModeT,4),SetTo,0x0D*256,0xFF00);
		PreserveTrigger();
	}
}

Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CVar(FP,HiddenATKM[2],AtLeast,1);
		
	},
	actions = {
		SetCVAar(VArr(HiddenModeT,7),SetTo,0x2D*65536,0xFF0000);
		PreserveTrigger();
	}
}
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CVar(FP,HiddenATKM[2],AtMost,0);
		
	},
	actions = {
		SetCVAar(VArr(HiddenModeT,7),SetTo,0x0D*65536,0xFF0000);
		PreserveTrigger();
	}
}
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CVar(FP,HiddenPtsM[2],AtLeast,1);
		
	},
	actions = {
		SetCVAar(VArr(HiddenModeT,10),SetTo,0x2D*16777216,0xFF000000);
		PreserveTrigger();
	}
}
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CVar(FP,HiddenPtsM[2],AtMost,0);
		
	},
	actions = {
		SetCVAar(VArr(HiddenModeT,10),SetTo,0x0D*16777216,0xFF000000);
		PreserveTrigger();
	}
}

f_Movcpy(FP,HiddenModeStrPtr,VArr(HiddenModeT,0),HiddenModeL-3)





WavFile = "staredit\\wav\\sel_g.ogg"
	Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtLeast,1,ToggleSound);
	},
	actions = {
		SetMemory(0x6509B0, SetTo, 0);
		PlayWAV(WavFile);
		DisplayText("HD".._0D,4);
		SetMemory(0x6509B0, SetTo, 1);
		PlayWAV(WavFile);
		DisplayText("HD".._0D,4);
		SetMemory(0x6509B0, SetTo, 2);
		PlayWAV(WavFile);
		DisplayText("HD".._0D,4);
		SetMemory(0x6509B0, SetTo, 3);
		PlayWAV(WavFile);
		DisplayText("HD".._0D,4);
		SetMemory(0x6509B0, SetTo, 4);
		PlayWAV(WavFile);
		DisplayText("HD".._0D,4);
		SetMemory(0x6509B0, SetTo, 5);
		PlayWAV(WavFile);
		DisplayText("HD".._0D,4);
		SetMemory(0x6509B0, SetTo, 128);
		PlayWAV(WavFile);
		DisplayText("HD".._0D,4);
		SetMemory(0x6509B0, SetTo, 129);
		PlayWAV(WavFile);
		DisplayText("HD".._0D,4);
		SetMemory(0x6509B0, SetTo, 130);
		PlayWAV(WavFile);
		DisplayText("HD".._0D,4);
		SetMemory(0x6509B0, SetTo, 131);
		PlayWAV(WavFile);
		DisplayText("HD".._0D,4);
		SetMemory(0x6509B0, SetTo, FP);
		SetCDeaths(FP,SetTo,0,ToggleSound);
		PreserveTrigger();
	}
	}

CIfEnd()
Trigger {
	players = {FP},
	conditions = {
	},
	actions = {
		CreateUnit(1,160,16,FP);
	}
	}
Trigger { -- 텟모드 설치 여부
	players = {FP},
	conditions = {
		Label(0);
		--Switch("Switch 203",Set);
	},
	actions = {
		SetCDeaths(FP,SetTo,TestModeOnOff,TestMode);
		SetCDeaths(FP,SetTo,Limit,LimitX);
	},
	}

Trigger { -- 텟모드 설치 여부
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,Exactly,1,LimitX);
		Deaths(P1,AtLeast,1,200);
		
	},
	actions = {
		SetCDeaths(FP,SetTo,1,TestMode);
	},
	}

CIf(FP,CDeaths(FP,AtLeast,1,TestMode))


Trigger {
	players = {FP},
	conditions = {
	},
	actions = {
		SetMemory(0x6509B0, SetTo, 0);
		RunAIScript("Turn ON Shared Vision for Player 7");
		RunAIScript("Turn ON Shared Vision for Player 8");
		SetMemory(0x6509B0, SetTo, 1);
		RunAIScript("Turn ON Shared Vision for Player 7");
		RunAIScript("Turn ON Shared Vision for Player 8");
		SetMemory(0x6509B0, SetTo, 2);
		RunAIScript("Turn ON Shared Vision for Player 7");
		RunAIScript("Turn ON Shared Vision for Player 8");
		SetMemory(0x6509B0, SetTo, 3);
		RunAIScript("Turn ON Shared Vision for Player 7");
		RunAIScript("Turn ON Shared Vision for Player 8");
		SetMemory(0x6509B0, SetTo, 4);
		RunAIScript("Turn ON Shared Vision for Player 7");
		RunAIScript("Turn ON Shared Vision for Player 8");
		SetMemory(0x6509B0, SetTo, 5);
		RunAIScript("Turn ON Shared Vision for Player 7");
		RunAIScript("Turn ON Shared Vision for Player 8");
		SetMemory(0x6509B0, SetTo, FP);
		
	}
	}
CIfEnd()
CIf(FP,CDeaths(FP,AtLeast,1,LimitX))
Trigger {
	players = {FP},
	conditions = {
	},
	actions = {
		SetSwitch("Switch 254",Set);
	}
}

for i = 0, 5 do
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		isname(i,"GALAXY_BURST");
		CDeaths(FP,AtLeast,1,LimitX);
	},
	actions = {
		SetCDeaths(FP,SetTo,1,LimitC);
		
	}
	}
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		isname(i,"_Mininii");
		CDeaths(FP,AtLeast,1,LimitX);
	},
	actions = {
		SetCDeaths(FP,SetTo,1,LimitC);
		
	}
	}
end
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,Exactly,1,LimitX);
		CDeaths(FP,Exactly,0,LimitC);
		
	},
	actions = {
		SetMemory(0x6509B0,SetTo,0);
		DisplayText("\x13\x1B테스트 전용 맵입니다. 정식버젼으로 시작해주세요.",4);
		Defeat();
		SetMemory(0x6509B0,SetTo,1);
		DisplayText("\x13\x1B테스트 전용 맵입니다. 정식버젼으로 시작해주세요.",4);
		Defeat();
		SetMemory(0x6509B0,SetTo,2);
		DisplayText("\x13\x1B테스트 전용 맵입니다. 정식버젼으로 시작해주세요.",4);
		Defeat();
		SetMemory(0x6509B0,SetTo,3);
		DisplayText("\x13\x1B테스트 전용 맵입니다. 정식버젼으로 시작해주세요.",4);
		Defeat();
		SetMemory(0x6509B0,SetTo,4);
		DisplayText("\x13\x1B테스트 전용 맵입니다. 정식버젼으로 시작해주세요.",4);
		Defeat();
		SetMemory(0x6509B0,SetTo,5);
		DisplayText("\x13\x1B테스트 전용 맵입니다. 정식버젼으로 시작해주세요.",4);
		Defeat();
		SetMemory(0x6509B0,SetTo,6);
		DisplayText("\x13\x1B테스트 전용 맵입니다. 정식버젼으로 시작해주세요.",4);
		Defeat();
		SetMemory(0x6509B0,SetTo,7);
		DisplayText("\x13\x1B테스트 전용 맵입니다. 정식버젼으로 시작해주세요.",4);
		Defeat();
		SetMemory(0x6509B0,SetTo,128);
		DisplayText("\x13\x1B테스트 전용 맵입니다. 정식버젼으로 시작해주세요.",4);
		SetMemory(0x6509B0,SetTo,129);
		DisplayText("\x13\x1B테스트 전용 맵입니다. 정식버젼으로 시작해주세요.",4);
		SetMemory(0x6509B0,SetTo,130);
		DisplayText("\x13\x1B테스트 전용 맵입니다. 정식버젼으로 시작해주세요.",4);
		SetMemory(0x6509B0,SetTo,131);
		DisplayText("\x13\x1B테스트 전용 맵입니다. 정식버젼으로 시작해주세요.",4);
		SetMemory(0x6509B0,SetTo,FP);
	}
	}
CIfEnd()




Text2 = "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\x13\x04현재 선택가능 플레이어는..."
for j = 1, 6 do

CIf(FP,{CDeaths(FP,Exactly,0,SelectorT),CVar(FP,SelCP[2],Exactly,j-1)})
f_MemCpy(FP,0x641598,_TMem(Arr(Str24,0),"X","X",1),Str24L)
f_MovCpy(FP,0x641598+Str24L-3,VArr(Names[j],0),4*6)
CIfEnd()
--[[
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		
		CDeaths(FP,Exactly,0,SelectorT);
		CVar(FP,SelCP[2],Exactly,j-1);
	},
	actions = {
		SetMemory(0x6509B0, SetTo, 0);
		DisplayText(Text2,4);
		DisplayText("\x0D\x0D\x0D"..Player[j].."".._0D,4);
		SetMemory(0x6509B0, SetTo, 1);
		DisplayText(Text2,4);
		DisplayText("\x0D\x0D\x0D"..Player[j].."".._0D,4);
		SetMemory(0x6509B0, SetTo, 2);
		DisplayText(Text2,4);
		DisplayText("\x0D\x0D\x0D"..Player[j].."".._0D,4);
		SetMemory(0x6509B0, SetTo, 3);
		DisplayText(Text2,4);
		DisplayText("\x0D\x0D\x0D"..Player[j].."".._0D,4);
		SetMemory(0x6509B0, SetTo, 4);
		DisplayText(Text2,4);
		DisplayText("\x0D\x0D\x0D"..Player[j].."".._0D,4);
		SetMemory(0x6509B0, SetTo, 5);
		DisplayText(Text2,4);
		DisplayText("\x0D\x0D\x0D"..Player[j].."".._0D,4);
		SetMemory(0x6509B0, SetTo, 128);
		DisplayText(Text2,4);
		DisplayText("\x0D\x0D\x0D"..Player[j].."".._0D,4);
		SetMemory(0x6509B0, SetTo, 129);
		DisplayText(Text2,4);
		DisplayText("\x0D\x0D\x0D"..Player[j].."".._0D,4);
		SetMemory(0x6509B0, SetTo, 130);
		DisplayText(Text2,4);
		DisplayText("\x0D\x0D\x0D"..Player[j].."".._0D,4);
		SetMemory(0x6509B0, SetTo, 131);
		DisplayText(Text2,4);
		DisplayText("\x0D\x0D\x0D"..Player[j].."".._0D,4);
		SetMemory(0x6509B0, SetTo, FP);
		PreserveTrigger();
	}
	}
]]
end
CIf(FP,{CDeaths(FP,Exactly,0,ModeSel),CDeaths(FP,Exactly,0,BGMSel)})




for i = 0, 3 do
CIf(FP,CDeaths(FP,Exactly,i,Gmode))
f_MemCpy(FP,0x641598+Str24L+(4*6)-5,_TMem(Arr(Str25[i+1],0),"X","X",1),Str25L[i+1])
CIfEnd()
end
CIfEnd()
_0DPatchforT13 = {}
for i =0, 50 do
table.insert(_0DPatchforT13,SetMemory(0x641598+(i*4),SetTo,0x0D0D0D0D))
end


	Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,Exactly,0,SelectorT);
	},
	actions = {
		SetCDeaths(FP,Add,1,IntroT);
		PreserveTrigger();
	}
	}

	Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,Exactly,24*30,IntroT);
		CDeaths(FP,Exactly,0,ModeSel);
	},
	actions = {
		SetCDeaths(FP,SetTo,1,GMode);
		SetCDeaths(FP,SetTo,1,ModeSel);
		SetCDeaths(FP,SetTo,1,SelectorT);
		SetCDeaths(FP,SetTo,0,IntroT);
	}
	}

	Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,Exactly,24*30,IntroT);
		CDeaths(FP,AtLeast,1,ModeSel);
		CDeaths(FP,Exactly,1,BGMSel);
	},
	actions = {
		SetCDeaths(FP,SetTo,2,BGMSel);
		SetCDeaths(FP,SetTo,1,BGMMode);
		SetCDeaths(FP,SetTo,1,SelectorT);
		SetCDeaths(FP,SetTo,0,IntroT);
	}
	}


	Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,Exactly,0,ModeO);
		CDeaths(FP,Exactly,1,SelectorT);
	},
	actions = {
		SetCDeaths(FP,Add,1,ModeT2);
		PreserveTrigger();
	}
	}

WavFile = "staredit\\wav\\sel_o.ogg"
	Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,Exactly,56,ModeT2);
	},
	actions = {
		
		SetMemory(0x6509B0, SetTo, 0);
		PlayWAV(WavFile);
		SetMemory(0x6509B0, SetTo, 1);
		PlayWAV(WavFile);
		SetMemory(0x6509B0, SetTo, 2);
		PlayWAV(WavFile);
		SetMemory(0x6509B0, SetTo, 3);
		PlayWAV(WavFile);
		SetMemory(0x6509B0, SetTo, 4);
		PlayWAV(WavFile);
		SetMemory(0x6509B0, SetTo, 5);
		PlayWAV(WavFile);
		SetMemory(0x6509B0, SetTo, 128);
		PlayWAV(WavFile);
		SetMemory(0x6509B0, SetTo, 129);
		PlayWAV(WavFile);
		SetMemory(0x6509B0, SetTo, 130);
		PlayWAV(WavFile);
		SetMemory(0x6509B0, SetTo, 131);
		PlayWAV(WavFile);
		SetMemory(0x6509B0, SetTo, FP);
		SetCDeaths(FP,SetTo,0,SelectorT);
		SetCDeaths(FP,Add,1,BGMSel);
	}
	}

		
		
	Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,Exactly,56*2,ModeT2);
	},
	actions = {
		SetCDeaths(FP,Add,1,ModeO);
	}
	}




Text1 = "\x13\x07난이도\x04를 선택해주세요.\n\x13\x04선택 완료 후 Y버튼을 눌러주세요. 30초 후 자동으로 \x0EEASY\x04모드가 선택됩니다."
Trigger { -- 인트로1
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,Exactly,0,Gmode);
		CDeaths(FP,Exactly,0,ModeSel);
		CDeaths(FP,Exactly,0,BGMSel);
	},
	actions = {
		SetMemory(0x6509B0, SetTo, 0);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 1);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 2);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 3);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 4);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 5);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 128);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 129);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 130);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 131);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, FP);
		
	},
	}

--[[
Text1 = "\x13\x07난이도\x04를 선택해주세요.\n\x13\x03[Q] \x0EEASY\n\x13\x04[W] \x08HARD\n\x13\x04[E] \x11BURST\n\x13\x04선택 완료 후 Y버튼을 눌러주세요. 15초 후 자동으로 \x0EEASY\x04모드가 선택됩니다."
Trigger { -- 인트로1
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,Exactly,1,Gmode);
		CDeaths(FP,Exactly,0,ModeSel);
		CDeaths(FP,Exactly,0,BGMSel);
	},
	actions = {
		SetMemory(0x6509B0, SetTo, 0);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 1);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 2);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 3);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 4);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 5);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 128);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 129);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 130);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 131);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, FP);
		PreserveTrigger();
		
	},
	}
Text1 = "\x13\x07난이도\x04를 선택해주세요.\n\x13\x04[Q] \x0EEASY\n\x13\x03[W] \x08HARD\n\x13\x04[E] \x11BURST\n\x13\x04선택 완료 후 Y버튼을 눌러주세요. 15초 후 자동으로 \x0EEASY\x04모드가 선택됩니다."
Trigger { -- 인트로1
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,Exactly,2,Gmode);
		CDeaths(FP,Exactly,0,ModeSel);
		CDeaths(FP,Exactly,0,BGMSel);
	},
	actions = {
		SetMemory(0x6509B0, SetTo, 0);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 1);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 2);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 3);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 4);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 5);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 128);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 129);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 130);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 131);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, FP);
		PreserveTrigger();
		
	},
	}
Text1 = "\x13\x07난이도\x04를 선택해주세요.\n\x13\x04[Q] \x0EEASY\n\x13\x04[W] \x08HARD\n\x13\x03[E] \x11BURST\n\x13\x04선택 완료 후 Y버튼을 눌러주세요. 15초 후 자동으로 \x0EEASY\x04모드가 선택됩니다."
Trigger { -- 인트로1
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,Exactly,3,Gmode);
		CDeaths(FP,Exactly,0,ModeSel);
		CDeaths(FP,Exactly,0,BGMSel);
	},
	actions = {
		SetMemory(0x6509B0, SetTo, 0);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 1);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 2);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 3);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 4);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 5);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 128);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 129);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 130);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 131);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, FP);
		PreserveTrigger();
		
	},
	}
--]]
CIf(FP,{TTCDeaths(FP,NotSame,CurrentMode,GMode)})

WavFile = "staredit\\wav\\sel_g.ogg"
	Trigger {
	players = {FP},
	actions = {
		SetMemory(0x6509B0, SetTo, 0);
		PlayWAV(WavFile);
		SetMemory(0x6509B0, SetTo, 1);
		PlayWAV(WavFile);
		SetMemory(0x6509B0, SetTo, 2);
		PlayWAV(WavFile);
		SetMemory(0x6509B0, SetTo, 3);
		PlayWAV(WavFile);
		SetMemory(0x6509B0, SetTo, 4);
		PlayWAV(WavFile);
		SetMemory(0x6509B0, SetTo, 5);
		PlayWAV(WavFile);
		SetMemory(0x6509B0, SetTo, 128);
		PlayWAV(WavFile);
		SetMemory(0x6509B0, SetTo, 129);
		PlayWAV(WavFile);
		SetMemory(0x6509B0, SetTo, 130);
		PlayWAV(WavFile);
		SetMemory(0x6509B0, SetTo, 131);
		PlayWAV(WavFile);
		SetMemory(0x6509B0, SetTo, FP);
		PreserveTrigger();
	}
	}
for i = 1,3 do
Trigger { -- 인트로1
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,Exactly,i,Gmode);
	},
	actions = {
		SetCVar(FP,CurrentMode[2],SetTo,i);
		PreserveTrigger();
		
	},
	}
end
CIfEnd()
Text2 = "\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,Exactly,0,ModeO);
		CDeaths(FP,AtLeast,1,ModeSel);
		CDeaths(FP,AtLeast,1,Gmode);
		CDeaths(FP,Exactly,0,BGMSel);
	},
	actions = {
		SetMemory(0x6509B0, SetTo, 0);
		DisplayText(Text2,4);
		SetMemory(0x6509B0, SetTo, 1);
		DisplayText(Text2,4);
		SetMemory(0x6509B0, SetTo, 2);
		DisplayText(Text2,4);
		SetMemory(0x6509B0, SetTo, 3);
		DisplayText(Text2,4);
		SetMemory(0x6509B0, SetTo, 4);
		DisplayText(Text2,4);
		SetMemory(0x6509B0, SetTo, 5);
		DisplayText(Text2,4);
		SetMemory(0x6509B0, SetTo, 128);
		DisplayText(Text2,4);
		SetMemory(0x6509B0, SetTo, 129);
		DisplayText(Text2,4);
		SetMemory(0x6509B0, SetTo, 130);
		DisplayText(Text2,4);
		SetMemory(0x6509B0, SetTo, 131);
		DisplayText(Text2,4);
		SetMemory(0x6509B0, SetTo, FP);
	}
	}
Text1 = "\x13\x07\n\x13\x04[Q] \x0EEASY\n\x13\x05[W] \x08HARD\n\x13\x05[E] \x11BURST\n\x13\x04난이도 선택이 완료되었습니다."
WavFile = "staredit\\wav\\Select.ogg"
Trigger { -- 인트로1
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtLeast,1,ModeSel);
		CDeaths(FP,Exactly,1,Gmode);
		CDeaths(FP,Exactly,0,BGMSel);
	},
	actions = {
		SetMemory(0x6509B0, SetTo, 0);
		PlayWAV(WavFile);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 1);
		PlayWAV(WavFile);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 2);
		PlayWAV(WavFile);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 3);
		PlayWAV(WavFile);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 4);
		PlayWAV(WavFile);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 5);
		PlayWAV(WavFile);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 128);
		PlayWAV(WavFile);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 129);
		PlayWAV(WavFile);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 130);
		PlayWAV(WavFile);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 131);
		PlayWAV(WavFile);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, FP);
		SetMemory(0x515BB0,SetTo,100);	
		ModifyUnitEnergy(All,201,Force2,64,0);
		ModifyUnitEnergy(All,190,Force2,64,0);
		ModifyUnitEnergy(All,63,Force2,64,0);
		ModifyUnitEnergy(All,71,Force2,64,0);
		RemoveUnit(201,Force2);
		RemoveUnit(190,Force2);
		RemoveUnit(63,Force2);
		RemoveUnit(71,Force2);
		RemoveUnitAt(All,"Buildings",17,Force2);
	},
	}
Text1 = "\x13\x07\n\x13\x05[Q] \x0EEASY\n\x13\x04[W] \x08HARD\n\x13\x05[E] \x11BURST\n\x13\x04난이도 선택이 완료되었습니다."
WavFile = "staredit\\wav\\Select.ogg"
Trigger { -- 인트로1
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtLeast,1,ModeSel);
		CDeaths(FP,Exactly,2,Gmode);
		CDeaths(FP,Exactly,0,BGMSel);
	},
	actions = {
		SetMemory(0x6509B0, SetTo, 0);
		PlayWAV(WavFile);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 1);
		PlayWAV(WavFile);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 2);
		PlayWAV(WavFile);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 3);
		PlayWAV(WavFile);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 4);
		PlayWAV(WavFile);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 5);
		PlayWAV(WavFile);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 128);
		PlayWAV(WavFile);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 129);
		PlayWAV(WavFile);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 130);
		PlayWAV(WavFile);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 131);
		PlayWAV(WavFile);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, FP);
		SetMemory(0x515BB0,SetTo,60);
		
	},
	}
Text1 = "\x13\x07\n\x13\x05[Q] \x0EEASY\n\x13\x05[W] \x08HARD\n\x13\x04[E] \x11BURST\n\x13\x04난이도 선택이 완료되었습니다."
WavFile = "staredit\\wav\\Select.ogg"
Trigger { -- 인트로1
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtLeast,1,ModeSel);
		CDeaths(FP,Exactly,3,Gmode);
		CDeaths(FP,Exactly,0,BGMSel);
	},
	actions = {
		SetMemory(0x6509B0, SetTo, 0);
		PlayWAV(WavFile);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 1);
		PlayWAV(WavFile);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 2);
		PlayWAV(WavFile);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 3);
		PlayWAV(WavFile);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 4);
		PlayWAV(WavFile);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 5);
		PlayWAV(WavFile);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 128);
		PlayWAV(WavFile);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 129);
		PlayWAV(WavFile);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 130);
		PlayWAV(WavFile);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 131);
		PlayWAV(WavFile);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, FP);
		SetSwitch("Switch 255",Set);
		
	},
	}
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtLeast,1,ModeSel);
		CDeaths(FP,Exactly,0,BGMSel);
	},
	actions = {
		_0DPatchforT13
	}
}


CIf(FP,{CDeaths(FP,Exactly,0,ModeO),CDeaths(FP,Exactly,1,BGMSel)})


Text3 = "\x13\x18BGM \x04을 선택해주세요. 30초 내로 선택하지 않을 시 \x0E신나는 \x18BGM\x04이 선택됩니다."

Trigger { -- 인트로1
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,Exactly,0,ModeO);
		CDeaths(FP,Exactly,1,BGMSel);
		CDeaths(FP,Exactly,0,BGMMode);
	},
	actions = {
		SetMemory(0x6509B0, SetTo, 0);
		DisplayText(Text3,4);
		SetMemory(0x6509B0, SetTo, 1);
		DisplayText(Text3,4);
		SetMemory(0x6509B0, SetTo, 2);
		DisplayText(Text3,4);
		SetMemory(0x6509B0, SetTo, 3);
		DisplayText(Text3,4);
		SetMemory(0x6509B0, SetTo, 4);
		DisplayText(Text3,4);
		SetMemory(0x6509B0, SetTo, 5);
		DisplayText(Text3,4);
		SetMemory(0x6509B0, SetTo, 128);
		DisplayText(Text3,4);
		SetMemory(0x6509B0, SetTo, 129);
		DisplayText(Text3,4);
		SetMemory(0x6509B0, SetTo, 130);
		DisplayText(Text3,4);
		SetMemory(0x6509B0, SetTo, 131);
		DisplayText(Text3,4);
		SetMemory(0x6509B0, SetTo, FP);
		
	},
	}

Trigger { -- 인트로1
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,Exactly,0,ModeO);
		CDeaths(FP,Exactly,1,BGMSel);
	},
	actions = {
		_0DPatchforT13
	},
	}



for i = 0, 7 do
CIf(FP,CDeaths(FP,Exactly,i,BGMMode))
f_MemCpy(FP,0x641598+Str24L+(4*6)-5,_TMem(Arr(Str27[i+1],0),"X","X",1),Str27L[i+1])
CIfEnd()
end


CIfEnd()
CIf(FP,{TTCDeaths(FP,NotSame,CurrentBGM,BGMMode)})

WavFile = "staredit\\wav\\sel_g.ogg"
	Trigger {
	players = {FP},
	actions = {
		SetMemory(0x6509B0, SetTo, 0);
		PlayWAV(WavFile);
		SetMemory(0x6509B0, SetTo, 1);
		PlayWAV(WavFile);
		SetMemory(0x6509B0, SetTo, 2);
		PlayWAV(WavFile);
		SetMemory(0x6509B0, SetTo, 3);
		PlayWAV(WavFile);
		SetMemory(0x6509B0, SetTo, 4);
		PlayWAV(WavFile);
		SetMemory(0x6509B0, SetTo, 5);
		PlayWAV(WavFile);
		SetMemory(0x6509B0, SetTo, 128);
		PlayWAV(WavFile);
		SetMemory(0x6509B0, SetTo, 129);
		PlayWAV(WavFile);
		SetMemory(0x6509B0, SetTo, 130);
		PlayWAV(WavFile);
		SetMemory(0x6509B0, SetTo, 131);
		PlayWAV(WavFile);
		SetMemory(0x6509B0, SetTo, FP);
		PreserveTrigger();
	}
	}
for i = 1, 7 do
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,Exactly,i,BGMMode);
	},
	actions = {
		SetCVar(FP,CurrentBGM[2],SetTo,i);
		PreserveTrigger();
	}
}
end

CIfEnd()

Text2 = "\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,Exactly,0,ModeO);
		CDeaths(FP,AtLeast,1,ModeSel);
		CDeaths(FP,AtLeast,1,Gmode);
		CDeaths(FP,Exactly,2,BGMSel);
	},
	actions = {
		SetMemory(0x6509B0, SetTo, 0);
		DisplayText(Text2,4);
		SetMemory(0x6509B0, SetTo, 1);
		DisplayText(Text2,4);
		SetMemory(0x6509B0, SetTo, 2);
		DisplayText(Text2,4);
		SetMemory(0x6509B0, SetTo, 3);
		DisplayText(Text2,4);
		SetMemory(0x6509B0, SetTo, 4);
		DisplayText(Text2,4);
		SetMemory(0x6509B0, SetTo, 5);
		DisplayText(Text2,4);
		SetMemory(0x6509B0, SetTo, 128);
		DisplayText(Text2,4);
		SetMemory(0x6509B0, SetTo, 129);
		DisplayText(Text2,4);
		SetMemory(0x6509B0, SetTo, 130);
		DisplayText(Text2,4);
		SetMemory(0x6509B0, SetTo, 131);
		DisplayText(Text2,4);
		SetMemory(0x6509B0, SetTo, FP);
	}
	}

Text3 = "\x13\x18BGM \x04선택이 완료되었습니다."

Text4 = {"\x13\x03[Q] \x0E신나는 \x02[W] \x02진지한 \x02[E] \x02강렬한 \x02[R] \x02강렬한2 \x02[T] \x02메모리 \x02[X] \x02익시드 \x02[M] \x02스페셜",
"\x13\x02[Q] \x02신나는 \x03[W] \x08진지한 \x02[E] \x02강렬한 \x02[R] \x02강렬한2 \x02[T] \x02메모리 \x02[X] \x02익시드 \x02[M] \x02스페셜",
"\x13\x02[Q] \x02신나는 \x02[W] \x02진지한 \x03[E] \x11강렬한 \x02[R] \x02강렬한2 \x02[T] \x02메모리 \x02[X] \x02익시드 \x02[M] \x02스페셜",
"\x13\x02[Q] \x02신나는 \x02[W] \x02진지한 \x02[E] \x02강렬한 \x03[R] \x10강렬한2 \x02[T] \x02메모리 \x02[X] \x02익시드 \x02[M] \x02스페셜",
"\x13\x02[Q] \x02신나는 \x02[W] \x02진지한 \x02[E] \x02강렬한 \x02[R] \x02강렬한2 \x03[T] \x17메모리 \x02[X] \x02익시드 \x02[M] \x02스페셜",
"\x13\x02[Q] \x02신나는 \x02[W] \x02진지한 \x02[E] \x02강렬한 \x02[R] \x02강렬한2 \x02[T] \x02메모리 \x03[X] \x1F익시드 \x02[M] \x02스페셜",
"\x13\x02[Q] \x02신나는 \x02[W] \x02진지한 \x02[E] \x02강렬한 \x02[R] \x02강렬한2 \x02[T] \x02메모리 \x02[X] \x02익시드 \x03[M] \x1C스페셜"}
WavFile = "staredit\\wav\\Select.ogg"
for i = 1, 7 do
Trigger { -- 인트로1
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,Exactly,0,ModeO);
		CDeaths(FP,Exactly,2,BGMSel);
		CDeaths(FP,Exactly,i,BGMMode);
	},
	actions = {
		SetMemory(0x6509B0, SetTo, 0);
		PlayWAV(WavFile);
		DisplayText(Text3,4);
		DisplayText(Text4[i],4);
		SetMemory(0x6509B0, SetTo, 1);
		PlayWAV(WavFile);
		DisplayText(Text3,4);
		DisplayText(Text4[i],4);
		SetMemory(0x6509B0, SetTo, 2);
		PlayWAV(WavFile);
		DisplayText(Text3,4);
		DisplayText(Text4[i],4);
		SetMemory(0x6509B0, SetTo, 3);
		PlayWAV(WavFile);
		DisplayText(Text3,4);
		DisplayText(Text4[i],4);
		SetMemory(0x6509B0, SetTo, 4);
		PlayWAV(WavFile);
		DisplayText(Text3,4);
		DisplayText(Text4[i],4);
		SetMemory(0x6509B0, SetTo, 5);
		PlayWAV(WavFile);
		DisplayText(Text3,4);
		DisplayText(Text4[i],4);
		SetMemory(0x6509B0, SetTo, 128);
		PlayWAV(WavFile);
		DisplayText(Text3,4);
		DisplayText(Text4[i],4);
		SetMemory(0x6509B0, SetTo, 129);
		PlayWAV(WavFile);
		DisplayText(Text3,4);
		DisplayText(Text4[i],4);
		SetMemory(0x6509B0, SetTo, 130);
		PlayWAV(WavFile);
		DisplayText(Text3,4);
		DisplayText(Text4[i],4);
		SetMemory(0x6509B0, SetTo, 131);
		PlayWAV(WavFile);
		DisplayText(Text3,4);
		DisplayText(Text4[i],4);
		SetMemory(0x6509B0, SetTo, FP);
		
	},
	}
end

Trigger {
	players = {FP},
	conditions = {
		CDeaths(FP,Exactly,0,ModeO);
		CDeaths(FP,Exactly,2,BGMSel);
	},
	actions = {
		_0DPatchforT13
	}
}

CIfEnd()
Text1 = "\n\n\n\n\n\n\n\n\n\n\x13\x15★ 마 린 키 우 기 GaLaXy.2 ★\n\n\n\n\n"
Trigger { -- 인트로1
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtLeast,1,ModeO);
		CDeaths(FP,AtLeast,0,modeT);
	},
	actions = {
		SetMemory(0x6509B0, SetTo, 0);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 1);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 2);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 3);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 4);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 5);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 128);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 129);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 130);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 131);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, FP);
		
	},
	}
Text1 = "\n\n\n\n\n\n\n\n\n\n\x13\x05★ 마 린 키 우 기 GaLaXy.2 ★\n\n\n\n\n"
Trigger { -- 인트로1
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtLeast,1,ModeO);
		CDeaths(FP,AtLeast,3,modeT);
	},
	actions = {
		SetMemory(0x6509B0, SetTo, 0);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 1);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 2);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 3);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 4);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 5);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 128);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 129);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 130);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 131);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, FP);
		
	},
	}
Text1 = "\n\n\n\n\n\n\n\n\n\n\x13\x10★ 마 린 키 우 기 GaLaXy.2 ★\n\n\n\n\n"
Trigger { -- 인트로1
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtLeast,1,ModeO);
		CDeaths(FP,AtLeast,6,modeT);
	},
	actions = {
		SetMemory(0x6509B0, SetTo, 0);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 1);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 2);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 3);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 4);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 5);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 128);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 129);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 130);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 131);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, FP);
		
	},
	}
Text1 = "\n\n\n\n\n\n\n\n\n\n\x13\x18★ 마 린 키 우 기 GaLaXy.2 ★\n\n\n\n\n"
Trigger { -- 인트로1
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtLeast,1,ModeO);
		CDeaths(FP,AtLeast,9,modeT);
	},
	actions = {
		SetMemory(0x6509B0, SetTo, 0);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 1);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 2);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 3);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 4);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 5);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 128);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 129);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 130);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 131);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, FP);
		
	},
	}
Text1 = "\n\n\n\n\n\n\n\n\n\n\x13\x0E★ 마 린 키 우 기 GaLaXy.2 ★\n\n\n\n\n"
Trigger { -- 인트로1
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtLeast,1,ModeO);
		CDeaths(FP,AtLeast,12,modeT);
	},
	actions = {
		SetMemory(0x6509B0, SetTo, 0);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 1);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 2);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 3);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 4);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 5);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 128);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 129);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 130);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 131);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, FP);
		
	},
	}
Text1 = "\n\n\n\n\n\n\n\n\n\n\x13\x11★ 마 린 키 우 기 GaLaXy.2 ★\n\n\n\n\n"
Trigger { -- 인트로1
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtLeast,1,ModeO);
		CDeaths(FP,AtLeast,15,modeT);
	},
	actions = {
		SetMemory(0x6509B0, SetTo, 0);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 1);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 2);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 3);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 4);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 5);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 128);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 129);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 130);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 131);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, FP);
		
	},
	}
Text1 = "\n\n\n\n\n\n\n\n\n\n\x13\x16★ 마 린 키 우 기 GaLaXy.2 ★\n\n\n\n\n"
Trigger { -- 인트로1
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtLeast,1,ModeO);
		CDeaths(FP,AtLeast,18,modeT);
	},
	actions = {
		SetMemory(0x6509B0, SetTo, 0);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 1);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 2);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 3);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 4);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 5);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 128);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 129);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 130);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 131);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, FP);
		
	},
	}
Text1 = "\n\n\n\n\n\n\n\n\n\n\x13\x03★ \x04마 린 키 우 기 \x03G\x0Fa\x10L\x0Fa\x03X\x0Fy\x04.2 \x03★\n\x13\x04Creator - GALAXY_BURST\n\x13\x04"..VName.."\n\n\n"
WavFile = "staredit\\wav\\GameStart.ogg"
Trigger { -- 인트로1
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtLeast,1,ModeO);
		CDeaths(FP,AtLeast,21,modeT);
	},
	actions = {
		SetMemory(0x6509B0, SetTo, 0);
		PlayWAV(WavFile);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 1);
		PlayWAV(WavFile);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 2);
		PlayWAV(WavFile);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 3);
		PlayWAV(WavFile);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 4);
		PlayWAV(WavFile);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 5);
		PlayWAV(WavFile);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 128);
		PlayWAV(WavFile);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 129);
		PlayWAV(WavFile);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 130);
		PlayWAV(WavFile);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 131);
		PlayWAV(WavFile);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, FP);
		
	},
	}
Text1 = "\n\n\n\n\n\n\n\n\n\n\x13\x03★ \x04마 린 키 우 기 \x03G\x0Fa\x10L\x0Fa\x03X\x0Fy\x04.2 \x03★\n\x13\x04Creator - GALAXY_BURST\n\x13\x04"..VName.."\n\n\x13\x043\n"
WavFile = "staredit\\wav\\Countdown.ogg"
Trigger { -- 인트로1
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtLeast,1,ModeO);
		CDeaths(FP,AtLeast,21+(24*2),modeT);
	},
	actions = {
		SetMemory(0x6509B0, SetTo, 0);
		PlayWAV(WavFile);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 1);
		PlayWAV(WavFile);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 2);
		PlayWAV(WavFile);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 3);
		PlayWAV(WavFile);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 4);
		PlayWAV(WavFile);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 5);
		PlayWAV(WavFile);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 128);
		PlayWAV(WavFile);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 129);
		PlayWAV(WavFile);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 130);
		PlayWAV(WavFile);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 131);
		PlayWAV(WavFile);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, FP);
		
	},
	}
Text1 = "\n\n\n\n\n\n\n\n\n\n\x13\x03★ \x04마 린 키 우 기 \x03G\x0Fa\x10L\x0Fa\x03X\x0Fy\x04.2 \x03★\n\x13\x04Creator - GALAXY_BURST\n\x13\x04"..VName.."\n\n\x13\x042\n"
Trigger { -- 인트로1
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtLeast,1,ModeO);
		CDeaths(FP,AtLeast,21+(24*3),modeT);
	},
	actions = {
		SetMemory(0x6509B0, SetTo, 0);
		PlayWAV(WavFile);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 1);
		PlayWAV(WavFile);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 2);
		PlayWAV(WavFile);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 3);
		PlayWAV(WavFile);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 4);
		PlayWAV(WavFile);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 5);
		PlayWAV(WavFile);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 128);
		PlayWAV(WavFile);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 129);
		PlayWAV(WavFile);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 130);
		PlayWAV(WavFile);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 131);
		PlayWAV(WavFile);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, FP);
		
	},
	}
Text1 = "\n\n\n\n\n\n\n\n\n\n\x13\x03★ \x04마 린 키 우 기 \x03G\x0Fa\x10L\x0Fa\x03X\x0Fy\x04.2 \x03★\n\x13\x04Creator - GALAXY_BURST\n\x13\x04"..VName.."\n\n\x13\x041\n"
Trigger { -- 인트로1
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtLeast,1,ModeO);
		CDeaths(FP,AtLeast,21+(24*4),modeT);
	},
	actions = {
		SetMemory(0x6509B0, SetTo, 0);
		PlayWAV(WavFile);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 1);
		PlayWAV(WavFile);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 2);
		PlayWAV(WavFile);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 3);
		PlayWAV(WavFile);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 4);
		PlayWAV(WavFile);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 5);
		PlayWAV(WavFile);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 128);
		PlayWAV(WavFile);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 129);
		PlayWAV(WavFile);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 130);
		PlayWAV(WavFile);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, 131);
		PlayWAV(WavFile);
		DisplayText(Text1,4);
		SetMemory(0x6509B0, SetTo, FP);
		
	},
	}
WavFile = "sound\\Bullet\\pshield.wav"
Text1 = "\n\n\n\n\n\n\n\n\n\n\x13\x03★ \x04마 린 키 우 기 \x03G\x0Fa\x10L\x0Fa\x03X\x0Fy\x04.2 \x03★\n\x13\x04Creator - GALAXY_BURST\n\x13\x04"..VName.."\n\n\x13\x04START"
Trigger { -- 인트로1
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtLeast,1,ModeO);
		CDeaths(FP,AtLeast,21+(24*5),modeT);
	},
	actions = {
		SetMemory(0x6509B0, SetTo, 0);
		DisplayText(Text1,4);
		PlayWAV(WavFile);
		CenterView(2);
		SetMemory(0x6509B0, SetTo, 1);
		DisplayText(Text1,4);
		PlayWAV(WavFile);
		CenterView(2);
		SetMemory(0x6509B0, SetTo, 2);
		DisplayText(Text1,4);
		PlayWAV(WavFile);
		CenterView(2);
		SetMemory(0x6509B0, SetTo, 3);
		DisplayText(Text1,4);
		PlayWAV(WavFile);
		CenterView(2);
		SetMemory(0x6509B0, SetTo, 4);
		DisplayText(Text1,4);
		PlayWAV(WavFile);
		CenterView(2);
		SetMemory(0x6509B0, SetTo, 5);
		DisplayText(Text1,4);
		PlayWAV(WavFile);
		CenterView(2);
		SetMemory(0x6509B0, SetTo, 128);
		DisplayText(Text1,4);
		PlayWAV(WavFile);
		CenterView(2);
		SetMemory(0x6509B0, SetTo, 129);
		DisplayText(Text1,4);
		PlayWAV(WavFile);
		CenterView(2);
		SetMemory(0x6509B0, SetTo, 130);
		DisplayText(Text1,4);
		PlayWAV(WavFile);
		CenterView(2);
		SetMemory(0x6509B0, SetTo, 131);
		DisplayText(Text1,4);
		PlayWAV(WavFile);
		CenterView(2);
		SetMemory(0x6509B0, SetTo, FP);
		
		
	},
	}
Trigger { -- 인트로1
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtLeast,1,ModeO);
		CDeaths(FP,AtLeast,21+(24*5),modeT);
	},
	actions = {
		--CreateUnit(2,0,2,Force1);
		CreateUnit(5,20,2,Force1);
		--CreateUnit(20,16,2,Force1);
		--CreateUnit(20,100,2,Force1);
		SetResources(Force1,SetTo,70000,Ore);
		SetResources(Force1,Add,1,Gas);
		SetInvincibility(Disable,"Mineral Field (Type 1)",AllPlayers,"Anywhere");
		SetInvincibility(Disable,"Mineral Field (Type 2)",AllPlayers,"Anywhere");
		SetInvincibility(Disable,"Mineral Field (Type 3)",AllPlayers,"Anywhere");
		SetInvincibility(Disable,"Vespene Geyser",AllPlayers,"Anywhere");
		SetMemory(0x5124F0,SetTo,0x1D);
		SetSwitch("Switch 201",Set);
		SetCDeaths(FP,SetTo,1,BGMType);
		SetCJump(0x103,0);
		
	},
	}
Trigger { -- 인트로1
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtLeast,1,ModeO);
	},
	actions = {
		SetCDeaths(FP,Add,1,ModeT);
		PreserveTrigger();
		
	},
	}
CIfEnd()
CMov(FP,Dx,_Read(0x51CE8C))
CiSub(FP,Dy,_Mov(0xFFFFFFFF),Dx)
CiSub(FP,Dt,Dy,Du)
CMov(FP,Dv,Dt)
UnitReadX(FP,AllPlayers,229,64,count)




CIfX(FP,Never())



	for i = 0, 5 do
	CElseIfX(PlayerCheck(i,1))
	CRead(FP,Cunit2,0x6284E8+(i*0x30))
	Trigger {
		players = {FP},
		conditions = {
			Command(i,AtMost,0,218);
			Command(AllPlayers,AtLeast,1,218);		
		},
		actions = {
			GiveUnits(All,218,AllPlayers,"Anywhere",i);
			GiveUnits(All,160,AllPlayers,"Anywhere",i);
		}
	}
	end
	CIfXEnd()
	CIfOnce(FP,{TMemory(_Mem(Dt),AtLeast,10000)})
CMov(FP,Dt,0)
CIfEnd()
for i = 0,5 do
CIf(FP,PlayerCheck(i,1))
CDoActions(FP,{TSetDeathsX(i,Subtract,Dt,440,0xFFFFFF)})
CMov(FP,0x57f120 + (i*4) , CanC)
CMov(FP,0x582174 + (i*4) , CanDefeat)
CIfEnd()
end
CDoActions(FP,{TSetDeathsX(FP,Subtract,Dt,440,0xFFFFFF)})
CIf(FP,{CVar(FP,HiddenPts[2],AtLeast,1)
})
CMov(FP,CanDefeat,0)
CMov(FP,ExchangeRate,ExrateBackup)
CIfEnd()


CIfX(FP,{TMemory(_Mem(Cunit2),AtLeast,1)})
f_EPD(FP,Cunit3,Cunit2)
SetRecoverCp(Cunit3)
RecoverCp(FP)
CIfX(FP,{CDeaths(FP,AtLeast,1,TestMode),Deaths(P1,AtLeast,1,203),Switch("Switch 200",Cleared)})


DoActions(FP,MoveCp(Add,25*4))
Trigger {
	players = {FP},
	conditions = {
		DeathsX(CurrentPlayer,AtMost,57,0,0xFF);
		
	},
	actions = {
		MoveCp(Subtract,6*4);
		SetDeathsX(CurrentPlayer,SetTo,0,0,0xFF00);
		MoveCp(Add,6*4);
		--MoveCp(Add,21*4);
		--SetDeathsX(CurrentPlayer,SetTo,0,0,0xFF000000);
		--MoveCp(Subtract,15*4);
		PreserveTrigger();
	}
	}
Trigger {
	players = {FP},
	conditions = {
		DeathsX(CurrentPlayer,AtLeast,59,0,0xFF);
		
	},
	actions = {
		MoveCp(Subtract,6*4);
		SetDeathsX(CurrentPlayer,SetTo,0,0,0xFF00);
		MoveCp(Add,6*4);
		--MoveCp(Add,21*4);
		--SetDeathsX(CurrentPlayer,SetTo,0,0,0xFF000000);
		--MoveCp(Subtract,15*4);
		PreserveTrigger();
	}
	}
DoActions(FP,{MoveCp(Subtract,25*4),SetSwitch("Switch 200",Set)})
CElseX()
DoActions(FP,{SetSwitch("Switch 200",Clear)})
CIfXEnd()
DoActions(FP,MoveCp(Add,0x64))
CIfX(FP,{Deaths(CurrentPlayer,Exactly,218,0)})
DoActions(FP,MoveCp(Subtract,0x3C))
CReadX(FP,Speed,0x5124F0,"X",0xFF)
for i = 0, 9 do
CIfX(FP,{DeathsX(CurrentPlayer,AtLeast,3744+(32*i),0,0xFFFF),DeathsX(CurrentPlayer,AtMost,3744+(32*(i+1)),0,0xFFFF),TTMemory(_Mem(Speed),"!=",SpeedV[i+1])})
Call_SaveCp()
Trigger { -- No comment (E93EF7A9)
	players = {FP},
	actions = {PreserveTrigger();
		SetMemory(0x6509B0, SetTo, 0x00000000);
		PlayWAV("staredit\\wav\\sel_m.ogg");DisplayText("\x13\x07『 \x0F배속 변경 \x10- "..XSpeed[i+1].." \x07』", 0);
		SetMemory(0x6509B0, SetTo, 0x00000001);
		PlayWAV("staredit\\wav\\sel_m.ogg");DisplayText("\x13\x07『 \x0F배속 변경 \x10- "..XSpeed[i+1].." \x07』", 0);
		SetMemory(0x6509B0, SetTo, 0x00000002);
		PlayWAV("staredit\\wav\\sel_m.ogg");DisplayText("\x13\x07『 \x0F배속 변경 \x10- "..XSpeed[i+1].." \x07』", 0);
		SetMemory(0x6509B0, SetTo, 0x00000003);
		PlayWAV("staredit\\wav\\sel_m.ogg");DisplayText("\x13\x07『 \x0F배속 변경 \x10- "..XSpeed[i+1].." \x07』", 0);
		SetMemory(0x6509B0, SetTo, 0x00000004);
		PlayWAV("staredit\\wav\\sel_m.ogg");DisplayText("\x13\x07『 \x0F배속 변경 \x10- "..XSpeed[i+1].." \x07』", 0);
		SetMemory(0x6509B0, SetTo, 0x00000005);
		PlayWAV("staredit\\wav\\sel_m.ogg");DisplayText("\x13\x07『 \x0F배속 변경 \x10- "..XSpeed[i+1].." \x07』", 0);
		SetMemory(0x6509B0, SetTo, 128);
		PlayWAV("staredit\\wav\\sel_m.ogg");DisplayText("\x13\x07『 \x0F배속 변경 \x10- "..XSpeed[i+1].." \x07』", 0);
		SetMemory(0x6509B0, SetTo, 129);
		PlayWAV("staredit\\wav\\sel_m.ogg");DisplayText("\x13\x07『 \x0F배속 변경 \x10- "..XSpeed[i+1].." \x07』", 0);
		SetMemory(0x6509B0, SetTo, 130);
		PlayWAV("staredit\\wav\\sel_m.ogg");DisplayText("\x13\x07『 \x0F배속 변경 \x10- "..XSpeed[i+1].." \x07』", 0);
		SetMemory(0x6509B0, SetTo, 131);
		PlayWAV("staredit\\wav\\sel_m.ogg");DisplayText("\x13\x07『 \x0F배속 변경 \x10- "..XSpeed[i+1].." \x07』", 0);
		SetMemory(0x6509B0, SetTo, FP);
		SetMemory(0x5124F0,SetTo,SpeedV[i+1])
	},
	}
Call_LoadCp()
CIfXEnd()
end
CIfXEnd()
CIfXEnd()
SetRecoverCp()
RecoverCp(FP)
CMov(FP,Du,Dy)
--]]
NWhile(FP,CDeaths(FP,AtLeast,1,TGiveforCoCoon),SetCDeaths(FP,Subtract,1,TGiveforCoCoon))
DoActions(FP,{

		GiveUnits(1,80,11,64,FP);
		GiveUnits(1,21,11,64,FP);
		GiveUnits(1,80,11,64,6);
		GiveUnits(1,21,11,64,6);
})
NWhileEnd()
NIf(FP,CDeaths(FP,AtLeast,1,CocoonLaunch))
CMov(FP,0x6509B0,EPD(GunPtrMemory))
CWhile(FP,Memory(0x6509B0,AtMost,EPD(GunPtrMemory)+14))

CIf(FP,Deaths(CurrentPlayer,AtLeast,1,0))
Trigger { -- No comment (00F60EE3)
	players = {FP},
	conditions = {
		Label(0);
		DeathsX(CurrentPlayer,Exactly,0*0x1000,0,0xF000);
	},
	actions = {
		SetCVar(FP,CocoonUID[2],SetTo,80);
		PreserveTrigger();
	},
	}
Trigger { -- No comment (00F60EE3)
	players = {FP},
	conditions = {
		Label(0);
		DeathsX(CurrentPlayer,Exactly,1*0x1000,0,0xF000);
	},
	actions = {
		SetCVar(FP,CocoonUID[2],SetTo,21);
		PreserveTrigger();
	},
	}

Call_SaveCp()
CMov(FP,CPosX,_Mov(_Read(BackupCP),0xFFF))
CMov(FP,CPosY,_Div(_Mov(_Read(BackupCP),0xFFF0000),65536))

CDoActions(FP,{
TSetMemory(0x58DC60 + 0x14*0,SetTo,_Sub(CPosX,18)),
TSetMemory(0x58DC68 + 0x14*0,SetTo,_Add(CPosX,18)),
TSetMemory(0x58DC64 + 0x14*0,SetTo,_Sub(CPosY,18)),
TSetMemory(0x58DC6C + 0x14*0,SetTo,_Add(CPosY,18)),
TCreateunit(1,CocoonUID,1,_Add(_Mod(_Rand(),2),6)),
Createunit(1,84,1,FP)
})
CMov(FP,CocoonValue2,_Mod(CocoonValue,4))
for i = 0, 3 do
Trigger { -- No comment (00F60EE3)
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtMost,0,GunBossAct);
		CVar(FP,CocoonValue2[2],Exactly,i);
	},
	actions = {
		SetInvincibility(Enable,80,Force2,1);
		SetInvincibility(Enable,21,Force2,1);
		GiveUnits(All,80,Force2,1,11);
		GiveUnits(All,21,Force2,1,11);
		Order(80,11,1,Move,26+i);	
		Order(21,11,1,Move,26+i);
		PreserveTrigger();
	},
	}

Trigger { -- No comment (00F60EE3)
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtLeast,1,GunBossAct);
		CVar(FP,CocoonValue2[2],Exactly,i);
	},
	actions = {
		Order(80,Force2,1,Attack,26+i);
		Order(21,Force2,1,Attack,26+i);
		PreserveTrigger();
	},
	}

end
Call_LoadCp()
CAdd(FP,CocoonValue,1)
CAdd(FP,0x6509B0,1)
CWhileEnd()
CIfEnd()
DoActionsX(FP,SetCDeaths(FP,Subtract,1,CocoonLaunch))
NIfEnd()
NIf(FP,CDeaths(FP,AtMost,0,DoWhileCon))
NJump(FP,WhileLaunch[2],{CVar(FP,WhileLaunch[2],AtMost,0)})
CMov(FP,WhileLaunch,0)
CMov(FP,0x6509B0,EPD(MemoryPtr))
DoWhile(FP)
NIf(FP,Deaths(CurrentPlayer,AtLeast,1,0)) -- 0 PosCheck
CAdd(FP,WhileLaunch,1)
Call_SaveCp()
CMov(FP,CPosX,_Mov(_Read(BackupCP),0xFFF))
CMov(FP,CPosY,_Div(_Mov(_Read(BackupCP),0xFFF0000),65536))
CDoActions(FP,{
TSetMemory(0x58DC60 + 0x14*0,SetTo,_Sub(CPosX,32*9)),
TSetMemory(0x58DC68 + 0x14*0,SetTo,_Add(CPosX,32*9)),
TSetMemory(0x58DC64 + 0x14*0,SetTo,_Sub(CPosY,32*9)),
TSetMemory(0x58DC6C + 0x14*0,SetTo,_Add(CPosY,32*9)),
})
Call_LoadCp()





NIf(FP,DeathsX(CurrentPlayer,AtMost,1*0x1000,0,0xF000)) -- BdIndex LAIR HIVE
Trigger { -- No comment (00F60EE3)
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP, AtLeast, 2, GMode);
		CVar(FP,SetPlayers[2],Exactly,1);
		Bring(Force2, AtLeast, 6, "Men", 1);
		Bring(Force1, AtMost, 2, "Factories", 1);
	},
	actions = {
		SetCVar(FP,PaneltyPoint[2],Add,1);
		SetCVar(FP,PaneltyPoint[2],Add,1);
		PreserveTrigger();
	},
	}
Trigger { -- No comment (00F60EE3)
	players = {FP},
	conditions = {
		Label(0);
		CVar(FP,SetPlayers[2],AtLeast,2);
		CDeaths(FP, AtLeast, 2, GMode);
		Bring(Force2, AtLeast, 6, "Men", 1);
		Bring(Force1, AtMost, 2, "Factories", 1);
	},
	actions = {
		SetCVar(FP,PaneltyPoint[2],Add,1);
		PreserveTrigger();
	},
	}
Trigger { -- No comment (00F60EE3)
	players = {FP},
	conditions = {
		Label(0);
		CVar(FP,SetPlayers[2],AtLeast,2);
		Bring(Force2, AtLeast, 6, "Men", 1);
		Bring(Force1, AtLeast, 3, "Factories", 1);
	},
	actions = {
		SetCDeaths(FP,Add,1,BonusP);
		PreserveTrigger();
	},
	}
Trigger { -- No comment (00F60EE3)
	players = {FP},
	conditions = {
		Label(0);
		CVar(FP,SetPlayers[2],AtLeast,2);
		Bring(Force2, AtMost, 5, "Men", 1);
	},
	actions = {
		SetCDeaths(FP,Add,1,BonusP);
		PreserveTrigger();
	},
	}


DoActions(FP,MoveCp(Add,1*4))
NIf(FP,{DeathsX(CurrentPlayer,AtMost,0,0,0xFFF),DeathsX(CurrentPlayer,AtMost,2*16777216,0,0xFF000000)}) -- AllowSpawnSet for LairHive
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		DeathsX(CurrentPlayer,Exactly,0*65536,0,0xFF0000);
		DeathsX(CurrentPlayer,Exactly,1*16777216,0,0xFF000000);
	},
	actions = {
		SetCVar(FP,UnitIDVLair[2],SetTo,80);
		SetCVar(FP,UnitIDVHive[2],SetTo,80);
		SetCVar(FP,UnitIDV2Lair[2],SetTo,87);
		SetCVar(FP,UnitIDV2Hive[2],SetTo,87);
		PreserveTrigger();
	}
}
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		DeathsX(CurrentPlayer,Exactly,0*65536,0,0xFF0000);
		DeathsX(CurrentPlayer,Exactly,2*16777216,0,0xFF000000);
	},
	actions = {
		SetCVar(FP,UnitIDVLair[2],SetTo,21);
		SetCVar(FP,UnitIDVHive[2],SetTo,21);
		SetCVar(FP,UnitIDV2Lair[2],SetTo,15);
		SetCVar(FP,UnitIDV2Hive[2],SetTo,15);
		PreserveTrigger();
	}
}

Trigger {
	players = {FP},
	conditions = {
		Label(0);
		DeathsX(CurrentPlayer,Exactly,1*65536,0,0xFF0000);
	},
	actions = {
		SetCVar(FP,UnitIDVLair[2],SetTo,28);
		SetCVar(FP,UnitIDVHive[2],SetTo,28);
		SetCVar(FP,UnitIDV2Lair[2],SetTo,17);
		SetCVar(FP,UnitIDV2Hive[2],SetTo,17);
		PreserveTrigger();
	}
}

Trigger {
	players = {FP},
	conditions = {
		Label(0);
		DeathsX(CurrentPlayer,Exactly,2*65536,0,0xFF0000);
	},
	actions = {
		SetCVar(FP,UnitIDV2Lair[2],SetTo,77);
		SetCVar(FP,UnitIDV2Hive[2],SetTo,78);
		PreserveTrigger();
	}
}

Trigger {
	players = {FP},
	conditions = {
		Label(0);
		DeathsX(CurrentPlayer,Exactly,3*65536,0,0xFF0000);
	},
	actions = {
		SetCVar(FP,UnitIDV2Lair[2],SetTo,10);
		SetCVar(FP,UnitIDV2Hive[2],SetTo,19);
		PreserveTrigger();
	}
}
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		DeathsX(CurrentPlayer,Exactly,4*65536,0,0xFF0000);
	},
	actions = {
		SetCVar(FP,UnitIDV2Lair[2],SetTo,75);
		SetCVar(FP,UnitIDV2Hive[2],SetTo,79);
		PreserveTrigger();
	}
}
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		DeathsX(CurrentPlayer,Exactly,5*65536,0,0xFF0000);
	},
	actions = {
		SetCVar(FP,UnitIDV2Lair[2],SetTo,76);
		SetCVar(FP,UnitIDV2Hive[2],SetTo,81);
		PreserveTrigger();
	}
}

Trigger {
	players = {FP},
	conditions = {
		Label(0);
		DeathsX(CurrentPlayer,Exactly,6*65536,0,0xFF0000);
	},
	actions = {
		SetCVar(FP,UnitIDV2Lair[2],SetTo,65);
		SetCVar(FP,UnitIDV2Hive[2],SetTo,66);
		PreserveTrigger();
	}
}

Trigger {
	players = {FP},
	conditions = {
		Label(0);
		DeathsX(CurrentPlayer,Exactly,7*65536,0,0xFF0000);
	},
	actions = {
		SetCVar(FP,UnitIDV2Lair[2],SetTo,32);
		SetCVar(FP,UnitIDV2Hive[2],SetTo,52);
		PreserveTrigger();
	}
}

Trigger {
	players = {FP},
	conditions = {
		Label(0);
		DeathsX(CurrentPlayer,Exactly,8*65536,0,0xFF0000);
	},
	actions = {
		SetCVar(FP,UnitIDV2Lair[2],SetTo,79);
		SetCVar(FP,UnitIDV2Hive[2],SetTo,50);
		PreserveTrigger();
	}
}

Trigger {
	players = {FP},
	conditions = {
		Label(0);
		DeathsX(CurrentPlayer,Exactly,9*65536,0,0xFF0000);
	},
	actions = {
		SetCVar(FP,UnitIDV2Lair[2],SetTo,89);
		SetCVar(FP,UnitIDV2Hive[2],SetTo,25);
		PreserveTrigger();
	}
}
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		DeathsX(CurrentPlayer,AtLeast,2*65536,0,0xFF0000);
		DeathsX(CurrentPlayer,AtMost,5*65536,0,0xFF0000);
	},
	actions = {
		SetCVar(FP,UnitIDVLair[2],SetTo,56);
		SetCVar(FP,UnitIDVHive[2],SetTo,56);
		PreserveTrigger();
	}
}

Trigger {
	players = {FP},
	conditions = {
		Label(0);
		DeathsX(CurrentPlayer,AtLeast,6*65536,0,0xFF0000);
		DeathsX(CurrentPlayer,AtMost,9*65536,0,0xFF0000);
	},
	actions = {
		SetCVar(FP,UnitIDVLair[2],SetTo,57);
		SetCVar(FP,UnitIDVHive[2],SetTo,57);
		PreserveTrigger();
	}
}

for i = 0, 1 do
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		DeathsX(CurrentPlayer,Exactly,(2+(i*4))*65536,0,0xFF0000);
		Switch("Switch 2",Cleared);
		Switch("Switch 3",Cleared);
	},
	actions = {
		SetCVar(FP,UnitIDVLair[2],SetTo,86);
		SetCVar(FP,UnitIDVHive[2],SetTo,86);
		PreserveTrigger();
	}
}
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		DeathsX(CurrentPlayer,Exactly,(3+(i*4))*65536,0,0xFF0000);
		Switch("Switch 2",Cleared);
		Switch("Switch 3",Set);
	},
	actions = {
		SetCVar(FP,UnitIDVLair[2],SetTo,86);
		SetCVar(FP,UnitIDVHive[2],SetTo,86);
		PreserveTrigger();
	}
}
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		DeathsX(CurrentPlayer,Exactly,(4+(i*4))*65536,0,0xFF0000);
		Switch("Switch 2",Set);
		Switch("Switch 3",Cleared);
	},
	actions = {
		SetCVar(FP,UnitIDVLair[2],SetTo,86);
		SetCVar(FP,UnitIDVHive[2],SetTo,86);
		PreserveTrigger();
	}
}
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		DeathsX(CurrentPlayer,Exactly,(5+(i*4))*65536,0,0xFF0000);
		Switch("Switch 2",Set);
		Switch("Switch 3",Set);
	},
	actions = {
		SetCVar(FP,UnitIDVLair[2],SetTo,86);
		SetCVar(FP,UnitIDVHive[2],SetTo,86);
		PreserveTrigger();
	}
}
end


Trigger {
	players = {FP},
	conditions = {
		Label(0);
		DeathsX(CurrentPlayer,Exactly,10*65536,0,0xFF0000);
	},
	actions = {
		SetCVar(FP,UnitIDVLair[2],SetTo,27); -- 나머지 레어
		SetCVar(FP,UnitIDVHive[2],SetTo,102); -- 외곽 하이브
		PreserveTrigger();
	}
}




Trigger {
	players = {FP},
	conditions = {
		Label(0);
		DeathsX(CurrentPlayer,Exactly,11*65536,0,0xFF0000);
	},
	actions = {
		SetCVar(FP,UnitIDVLair[2],SetTo,98); -- 안쪽 레어
		SetCVar(FP,UnitIDVHive[2],SetTo,29); -- 안쪽 하이브
		PreserveTrigger();
	}
}

LV_10_UnitTable = {15,87,17,77,78,79,76,75,81,19,10,3,65,66,75,78,79,76,75,81,3,10,15,87,17,77}
for i = 1, #LV_10_UnitTable do
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		DeathsX(CurrentPlayer,AtLeast,1*16777216,0,0xFF000000);
		DeathsX(CurrentPlayer,Exactly,10*65536,0,0xFF0000);
		DeathsX(CurrentPlayer,Exactly,0*(0x1000),0,0xF000);
		
	},
	actions = {
		SetCVar(FP,UnitIDV2Lair[2],SetTo,LV_10_UnitTable[i]); -- 나머지 레어
		SetCVar(FP,UnitIDV2Hive[2],SetTo,LV_10_UnitTable[i]); -- 외곽 하이브
		SetDeathsX(CurrentPlayer,SetTo,1*0x1000,0,0xF000);
	}
}
end
LV_11_UnitTable = {32,74,23,68,32,74,23,68,32,74,23,68}
for i = 1, #LV_11_UnitTable do
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		DeathsX(CurrentPlayer,AtLeast,1*16777216,0,0xFF000000);
		DeathsX(CurrentPlayer,Exactly,11*65536,0,0xFF0000);
		DeathsX(CurrentPlayer,Exactly,0*(0x1000),0,0xF000);
		
	},
	actions = {
		SetCVar(FP,UnitIDV2Lair[2],SetTo,LV_11_UnitTable[i]); -- 나머지 레어
		SetCVar(FP,UnitIDV2Hive[2],SetTo,LV_11_UnitTable[i]); -- 외곽 하이브
		SetDeathsX(CurrentPlayer,SetTo,1*0x1000,0,0xF000);
	}
}
end

DoActions(FP,SetDeathsX(CurrentPlayer,SetTo,0*0x1000,0,0xF000))



DoActions(FP,MoveCp(Subtract,1*4))



Call_SaveCp()




NIf(FP,{TMemoryX(BackupCP,Exactly,0,0xF000)}) -- if lair

Call_LoadCp()
DoActions(FP,MoveCp(Add,1*4))
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		DeathsX(CurrentPlayer,Exactly,0*16777216,0,0xFF000000);
	},
	actions = {
		SetCVar(FP,UnitIDV[2],SetTo,55);
		PreserveTrigger();
	}
}
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		DeathsX(CurrentPlayer,Exactly,1*16777216,0,0xFF000000);
	},
	actions = {
		SetCVar(FP,UnitIDV[2],SetTo,55);
		PreserveTrigger();
	}
}
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		DeathsX(CurrentPlayer,Exactly,2*16777216,0,0xFF000000);
	},
	actions = {
		SetCVar(FP,UnitIDV[2],SetTo,56);
		PreserveTrigger();
	}
}
DoActions(FP,MoveCp(Subtract,1*4))

Call_SaveCp()
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFE0),
		SetMemory(0x58DC68, Add, 0x00000020),
		SetMemory(0x58DC64, Add, 0xFFFFFFE0),
		SetMemory(0x58DC6C, Add, 0x00000020),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000020),
		SetMemory(0x58DC68, Add, 0xFFFFFFE0),
		SetMemory(0x58DC64, Add, 0x00000020),
		SetMemory(0x58DC6C, Add, 0xFFFFFFE0),
		SetMemory(0x58DC60, Add, 0x00000028),
		SetMemory(0x58DC68, Add, 0x00000068),
		SetMemory(0x58DC64, Add, 0xFFFFFFE0),
		SetMemory(0x58DC6C, Add, 0x00000020),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFD8),
		SetMemory(0x58DC68, Add, 0xFFFFFF98),
		SetMemory(0x58DC64, Add, 0x00000020),
		SetMemory(0x58DC6C, Add, 0xFFFFFFE0),
		SetMemory(0x58DC60, Add, 0x00000004),
		SetMemory(0x58DC68, Add, 0x00000044),
		SetMemory(0x58DC64, Add, 0x0000001E),
		SetMemory(0x58DC6C, Add, 0x0000005E),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFFC),
		SetMemory(0x58DC68, Add, 0xFFFFFFBC),
		SetMemory(0x58DC64, Add, 0xFFFFFFE2),
		SetMemory(0x58DC6C, Add, 0xFFFFFFA2),
		SetMemory(0x58DC60, Add, 0xFFFFFFBD),
		SetMemory(0x58DC68, Add, 0xFFFFFFFD),
		SetMemory(0x58DC64, Add, 0x0000001E),
		SetMemory(0x58DC6C, Add, 0x0000005E),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000043),
		SetMemory(0x58DC68, Add, 0x00000003),
		SetMemory(0x58DC64, Add, 0xFFFFFFE2),
		SetMemory(0x58DC6C, Add, 0xFFFFFFA2),
		SetMemory(0x58DC60, Add, 0xFFFFFF98),
		SetMemory(0x58DC68, Add, 0xFFFFFFD8),
		SetMemory(0x58DC64, Add, 0xFFFFFFE1),
		SetMemory(0x58DC6C, Add, 0x00000020),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000068),
		SetMemory(0x58DC68, Add, 0x00000028),
		SetMemory(0x58DC64, Add, 0x0000001F),
		SetMemory(0x58DC6C, Add, 0xFFFFFFE0),
		SetMemory(0x58DC60, Add, 0xFFFFFFBC),
		SetMemory(0x58DC68, Add, 0xFFFFFFFC),
		SetMemory(0x58DC64, Add, 0xFFFFFFA2),
		SetMemory(0x58DC6C, Add, 0xFFFFFFE2),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000044),
		SetMemory(0x58DC68, Add, 0x00000004),
		SetMemory(0x58DC64, Add, 0x0000005E),
		SetMemory(0x58DC6C, Add, 0x0000001E),
		SetMemory(0x58DC60, Add, 0x00000004),
		SetMemory(0x58DC68, Add, 0x00000044),
		SetMemory(0x58DC64, Add, 0xFFFFFFA2),
		SetMemory(0x58DC6C, Add, 0xFFFFFFE2),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFFC),
		SetMemory(0x58DC68, Add, 0xFFFFFFBC),
		SetMemory(0x58DC64, Add, 0x0000005E),
		SetMemory(0x58DC6C, Add, 0x0000001E),
		SetMemory(0x58DC60, Add, 0x00000070),
		SetMemory(0x58DC68, Add, 0x000000B0),
		SetMemory(0x58DC64, Add, 0xFFFFFFE0),
		SetMemory(0x58DC6C, Add, 0x00000020),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF90),
		SetMemory(0x58DC68, Add, 0xFFFFFF50),
		SetMemory(0x58DC64, Add, 0x00000020),
		SetMemory(0x58DC6C, Add, 0xFFFFFFE0),
		SetMemory(0x58DC60, Add, 0x0000004C),
		SetMemory(0x58DC68, Add, 0x0000008C),
		SetMemory(0x58DC64, Add, 0x0000001E),
		SetMemory(0x58DC6C, Add, 0x0000005E),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFB4),
		SetMemory(0x58DC68, Add, 0xFFFFFF74),
		SetMemory(0x58DC64, Add, 0xFFFFFFE2),
		SetMemory(0x58DC6C, Add, 0xFFFFFFA2),
		SetMemory(0x58DC60, Add, 0x00000028),
		SetMemory(0x58DC68, Add, 0x00000068),
		SetMemory(0x58DC64, Add, 0x0000005C),
		SetMemory(0x58DC6C, Add, 0x0000009C),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFD8),
		SetMemory(0x58DC68, Add, 0xFFFFFF98),
		SetMemory(0x58DC64, Add, 0xFFFFFFA4),
		SetMemory(0x58DC6C, Add, 0xFFFFFF64),
		SetMemory(0x58DC60, Add, 0xFFFFFFE1),
		SetMemory(0x58DC68, Add, 0x00000020),
		SetMemory(0x58DC64, Add, 0x0000005C),
		SetMemory(0x58DC6C, Add, 0x0000009C),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000001F),
		SetMemory(0x58DC68, Add, 0xFFFFFFE0),
		SetMemory(0x58DC64, Add, 0xFFFFFFA4),
		SetMemory(0x58DC6C, Add, 0xFFFFFF64),
		SetMemory(0x58DC60, Add, 0xFFFFFF99),
		SetMemory(0x58DC68, Add, 0xFFFFFFD9),
		SetMemory(0x58DC64, Add, 0x0000005C),
		SetMemory(0x58DC6C, Add, 0x0000009C),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000067),
		SetMemory(0x58DC68, Add, 0x00000027),
		SetMemory(0x58DC64, Add, 0xFFFFFFA4),
		SetMemory(0x58DC6C, Add, 0xFFFFFF64),
		SetMemory(0x58DC60, Add, 0xFFFFFF74),
		SetMemory(0x58DC68, Add, 0xFFFFFFB5),
		SetMemory(0x58DC64, Add, 0x0000001E),
		SetMemory(0x58DC6C, Add, 0x0000005E),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000008C),
		SetMemory(0x58DC68, Add, 0x0000004B),
		SetMemory(0x58DC64, Add, 0xFFFFFFE2),
		SetMemory(0x58DC6C, Add, 0xFFFFFFA2),
		SetMemory(0x58DC60, Add, 0xFFFFFF50),
		SetMemory(0x58DC68, Add, 0xFFFFFF90),
		SetMemory(0x58DC64, Add, 0xFFFFFFE1),
		SetMemory(0x58DC6C, Add, 0x00000020),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000B0),
		SetMemory(0x58DC68, Add, 0x00000070),
		SetMemory(0x58DC64, Add, 0x0000001F),
		SetMemory(0x58DC6C, Add, 0xFFFFFFE0),
		SetMemory(0x58DC60, Add, 0xFFFFFF74),
		SetMemory(0x58DC68, Add, 0xFFFFFFB4),
		SetMemory(0x58DC64, Add, 0xFFFFFFA2),
		SetMemory(0x58DC6C, Add, 0xFFFFFFE2),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000008C),
		SetMemory(0x58DC68, Add, 0x0000004C),
		SetMemory(0x58DC64, Add, 0x0000005E),
		SetMemory(0x58DC6C, Add, 0x0000001E),
		SetMemory(0x58DC60, Add, 0xFFFFFF98),
		SetMemory(0x58DC68, Add, 0xFFFFFFD8),
		SetMemory(0x58DC64, Add, 0xFFFFFF64),
		SetMemory(0x58DC6C, Add, 0xFFFFFFA4),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000068),
		SetMemory(0x58DC68, Add, 0x00000028),
		SetMemory(0x58DC64, Add, 0x0000009C),
		SetMemory(0x58DC6C, Add, 0x0000005C),
		SetMemory(0x58DC60, Add, 0xFFFFFFE0),
		SetMemory(0x58DC68, Add, 0x0000001F),
		SetMemory(0x58DC64, Add, 0xFFFFFF64),
		SetMemory(0x58DC6C, Add, 0xFFFFFFA4),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000020),
		SetMemory(0x58DC68, Add, 0xFFFFFFE1),
		SetMemory(0x58DC64, Add, 0x0000009C),
		SetMemory(0x58DC6C, Add, 0x0000005C),
		SetMemory(0x58DC60, Add, 0x00000028),
		SetMemory(0x58DC68, Add, 0x00000068),
		SetMemory(0x58DC64, Add, 0xFFFFFF64),
		SetMemory(0x58DC6C, Add, 0xFFFFFFA4),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFD8),
		SetMemory(0x58DC68, Add, 0xFFFFFF98),
		SetMemory(0x58DC64, Add, 0x0000009C),
		SetMemory(0x58DC6C, Add, 0x0000005C),
		SetMemory(0x58DC60, Add, 0x0000004C),
		SetMemory(0x58DC68, Add, 0x0000008C),
		SetMemory(0x58DC64, Add, 0xFFFFFFA2),
		SetMemory(0x58DC6C, Add, 0xFFFFFFE2),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFB4),
		SetMemory(0x58DC68, Add, 0xFFFFFF74),
		SetMemory(0x58DC64, Add, 0x0000005E),
		SetMemory(0x58DC6C, Add, 0x0000001E),
		SetMemory(0x58DC60, Add, 0x000000B8),
		SetMemory(0x58DC68, Add, 0x000000F8),
		SetMemory(0x58DC64, Add, 0xFFFFFFE0),
		SetMemory(0x58DC6C, Add, 0x00000020),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF48),
		SetMemory(0x58DC68, Add, 0xFFFFFF08),
		SetMemory(0x58DC64, Add, 0x00000020),
		SetMemory(0x58DC6C, Add, 0xFFFFFFE0),
		SetMemory(0x58DC60, Add, 0x00000094),
		SetMemory(0x58DC68, Add, 0x000000D4),
		SetMemory(0x58DC64, Add, 0x0000001E),
		SetMemory(0x58DC6C, Add, 0x0000005E),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF6C),
		SetMemory(0x58DC68, Add, 0xFFFFFF2C),
		SetMemory(0x58DC64, Add, 0xFFFFFFE2),
		SetMemory(0x58DC6C, Add, 0xFFFFFFA2),
		SetMemory(0x58DC60, Add, 0x00000070),
		SetMemory(0x58DC68, Add, 0x000000B0),
		SetMemory(0x58DC64, Add, 0x0000005C),
		SetMemory(0x58DC6C, Add, 0x0000009C),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF90),
		SetMemory(0x58DC68, Add, 0xFFFFFF50),
		SetMemory(0x58DC64, Add, 0xFFFFFFA4),
		SetMemory(0x58DC6C, Add, 0xFFFFFF64),
		SetMemory(0x58DC60, Add, 0x0000004C),
		SetMemory(0x58DC68, Add, 0x0000008C),
		SetMemory(0x58DC64, Add, 0x0000009B),
		SetMemory(0x58DC6C, Add, 0x000000DB),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFB4),
		SetMemory(0x58DC68, Add, 0xFFFFFF74),
		SetMemory(0x58DC64, Add, 0xFFFFFF65),
		SetMemory(0x58DC6C, Add, 0xFFFFFF25),
		SetMemory(0x58DC60, Add, 0x00000004),
		SetMemory(0x58DC68, Add, 0x00000044),
		SetMemory(0x58DC64, Add, 0x0000009B),
		SetMemory(0x58DC6C, Add, 0x000000DB),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFFC),
		SetMemory(0x58DC68, Add, 0xFFFFFFBC),
		SetMemory(0x58DC64, Add, 0xFFFFFF65),
		SetMemory(0x58DC6C, Add, 0xFFFFFF25),
		SetMemory(0x58DC60, Add, 0xFFFFFFBD),
		SetMemory(0x58DC68, Add, 0xFFFFFFFD),
		SetMemory(0x58DC64, Add, 0x0000009B),
		SetMemory(0x58DC6C, Add, 0x000000DB),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000043),
		SetMemory(0x58DC68, Add, 0x00000003),
		SetMemory(0x58DC64, Add, 0xFFFFFF65),
		SetMemory(0x58DC6C, Add, 0xFFFFFF25),
		SetMemory(0x58DC60, Add, 0xFFFFFF75),
		SetMemory(0x58DC68, Add, 0xFFFFFFB5),
		SetMemory(0x58DC64, Add, 0x0000009B),
		SetMemory(0x58DC6C, Add, 0x000000DB),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000008B),
		SetMemory(0x58DC68, Add, 0x0000004B),
		SetMemory(0x58DC64, Add, 0xFFFFFF65),
		SetMemory(0x58DC6C, Add, 0xFFFFFF25),
		SetMemory(0x58DC60, Add, 0xFFFFFF51),
		SetMemory(0x58DC68, Add, 0xFFFFFF91),
		SetMemory(0x58DC64, Add, 0x0000005C),
		SetMemory(0x58DC6C, Add, 0x0000009C),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000AF),
		SetMemory(0x58DC68, Add, 0x0000006F),
		SetMemory(0x58DC64, Add, 0xFFFFFFA4),
		SetMemory(0x58DC6C, Add, 0xFFFFFF64),
		SetMemory(0x58DC60, Add, 0xFFFFFF2C),
		SetMemory(0x58DC68, Add, 0xFFFFFF6C),
		SetMemory(0x58DC64, Add, 0x0000001E),
		SetMemory(0x58DC6C, Add, 0x0000005E),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000D4),
		SetMemory(0x58DC68, Add, 0x00000094),
		SetMemory(0x58DC64, Add, 0xFFFFFFE2),
		SetMemory(0x58DC6C, Add, 0xFFFFFFA2),
		SetMemory(0x58DC60, Add, 0xFFFFFF08),
		SetMemory(0x58DC68, Add, 0xFFFFFF48),
		SetMemory(0x58DC64, Add, 0xFFFFFFE1),
		SetMemory(0x58DC6C, Add, 0x00000020),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000F8),
		SetMemory(0x58DC68, Add, 0x000000B8),
		SetMemory(0x58DC64, Add, 0x0000001F),
		SetMemory(0x58DC6C, Add, 0xFFFFFFE0),
		SetMemory(0x58DC60, Add, 0xFFFFFF2C),
		SetMemory(0x58DC68, Add, 0xFFFFFF6C),
		SetMemory(0x58DC64, Add, 0xFFFFFFA2),
		SetMemory(0x58DC6C, Add, 0xFFFFFFE2),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000D4),
		SetMemory(0x58DC68, Add, 0x00000094),
		SetMemory(0x58DC64, Add, 0x0000005E),
		SetMemory(0x58DC6C, Add, 0x0000001E),
		SetMemory(0x58DC60, Add, 0xFFFFFF50),
		SetMemory(0x58DC68, Add, 0xFFFFFF90),
		SetMemory(0x58DC64, Add, 0xFFFFFF64),
		SetMemory(0x58DC6C, Add, 0xFFFFFFA4),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000B0),
		SetMemory(0x58DC68, Add, 0x00000070),
		SetMemory(0x58DC64, Add, 0x0000009C),
		SetMemory(0x58DC6C, Add, 0x0000005C),
		SetMemory(0x58DC60, Add, 0xFFFFFF74),
		SetMemory(0x58DC68, Add, 0xFFFFFFB4),
		SetMemory(0x58DC64, Add, 0xFFFFFF25),
		SetMemory(0x58DC6C, Add, 0xFFFFFF65),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000008C),
		SetMemory(0x58DC68, Add, 0x0000004C),
		SetMemory(0x58DC64, Add, 0x000000DB),
		SetMemory(0x58DC6C, Add, 0x0000009B),
		SetMemory(0x58DC60, Add, 0xFFFFFFBC),
		SetMemory(0x58DC68, Add, 0xFFFFFFFC),
		SetMemory(0x58DC64, Add, 0xFFFFFF25),
		SetMemory(0x58DC6C, Add, 0xFFFFFF65),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000044),
		SetMemory(0x58DC68, Add, 0x00000004),
		SetMemory(0x58DC64, Add, 0x000000DB),
		SetMemory(0x58DC6C, Add, 0x0000009B),
		SetMemory(0x58DC60, Add, 0x00000003),
		SetMemory(0x58DC68, Add, 0x00000043),
		SetMemory(0x58DC64, Add, 0xFFFFFF25),
		SetMemory(0x58DC6C, Add, 0xFFFFFF65),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFFD),
		SetMemory(0x58DC68, Add, 0xFFFFFFBD),
		SetMemory(0x58DC64, Add, 0x000000DB),
		SetMemory(0x58DC6C, Add, 0x0000009B),
		SetMemory(0x58DC60, Add, 0x0000004C),
		SetMemory(0x58DC68, Add, 0x0000008C),
		SetMemory(0x58DC64, Add, 0xFFFFFF25),
		SetMemory(0x58DC6C, Add, 0xFFFFFF65),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFB4),
		SetMemory(0x58DC68, Add, 0xFFFFFF74),
		SetMemory(0x58DC64, Add, 0x000000DB),
		SetMemory(0x58DC6C, Add, 0x0000009B),
		SetMemory(0x58DC60, Add, 0x00000070),
		SetMemory(0x58DC68, Add, 0x000000B0),
		SetMemory(0x58DC64, Add, 0xFFFFFF64),
		SetMemory(0x58DC6C, Add, 0xFFFFFFA4),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF90),
		SetMemory(0x58DC68, Add, 0xFFFFFF50),
		SetMemory(0x58DC64, Add, 0x0000009C),
		SetMemory(0x58DC6C, Add, 0x0000005C),
		SetMemory(0x58DC60, Add, 0x00000094),
		SetMemory(0x58DC68, Add, 0x000000D4),
		SetMemory(0x58DC64, Add, 0xFFFFFFA2),
		SetMemory(0x58DC6C, Add, 0xFFFFFFE2),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF6C),
		SetMemory(0x58DC68, Add, 0xFFFFFF2C),
		SetMemory(0x58DC64, Add, 0x0000005E),
		SetMemory(0x58DC6C, Add, 0x0000001E),
		SetMemory(0x58DC60, Add, 0x00000100),
		SetMemory(0x58DC68, Add, 0x00000140),
		SetMemory(0x58DC64, Add, 0xFFFFFFE0),
		SetMemory(0x58DC6C, Add, 0x00000020),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF00),
		SetMemory(0x58DC68, Add, 0xFFFFFEC0),
		SetMemory(0x58DC64, Add, 0x00000020),
		SetMemory(0x58DC6C, Add, 0xFFFFFFE0),
		SetMemory(0x58DC60, Add, 0x000000DC),
		SetMemory(0x58DC68, Add, 0x0000011C),
		SetMemory(0x58DC64, Add, 0x0000001E),
		SetMemory(0x58DC6C, Add, 0x0000005E),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF24),
		SetMemory(0x58DC68, Add, 0xFFFFFEE4),
		SetMemory(0x58DC64, Add, 0xFFFFFFE2),
		SetMemory(0x58DC6C, Add, 0xFFFFFFA2),
		SetMemory(0x58DC60, Add, 0x000000B8),
		SetMemory(0x58DC68, Add, 0x000000F8),
		SetMemory(0x58DC64, Add, 0x0000005C),
		SetMemory(0x58DC6C, Add, 0x0000009C),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF48),
		SetMemory(0x58DC68, Add, 0xFFFFFF08),
		SetMemory(0x58DC64, Add, 0xFFFFFFA4),
		SetMemory(0x58DC6C, Add, 0xFFFFFF64),
		SetMemory(0x58DC60, Add, 0x00000094),
		SetMemory(0x58DC68, Add, 0x000000D4),
		SetMemory(0x58DC64, Add, 0x0000009B),
		SetMemory(0x58DC6C, Add, 0x000000DB),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF6C),
		SetMemory(0x58DC68, Add, 0xFFFFFF2C),
		SetMemory(0x58DC64, Add, 0xFFFFFF65),
		SetMemory(0x58DC6C, Add, 0xFFFFFF25),
		SetMemory(0x58DC60, Add, 0x00000070),
		SetMemory(0x58DC68, Add, 0x000000B0),
		SetMemory(0x58DC64, Add, 0x000000D9),
		SetMemory(0x58DC6C, Add, 0x00000119),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF90),
		SetMemory(0x58DC68, Add, 0xFFFFFF50),
		SetMemory(0x58DC64, Add, 0xFFFFFF27),
		SetMemory(0x58DC6C, Add, 0xFFFFFEE7),
		SetMemory(0x58DC60, Add, 0x00000028),
		SetMemory(0x58DC68, Add, 0x00000068),
		SetMemory(0x58DC64, Add, 0x000000D9),
		SetMemory(0x58DC6C, Add, 0x00000119),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFD8),
		SetMemory(0x58DC68, Add, 0xFFFFFF98),
		SetMemory(0x58DC64, Add, 0xFFFFFF27),
		SetMemory(0x58DC6C, Add, 0xFFFFFEE7),
		SetMemory(0x58DC60, Add, 0xFFFFFFE1),
		SetMemory(0x58DC68, Add, 0x00000020),
		SetMemory(0x58DC64, Add, 0x000000D9),
		SetMemory(0x58DC6C, Add, 0x00000119),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000001F),
		SetMemory(0x58DC68, Add, 0xFFFFFFE0),
		SetMemory(0x58DC64, Add, 0xFFFFFF27),
		SetMemory(0x58DC6C, Add, 0xFFFFFEE7),
		SetMemory(0x58DC60, Add, 0xFFFFFF99),
		SetMemory(0x58DC68, Add, 0xFFFFFFD9),
		SetMemory(0x58DC64, Add, 0x000000D9),
		SetMemory(0x58DC6C, Add, 0x00000119),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000067),
		SetMemory(0x58DC68, Add, 0x00000027),
		SetMemory(0x58DC64, Add, 0xFFFFFF27),
		SetMemory(0x58DC6C, Add, 0xFFFFFEE7),
		SetMemory(0x58DC60, Add, 0xFFFFFF51),
		SetMemory(0x58DC68, Add, 0xFFFFFF91),
		SetMemory(0x58DC64, Add, 0x000000D9),
		SetMemory(0x58DC6C, Add, 0x00000119),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000AF),
		SetMemory(0x58DC68, Add, 0x0000006F),
		SetMemory(0x58DC64, Add, 0xFFFFFF27),
		SetMemory(0x58DC6C, Add, 0xFFFFFEE7),
		SetMemory(0x58DC60, Add, 0xFFFFFF2D),
		SetMemory(0x58DC68, Add, 0xFFFFFF6D),
		SetMemory(0x58DC64, Add, 0x0000009B),
		SetMemory(0x58DC6C, Add, 0x000000DB),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000D3),
		SetMemory(0x58DC68, Add, 0x00000093),
		SetMemory(0x58DC64, Add, 0xFFFFFF65),
		SetMemory(0x58DC6C, Add, 0xFFFFFF25),
		SetMemory(0x58DC60, Add, 0xFFFFFF09),
		SetMemory(0x58DC68, Add, 0xFFFFFF49),
		SetMemory(0x58DC64, Add, 0x0000005C),
		SetMemory(0x58DC6C, Add, 0x0000009C),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000F7),
		SetMemory(0x58DC68, Add, 0x000000B7),
		SetMemory(0x58DC64, Add, 0xFFFFFFA4),
		SetMemory(0x58DC6C, Add, 0xFFFFFF64),
		SetMemory(0x58DC60, Add, 0xFFFFFEE4),
		SetMemory(0x58DC68, Add, 0xFFFFFF24),
		SetMemory(0x58DC64, Add, 0x0000001E),
		SetMemory(0x58DC6C, Add, 0x0000005E),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000011C),
		SetMemory(0x58DC68, Add, 0x000000DC),
		SetMemory(0x58DC64, Add, 0xFFFFFFE2),
		SetMemory(0x58DC6C, Add, 0xFFFFFFA2),
		SetMemory(0x58DC60, Add, 0xFFFFFEC0),
		SetMemory(0x58DC68, Add, 0xFFFFFF00),
		SetMemory(0x58DC64, Add, 0xFFFFFFE1),
		SetMemory(0x58DC6C, Add, 0x00000020),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000140),
		SetMemory(0x58DC68, Add, 0x00000100),
		SetMemory(0x58DC64, Add, 0x0000001F),
		SetMemory(0x58DC6C, Add, 0xFFFFFFE0),
		SetMemory(0x58DC60, Add, 0xFFFFFEE4),
		SetMemory(0x58DC68, Add, 0xFFFFFF24),
		SetMemory(0x58DC64, Add, 0xFFFFFFA2),
		SetMemory(0x58DC6C, Add, 0xFFFFFFE2),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000011C),
		SetMemory(0x58DC68, Add, 0x000000DC),
		SetMemory(0x58DC64, Add, 0x0000005E),
		SetMemory(0x58DC6C, Add, 0x0000001E),
		SetMemory(0x58DC60, Add, 0xFFFFFF08),
		SetMemory(0x58DC68, Add, 0xFFFFFF48),
		SetMemory(0x58DC64, Add, 0xFFFFFF64),
		SetMemory(0x58DC6C, Add, 0xFFFFFFA4),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000F8),
		SetMemory(0x58DC68, Add, 0x000000B8),
		SetMemory(0x58DC64, Add, 0x0000009C),
		SetMemory(0x58DC6C, Add, 0x0000005C),
		SetMemory(0x58DC60, Add, 0xFFFFFF2C),
		SetMemory(0x58DC68, Add, 0xFFFFFF6C),
		SetMemory(0x58DC64, Add, 0xFFFFFF25),
		SetMemory(0x58DC6C, Add, 0xFFFFFF65),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000D4),
		SetMemory(0x58DC68, Add, 0x00000094),
		SetMemory(0x58DC64, Add, 0x000000DB),
		SetMemory(0x58DC6C, Add, 0x0000009B),
		SetMemory(0x58DC60, Add, 0xFFFFFF50),
		SetMemory(0x58DC68, Add, 0xFFFFFF90),
		SetMemory(0x58DC64, Add, 0xFFFFFEE7),
		SetMemory(0x58DC6C, Add, 0xFFFFFF27),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000B0),
		SetMemory(0x58DC68, Add, 0x00000070),
		SetMemory(0x58DC64, Add, 0x00000119),
		SetMemory(0x58DC6C, Add, 0x000000D9),
		SetMemory(0x58DC60, Add, 0xFFFFFF98),
		SetMemory(0x58DC68, Add, 0xFFFFFFD8),
		SetMemory(0x58DC64, Add, 0xFFFFFEE7),
		SetMemory(0x58DC6C, Add, 0xFFFFFF27),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000068),
		SetMemory(0x58DC68, Add, 0x00000028),
		SetMemory(0x58DC64, Add, 0x00000119),
		SetMemory(0x58DC6C, Add, 0x000000D9),
		SetMemory(0x58DC60, Add, 0xFFFFFFE0),
		SetMemory(0x58DC68, Add, 0x0000001F),
		SetMemory(0x58DC64, Add, 0xFFFFFEE7),
		SetMemory(0x58DC6C, Add, 0xFFFFFF27),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000020),
		SetMemory(0x58DC68, Add, 0xFFFFFFE1),
		SetMemory(0x58DC64, Add, 0x00000119),
		SetMemory(0x58DC6C, Add, 0x000000D9),
		SetMemory(0x58DC60, Add, 0x00000028),
		SetMemory(0x58DC68, Add, 0x00000068),
		SetMemory(0x58DC64, Add, 0xFFFFFEE7),
		SetMemory(0x58DC6C, Add, 0xFFFFFF27),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFD8),
		SetMemory(0x58DC68, Add, 0xFFFFFF98),
		SetMemory(0x58DC64, Add, 0x00000119),
		SetMemory(0x58DC6C, Add, 0x000000D9),
		SetMemory(0x58DC60, Add, 0x00000070),
		SetMemory(0x58DC68, Add, 0x000000B0),
		SetMemory(0x58DC64, Add, 0xFFFFFEE7),
		SetMemory(0x58DC6C, Add, 0xFFFFFF27),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF90),
		SetMemory(0x58DC68, Add, 0xFFFFFF50),
		SetMemory(0x58DC64, Add, 0x00000119),
		SetMemory(0x58DC6C, Add, 0x000000D9),
		SetMemory(0x58DC60, Add, 0x00000094),
		SetMemory(0x58DC68, Add, 0x000000D4),
		SetMemory(0x58DC64, Add, 0xFFFFFF25),
		SetMemory(0x58DC6C, Add, 0xFFFFFF65),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF6C),
		SetMemory(0x58DC68, Add, 0xFFFFFF2C),
		SetMemory(0x58DC64, Add, 0x000000DB),
		SetMemory(0x58DC6C, Add, 0x0000009B),
		SetMemory(0x58DC60, Add, 0x000000B8),
		SetMemory(0x58DC68, Add, 0x000000F8),
		SetMemory(0x58DC64, Add, 0xFFFFFF64),
		SetMemory(0x58DC6C, Add, 0xFFFFFFA4),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF48),
		SetMemory(0x58DC68, Add, 0xFFFFFF08),
		SetMemory(0x58DC64, Add, 0x0000009C),
		SetMemory(0x58DC6C, Add, 0x0000005C),
		SetMemory(0x58DC60, Add, 0x000000DC),
		SetMemory(0x58DC68, Add, 0x0000011C),
		SetMemory(0x58DC64, Add, 0xFFFFFFA2),
		SetMemory(0x58DC6C, Add, 0xFFFFFFE2),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF24),
		SetMemory(0x58DC68, Add, 0xFFFFFEE4),
		SetMemory(0x58DC64, Add, 0x0000005E),
		SetMemory(0x58DC6C, Add, 0x0000001E),
		SetMemory(0x58DC60, Add, 0x00000148),
		SetMemory(0x58DC68, Add, 0x00000188),
		SetMemory(0x58DC64, Add, 0xFFFFFFE0),
		SetMemory(0x58DC6C, Add, 0x00000020),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFEB8),
		SetMemory(0x58DC68, Add, 0xFFFFFE78),
		SetMemory(0x58DC64, Add, 0x00000020),
		SetMemory(0x58DC6C, Add, 0xFFFFFFE0),
		SetMemory(0x58DC60, Add, 0x00000124),
		SetMemory(0x58DC68, Add, 0x00000164),
		SetMemory(0x58DC64, Add, 0x0000001E),
		SetMemory(0x58DC6C, Add, 0x0000005E),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFEDC),
		SetMemory(0x58DC68, Add, 0xFFFFFE9C),
		SetMemory(0x58DC64, Add, 0xFFFFFFE2),
		SetMemory(0x58DC6C, Add, 0xFFFFFFA2),
		SetMemory(0x58DC60, Add, 0x00000100),
		SetMemory(0x58DC68, Add, 0x00000140),
		SetMemory(0x58DC64, Add, 0x0000005C),
		SetMemory(0x58DC6C, Add, 0x0000009C),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF00),
		SetMemory(0x58DC68, Add, 0xFFFFFEC0),
		SetMemory(0x58DC64, Add, 0xFFFFFFA4),
		SetMemory(0x58DC6C, Add, 0xFFFFFF64),
		SetMemory(0x58DC60, Add, 0x000000DC),
		SetMemory(0x58DC68, Add, 0x0000011C),
		SetMemory(0x58DC64, Add, 0x0000009B),
		SetMemory(0x58DC6C, Add, 0x000000DB),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF24),
		SetMemory(0x58DC68, Add, 0xFFFFFEE4),
		SetMemory(0x58DC64, Add, 0xFFFFFF65),
		SetMemory(0x58DC6C, Add, 0xFFFFFF25),
		SetMemory(0x58DC60, Add, 0x000000B8),
		SetMemory(0x58DC68, Add, 0x000000F8),
		SetMemory(0x58DC64, Add, 0x000000D9),
		SetMemory(0x58DC6C, Add, 0x00000119),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF48),
		SetMemory(0x58DC68, Add, 0xFFFFFF08),
		SetMemory(0x58DC64, Add, 0xFFFFFF27),
		SetMemory(0x58DC6C, Add, 0xFFFFFEE7),
		SetMemory(0x58DC60, Add, 0x00000094),
		SetMemory(0x58DC68, Add, 0x000000D4),
		SetMemory(0x58DC64, Add, 0x00000117),
		SetMemory(0x58DC6C, Add, 0x00000157),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF6C),
		SetMemory(0x58DC68, Add, 0xFFFFFF2C),
		SetMemory(0x58DC64, Add, 0xFFFFFEE9),
		SetMemory(0x58DC6C, Add, 0xFFFFFEA9),
		SetMemory(0x58DC60, Add, 0x0000004C),
		SetMemory(0x58DC68, Add, 0x0000008C),
		SetMemory(0x58DC64, Add, 0x00000117),
		SetMemory(0x58DC6C, Add, 0x00000157),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFB4),
		SetMemory(0x58DC68, Add, 0xFFFFFF74),
		SetMemory(0x58DC64, Add, 0xFFFFFEE9),
		SetMemory(0x58DC6C, Add, 0xFFFFFEA9),
		SetMemory(0x58DC60, Add, 0x00000004),
		SetMemory(0x58DC68, Add, 0x00000044),
		SetMemory(0x58DC64, Add, 0x00000117),
		SetMemory(0x58DC6C, Add, 0x00000157),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFFC),
		SetMemory(0x58DC68, Add, 0xFFFFFFBC),
		SetMemory(0x58DC64, Add, 0xFFFFFEE9),
		SetMemory(0x58DC6C, Add, 0xFFFFFEA9),
		SetMemory(0x58DC60, Add, 0xFFFFFFBD),
		SetMemory(0x58DC68, Add, 0xFFFFFFFD),
		SetMemory(0x58DC64, Add, 0x00000117),
		SetMemory(0x58DC6C, Add, 0x00000157),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000043),
		SetMemory(0x58DC68, Add, 0x00000003),
		SetMemory(0x58DC64, Add, 0xFFFFFEE9),
		SetMemory(0x58DC6C, Add, 0xFFFFFEA9),
		SetMemory(0x58DC60, Add, 0xFFFFFF75),
		SetMemory(0x58DC68, Add, 0xFFFFFFB5),
		SetMemory(0x58DC64, Add, 0x00000117),
		SetMemory(0x58DC6C, Add, 0x00000157),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000008B),
		SetMemory(0x58DC68, Add, 0x0000004B),
		SetMemory(0x58DC64, Add, 0xFFFFFEE9),
		SetMemory(0x58DC6C, Add, 0xFFFFFEA9),
		SetMemory(0x58DC60, Add, 0xFFFFFF2D),
		SetMemory(0x58DC68, Add, 0xFFFFFF6D),
		SetMemory(0x58DC64, Add, 0x00000117),
		SetMemory(0x58DC6C, Add, 0x00000157),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000D3),
		SetMemory(0x58DC68, Add, 0x00000093),
		SetMemory(0x58DC64, Add, 0xFFFFFEE9),
		SetMemory(0x58DC6C, Add, 0xFFFFFEA9),
		SetMemory(0x58DC60, Add, 0xFFFFFF09),
		SetMemory(0x58DC68, Add, 0xFFFFFF49),
		SetMemory(0x58DC64, Add, 0x000000D9),
		SetMemory(0x58DC6C, Add, 0x00000119),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000F7),
		SetMemory(0x58DC68, Add, 0x000000B7),
		SetMemory(0x58DC64, Add, 0xFFFFFF27),
		SetMemory(0x58DC6C, Add, 0xFFFFFEE7),
		SetMemory(0x58DC60, Add, 0xFFFFFEE5),
		SetMemory(0x58DC68, Add, 0xFFFFFF25),
		SetMemory(0x58DC64, Add, 0x0000009B),
		SetMemory(0x58DC6C, Add, 0x000000DB),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000011B),
		SetMemory(0x58DC68, Add, 0x000000DB),
		SetMemory(0x58DC64, Add, 0xFFFFFF65),
		SetMemory(0x58DC6C, Add, 0xFFFFFF25),
		SetMemory(0x58DC60, Add, 0xFFFFFEC1),
		SetMemory(0x58DC68, Add, 0xFFFFFF01),
		SetMemory(0x58DC64, Add, 0x0000005C),
		SetMemory(0x58DC6C, Add, 0x0000009C),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000013F),
		SetMemory(0x58DC68, Add, 0x000000FF),
		SetMemory(0x58DC64, Add, 0xFFFFFFA4),
		SetMemory(0x58DC6C, Add, 0xFFFFFF64),
		SetMemory(0x58DC60, Add, 0xFFFFFE9C),
		SetMemory(0x58DC68, Add, 0xFFFFFEDC),
		SetMemory(0x58DC64, Add, 0x0000001E),
		SetMemory(0x58DC6C, Add, 0x0000005E),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000164),
		SetMemory(0x58DC68, Add, 0x00000124),
		SetMemory(0x58DC64, Add, 0xFFFFFFE2),
		SetMemory(0x58DC6C, Add, 0xFFFFFFA2),
		SetMemory(0x58DC60, Add, 0xFFFFFE78),
		SetMemory(0x58DC68, Add, 0xFFFFFEB8),
		SetMemory(0x58DC64, Add, 0xFFFFFFE1),
		SetMemory(0x58DC6C, Add, 0x00000020),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000188),
		SetMemory(0x58DC68, Add, 0x00000148),
		SetMemory(0x58DC64, Add, 0x0000001F),
		SetMemory(0x58DC6C, Add, 0xFFFFFFE0),
		SetMemory(0x58DC60, Add, 0xFFFFFE9C),
		SetMemory(0x58DC68, Add, 0xFFFFFEDC),
		SetMemory(0x58DC64, Add, 0xFFFFFFA2),
		SetMemory(0x58DC6C, Add, 0xFFFFFFE2),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000164),
		SetMemory(0x58DC68, Add, 0x00000124),
		SetMemory(0x58DC64, Add, 0x0000005E),
		SetMemory(0x58DC6C, Add, 0x0000001E),
		SetMemory(0x58DC60, Add, 0xFFFFFEC0),
		SetMemory(0x58DC68, Add, 0xFFFFFF00),
		SetMemory(0x58DC64, Add, 0xFFFFFF64),
		SetMemory(0x58DC6C, Add, 0xFFFFFFA4),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000140),
		SetMemory(0x58DC68, Add, 0x00000100),
		SetMemory(0x58DC64, Add, 0x0000009C),
		SetMemory(0x58DC6C, Add, 0x0000005C),
		SetMemory(0x58DC60, Add, 0xFFFFFEE4),
		SetMemory(0x58DC68, Add, 0xFFFFFF24),
		SetMemory(0x58DC64, Add, 0xFFFFFF25),
		SetMemory(0x58DC6C, Add, 0xFFFFFF65),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000011C),
		SetMemory(0x58DC68, Add, 0x000000DC),
		SetMemory(0x58DC64, Add, 0x000000DB),
		SetMemory(0x58DC6C, Add, 0x0000009B),
		SetMemory(0x58DC60, Add, 0xFFFFFF08),
		SetMemory(0x58DC68, Add, 0xFFFFFF48),
		SetMemory(0x58DC64, Add, 0xFFFFFEE7),
		SetMemory(0x58DC6C, Add, 0xFFFFFF27),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000F8),
		SetMemory(0x58DC68, Add, 0x000000B8),
		SetMemory(0x58DC64, Add, 0x00000119),
		SetMemory(0x58DC6C, Add, 0x000000D9),
		SetMemory(0x58DC60, Add, 0xFFFFFF2C),
		SetMemory(0x58DC68, Add, 0xFFFFFF6C),
		SetMemory(0x58DC64, Add, 0xFFFFFEA9),
		SetMemory(0x58DC6C, Add, 0xFFFFFEE9),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000D4),
		SetMemory(0x58DC68, Add, 0x00000094),
		SetMemory(0x58DC64, Add, 0x00000157),
		SetMemory(0x58DC6C, Add, 0x00000117),
		SetMemory(0x58DC60, Add, 0xFFFFFF74),
		SetMemory(0x58DC68, Add, 0xFFFFFFB4),
		SetMemory(0x58DC64, Add, 0xFFFFFEA9),
		SetMemory(0x58DC6C, Add, 0xFFFFFEE9),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000008C),
		SetMemory(0x58DC68, Add, 0x0000004C),
		SetMemory(0x58DC64, Add, 0x00000157),
		SetMemory(0x58DC6C, Add, 0x00000117),
		SetMemory(0x58DC60, Add, 0xFFFFFFBC),
		SetMemory(0x58DC68, Add, 0xFFFFFFFC),
		SetMemory(0x58DC64, Add, 0xFFFFFEA9),
		SetMemory(0x58DC6C, Add, 0xFFFFFEE9),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000044),
		SetMemory(0x58DC68, Add, 0x00000004),
		SetMemory(0x58DC64, Add, 0x00000157),
		SetMemory(0x58DC6C, Add, 0x00000117),
		SetMemory(0x58DC60, Add, 0x00000003),
		SetMemory(0x58DC68, Add, 0x00000043),
		SetMemory(0x58DC64, Add, 0xFFFFFEA9),
		SetMemory(0x58DC6C, Add, 0xFFFFFEE9),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFFD),
		SetMemory(0x58DC68, Add, 0xFFFFFFBD),
		SetMemory(0x58DC64, Add, 0x00000157),
		SetMemory(0x58DC6C, Add, 0x00000117),
		SetMemory(0x58DC60, Add, 0x0000004C),
		SetMemory(0x58DC68, Add, 0x0000008C),
		SetMemory(0x58DC64, Add, 0xFFFFFEA9),
		SetMemory(0x58DC6C, Add, 0xFFFFFEE9),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFB4),
		SetMemory(0x58DC68, Add, 0xFFFFFF74),
		SetMemory(0x58DC64, Add, 0x00000157),
		SetMemory(0x58DC6C, Add, 0x00000117),
		SetMemory(0x58DC60, Add, 0x00000094),
		SetMemory(0x58DC68, Add, 0x000000D4),
		SetMemory(0x58DC64, Add, 0xFFFFFEA9),
		SetMemory(0x58DC6C, Add, 0xFFFFFEE9),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF6C),
		SetMemory(0x58DC68, Add, 0xFFFFFF2C),
		SetMemory(0x58DC64, Add, 0x00000157),
		SetMemory(0x58DC6C, Add, 0x00000117),
		SetMemory(0x58DC60, Add, 0x000000B8),
		SetMemory(0x58DC68, Add, 0x000000F8),
		SetMemory(0x58DC64, Add, 0xFFFFFEE7),
		SetMemory(0x58DC6C, Add, 0xFFFFFF27),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF48),
		SetMemory(0x58DC68, Add, 0xFFFFFF08),
		SetMemory(0x58DC64, Add, 0x00000119),
		SetMemory(0x58DC6C, Add, 0x000000D9),
		SetMemory(0x58DC60, Add, 0x000000DC),
		SetMemory(0x58DC68, Add, 0x0000011C),
		SetMemory(0x58DC64, Add, 0xFFFFFF25),
		SetMemory(0x58DC6C, Add, 0xFFFFFF65),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF24),
		SetMemory(0x58DC68, Add, 0xFFFFFEE4),
		SetMemory(0x58DC64, Add, 0x000000DB),
		SetMemory(0x58DC6C, Add, 0x0000009B),
		SetMemory(0x58DC60, Add, 0x00000100),
		SetMemory(0x58DC68, Add, 0x00000140),
		SetMemory(0x58DC64, Add, 0xFFFFFF64),
		SetMemory(0x58DC6C, Add, 0xFFFFFFA4),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF00),
		SetMemory(0x58DC68, Add, 0xFFFFFEC0),
		SetMemory(0x58DC64, Add, 0x0000009C),
		SetMemory(0x58DC6C, Add, 0x0000005C),
		SetMemory(0x58DC60, Add, 0x00000124),
		SetMemory(0x58DC68, Add, 0x00000164),
		SetMemory(0x58DC64, Add, 0xFFFFFFA2),
		SetMemory(0x58DC6C, Add, 0xFFFFFFE2),
		Call_ZergSpawnSet_Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFEDC),
		SetMemory(0x58DC68, Add, 0xFFFFFE9C),
		SetMemory(0x58DC64, Add, 0x0000005E),
		SetMemory(0x58DC6C, Add, 0x0000001E),
	})


Call_LoadCp()
NIfEnd()
CGunErrorCheck(1)
NIf(FP,{TMemoryX(BackupCP,Exactly,1*0x1000,0xF000)}) -- if Hive
Call_LoadCp()
DoActions(FP,MoveCp(Add,1*4))
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		DeathsX(CurrentPlayer,Exactly,0*16777216,0,0xFF000000);
	},
	actions = {
		SetCVar(FP,UnitIDV[2],SetTo,56);
		PreserveTrigger();
	}
}
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		DeathsX(CurrentPlayer,Exactly,1*16777216,0,0xFF000000);
	},
	actions = {
		SetCVar(FP,UnitIDV[2],SetTo,57);
		PreserveTrigger();
	}
}
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		DeathsX(CurrentPlayer,Exactly,2*16777216,0,0xFF000000);
	},
	actions = {
		SetCVar(FP,UnitIDV[2],SetTo,57);
		PreserveTrigger();
	}
}
DoActions(FP,MoveCp(Subtract,1*4))
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFE0),
		SetMemory(0x58DC68, Add, 0x00000020),
		SetMemory(0x58DC64, Add, 0xFFFFFFE0),
		SetMemory(0x58DC6C, Add, 0x00000020),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000020),
		SetMemory(0x58DC68, Add, 0xFFFFFFE0),
		SetMemory(0x58DC64, Add, 0x00000020),
		SetMemory(0x58DC6C, Add, 0xFFFFFFE0),
		SetMemory(0x58DC60, Add, 0x00000028),
		SetMemory(0x58DC68, Add, 0x00000068),
		SetMemory(0x58DC64, Add, 0xFFFFFFE0),
		SetMemory(0x58DC6C, Add, 0x00000020),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFD8),
		SetMemory(0x58DC68, Add, 0xFFFFFF98),
		SetMemory(0x58DC64, Add, 0x00000020),
		SetMemory(0x58DC6C, Add, 0xFFFFFFE0),
		SetMemory(0x58DC60, Add, 0x00000004),
		SetMemory(0x58DC68, Add, 0x00000044),
		SetMemory(0x58DC64, Add, 0x0000001E),
		SetMemory(0x58DC6C, Add, 0x0000005E),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFFC),
		SetMemory(0x58DC68, Add, 0xFFFFFFBC),
		SetMemory(0x58DC64, Add, 0xFFFFFFE2),
		SetMemory(0x58DC6C, Add, 0xFFFFFFA2),
		SetMemory(0x58DC60, Add, 0xFFFFFFBD),
		SetMemory(0x58DC68, Add, 0xFFFFFFFD),
		SetMemory(0x58DC64, Add, 0x0000001E),
		SetMemory(0x58DC6C, Add, 0x0000005E),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000043),
		SetMemory(0x58DC68, Add, 0x00000003),
		SetMemory(0x58DC64, Add, 0xFFFFFFE2),
		SetMemory(0x58DC6C, Add, 0xFFFFFFA2),
		SetMemory(0x58DC60, Add, 0xFFFFFF98),
		SetMemory(0x58DC68, Add, 0xFFFFFFD8),
		SetMemory(0x58DC64, Add, 0xFFFFFFE1),
		SetMemory(0x58DC6C, Add, 0x00000020),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000068),
		SetMemory(0x58DC68, Add, 0x00000028),
		SetMemory(0x58DC64, Add, 0x0000001F),
		SetMemory(0x58DC6C, Add, 0xFFFFFFE0),
		SetMemory(0x58DC60, Add, 0xFFFFFFBC),
		SetMemory(0x58DC68, Add, 0xFFFFFFFC),
		SetMemory(0x58DC64, Add, 0xFFFFFFA2),
		SetMemory(0x58DC6C, Add, 0xFFFFFFE2),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000044),
		SetMemory(0x58DC68, Add, 0x00000004),
		SetMemory(0x58DC64, Add, 0x0000005E),
		SetMemory(0x58DC6C, Add, 0x0000001E),
		SetMemory(0x58DC60, Add, 0x00000004),
		SetMemory(0x58DC68, Add, 0x00000044),
		SetMemory(0x58DC64, Add, 0xFFFFFFA2),
		SetMemory(0x58DC6C, Add, 0xFFFFFFE2),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFFC),
		SetMemory(0x58DC68, Add, 0xFFFFFFBC),
		SetMemory(0x58DC64, Add, 0x0000005E),
		SetMemory(0x58DC6C, Add, 0x0000001E),
		SetMemory(0x58DC60, Add, 0x00000070),
		SetMemory(0x58DC68, Add, 0x000000B0),
		SetMemory(0x58DC64, Add, 0xFFFFFFE0),
		SetMemory(0x58DC6C, Add, 0x00000020),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF90),
		SetMemory(0x58DC68, Add, 0xFFFFFF50),
		SetMemory(0x58DC64, Add, 0x00000020),
		SetMemory(0x58DC6C, Add, 0xFFFFFFE0),
		SetMemory(0x58DC60, Add, 0x0000004C),
		SetMemory(0x58DC68, Add, 0x0000008C),
		SetMemory(0x58DC64, Add, 0x0000001E),
		SetMemory(0x58DC6C, Add, 0x0000005E),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFB4),
		SetMemory(0x58DC68, Add, 0xFFFFFF74),
		SetMemory(0x58DC64, Add, 0xFFFFFFE2),
		SetMemory(0x58DC6C, Add, 0xFFFFFFA2),
		SetMemory(0x58DC60, Add, 0x00000028),
		SetMemory(0x58DC68, Add, 0x00000068),
		SetMemory(0x58DC64, Add, 0x0000005C),
		SetMemory(0x58DC6C, Add, 0x0000009C),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFD8),
		SetMemory(0x58DC68, Add, 0xFFFFFF98),
		SetMemory(0x58DC64, Add, 0xFFFFFFA4),
		SetMemory(0x58DC6C, Add, 0xFFFFFF64),
		SetMemory(0x58DC60, Add, 0xFFFFFFE1),
		SetMemory(0x58DC68, Add, 0x00000020),
		SetMemory(0x58DC64, Add, 0x0000005C),
		SetMemory(0x58DC6C, Add, 0x0000009C),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000001F),
		SetMemory(0x58DC68, Add, 0xFFFFFFE0),
		SetMemory(0x58DC64, Add, 0xFFFFFFA4),
		SetMemory(0x58DC6C, Add, 0xFFFFFF64),
		SetMemory(0x58DC60, Add, 0xFFFFFF99),
		SetMemory(0x58DC68, Add, 0xFFFFFFD9),
		SetMemory(0x58DC64, Add, 0x0000005C),
		SetMemory(0x58DC6C, Add, 0x0000009C),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000067),
		SetMemory(0x58DC68, Add, 0x00000027),
		SetMemory(0x58DC64, Add, 0xFFFFFFA4),
		SetMemory(0x58DC6C, Add, 0xFFFFFF64),
		SetMemory(0x58DC60, Add, 0xFFFFFF74),
		SetMemory(0x58DC68, Add, 0xFFFFFFB5),
		SetMemory(0x58DC64, Add, 0x0000001E),
		SetMemory(0x58DC6C, Add, 0x0000005E),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000008C),
		SetMemory(0x58DC68, Add, 0x0000004B),
		SetMemory(0x58DC64, Add, 0xFFFFFFE2),
		SetMemory(0x58DC6C, Add, 0xFFFFFFA2),
		SetMemory(0x58DC60, Add, 0xFFFFFF50),
		SetMemory(0x58DC68, Add, 0xFFFFFF90),
		SetMemory(0x58DC64, Add, 0xFFFFFFE1),
		SetMemory(0x58DC6C, Add, 0x00000020),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000B0),
		SetMemory(0x58DC68, Add, 0x00000070),
		SetMemory(0x58DC64, Add, 0x0000001F),
		SetMemory(0x58DC6C, Add, 0xFFFFFFE0),
		SetMemory(0x58DC60, Add, 0xFFFFFF74),
		SetMemory(0x58DC68, Add, 0xFFFFFFB4),
		SetMemory(0x58DC64, Add, 0xFFFFFFA2),
		SetMemory(0x58DC6C, Add, 0xFFFFFFE2),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000008C),
		SetMemory(0x58DC68, Add, 0x0000004C),
		SetMemory(0x58DC64, Add, 0x0000005E),
		SetMemory(0x58DC6C, Add, 0x0000001E),
		SetMemory(0x58DC60, Add, 0xFFFFFF98),
		SetMemory(0x58DC68, Add, 0xFFFFFFD8),
		SetMemory(0x58DC64, Add, 0xFFFFFF64),
		SetMemory(0x58DC6C, Add, 0xFFFFFFA4),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000068),
		SetMemory(0x58DC68, Add, 0x00000028),
		SetMemory(0x58DC64, Add, 0x0000009C),
		SetMemory(0x58DC6C, Add, 0x0000005C),
		SetMemory(0x58DC60, Add, 0xFFFFFFE0),
		SetMemory(0x58DC68, Add, 0x0000001F),
		SetMemory(0x58DC64, Add, 0xFFFFFF64),
		SetMemory(0x58DC6C, Add, 0xFFFFFFA4),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000020),
		SetMemory(0x58DC68, Add, 0xFFFFFFE1),
		SetMemory(0x58DC64, Add, 0x0000009C),
		SetMemory(0x58DC6C, Add, 0x0000005C),
		SetMemory(0x58DC60, Add, 0x00000028),
		SetMemory(0x58DC68, Add, 0x00000068),
		SetMemory(0x58DC64, Add, 0xFFFFFF64),
		SetMemory(0x58DC6C, Add, 0xFFFFFFA4),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFD8),
		SetMemory(0x58DC68, Add, 0xFFFFFF98),
		SetMemory(0x58DC64, Add, 0x0000009C),
		SetMemory(0x58DC6C, Add, 0x0000005C),
		SetMemory(0x58DC60, Add, 0x0000004C),
		SetMemory(0x58DC68, Add, 0x0000008C),
		SetMemory(0x58DC64, Add, 0xFFFFFFA2),
		SetMemory(0x58DC6C, Add, 0xFFFFFFE2),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFB4),
		SetMemory(0x58DC68, Add, 0xFFFFFF74),
		SetMemory(0x58DC64, Add, 0x0000005E),
		SetMemory(0x58DC6C, Add, 0x0000001E),
		SetMemory(0x58DC60, Add, 0x000000B8),
		SetMemory(0x58DC68, Add, 0x000000F8),
		SetMemory(0x58DC64, Add, 0xFFFFFFE0),
		SetMemory(0x58DC6C, Add, 0x00000020),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF48),
		SetMemory(0x58DC68, Add, 0xFFFFFF08),
		SetMemory(0x58DC64, Add, 0x00000020),
		SetMemory(0x58DC6C, Add, 0xFFFFFFE0),
		SetMemory(0x58DC60, Add, 0x00000094),
		SetMemory(0x58DC68, Add, 0x000000D4),
		SetMemory(0x58DC64, Add, 0x0000001E),
		SetMemory(0x58DC6C, Add, 0x0000005E),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF6C),
		SetMemory(0x58DC68, Add, 0xFFFFFF2C),
		SetMemory(0x58DC64, Add, 0xFFFFFFE2),
		SetMemory(0x58DC6C, Add, 0xFFFFFFA2),
		SetMemory(0x58DC60, Add, 0x00000070),
		SetMemory(0x58DC68, Add, 0x000000B0),
		SetMemory(0x58DC64, Add, 0x0000005C),
		SetMemory(0x58DC6C, Add, 0x0000009C),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF90),
		SetMemory(0x58DC68, Add, 0xFFFFFF50),
		SetMemory(0x58DC64, Add, 0xFFFFFFA4),
		SetMemory(0x58DC6C, Add, 0xFFFFFF64),
		SetMemory(0x58DC60, Add, 0x0000004C),
		SetMemory(0x58DC68, Add, 0x0000008C),
		SetMemory(0x58DC64, Add, 0x0000009B),
		SetMemory(0x58DC6C, Add, 0x000000DB),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFB4),
		SetMemory(0x58DC68, Add, 0xFFFFFF74),
		SetMemory(0x58DC64, Add, 0xFFFFFF65),
		SetMemory(0x58DC6C, Add, 0xFFFFFF25),
		SetMemory(0x58DC60, Add, 0x00000004),
		SetMemory(0x58DC68, Add, 0x00000044),
		SetMemory(0x58DC64, Add, 0x0000009B),
		SetMemory(0x58DC6C, Add, 0x000000DB),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFFC),
		SetMemory(0x58DC68, Add, 0xFFFFFFBC),
		SetMemory(0x58DC64, Add, 0xFFFFFF65),
		SetMemory(0x58DC6C, Add, 0xFFFFFF25),
		SetMemory(0x58DC60, Add, 0xFFFFFFBD),
		SetMemory(0x58DC68, Add, 0xFFFFFFFD),
		SetMemory(0x58DC64, Add, 0x0000009B),
		SetMemory(0x58DC6C, Add, 0x000000DB),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000043),
		SetMemory(0x58DC68, Add, 0x00000003),
		SetMemory(0x58DC64, Add, 0xFFFFFF65),
		SetMemory(0x58DC6C, Add, 0xFFFFFF25),
		SetMemory(0x58DC60, Add, 0xFFFFFF75),
		SetMemory(0x58DC68, Add, 0xFFFFFFB5),
		SetMemory(0x58DC64, Add, 0x0000009B),
		SetMemory(0x58DC6C, Add, 0x000000DB),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000008B),
		SetMemory(0x58DC68, Add, 0x0000004B),
		SetMemory(0x58DC64, Add, 0xFFFFFF65),
		SetMemory(0x58DC6C, Add, 0xFFFFFF25),
		SetMemory(0x58DC60, Add, 0xFFFFFF51),
		SetMemory(0x58DC68, Add, 0xFFFFFF91),
		SetMemory(0x58DC64, Add, 0x0000005C),
		SetMemory(0x58DC6C, Add, 0x0000009C),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000AF),
		SetMemory(0x58DC68, Add, 0x0000006F),
		SetMemory(0x58DC64, Add, 0xFFFFFFA4),
		SetMemory(0x58DC6C, Add, 0xFFFFFF64),
		SetMemory(0x58DC60, Add, 0xFFFFFF2C),
		SetMemory(0x58DC68, Add, 0xFFFFFF6C),
		SetMemory(0x58DC64, Add, 0x0000001E),
		SetMemory(0x58DC6C, Add, 0x0000005E),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000D4),
		SetMemory(0x58DC68, Add, 0x00000094),
		SetMemory(0x58DC64, Add, 0xFFFFFFE2),
		SetMemory(0x58DC6C, Add, 0xFFFFFFA2),
		SetMemory(0x58DC60, Add, 0xFFFFFF08),
		SetMemory(0x58DC68, Add, 0xFFFFFF48),
		SetMemory(0x58DC64, Add, 0xFFFFFFE1),
		SetMemory(0x58DC6C, Add, 0x00000020),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000F8),
		SetMemory(0x58DC68, Add, 0x000000B8),
		SetMemory(0x58DC64, Add, 0x0000001F),
		SetMemory(0x58DC6C, Add, 0xFFFFFFE0),
		SetMemory(0x58DC60, Add, 0xFFFFFF2C),
		SetMemory(0x58DC68, Add, 0xFFFFFF6C),
		SetMemory(0x58DC64, Add, 0xFFFFFFA2),
		SetMemory(0x58DC6C, Add, 0xFFFFFFE2),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000D4),
		SetMemory(0x58DC68, Add, 0x00000094),
		SetMemory(0x58DC64, Add, 0x0000005E),
		SetMemory(0x58DC6C, Add, 0x0000001E),
		SetMemory(0x58DC60, Add, 0xFFFFFF50),
		SetMemory(0x58DC68, Add, 0xFFFFFF90),
		SetMemory(0x58DC64, Add, 0xFFFFFF64),
		SetMemory(0x58DC6C, Add, 0xFFFFFFA4),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000B0),
		SetMemory(0x58DC68, Add, 0x00000070),
		SetMemory(0x58DC64, Add, 0x0000009C),
		SetMemory(0x58DC6C, Add, 0x0000005C),
		SetMemory(0x58DC60, Add, 0xFFFFFF74),
		SetMemory(0x58DC68, Add, 0xFFFFFFB4),
		SetMemory(0x58DC64, Add, 0xFFFFFF25),
		SetMemory(0x58DC6C, Add, 0xFFFFFF65),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000008C),
		SetMemory(0x58DC68, Add, 0x0000004C),
		SetMemory(0x58DC64, Add, 0x000000DB),
		SetMemory(0x58DC6C, Add, 0x0000009B),
		SetMemory(0x58DC60, Add, 0xFFFFFFBC),
		SetMemory(0x58DC68, Add, 0xFFFFFFFC),
		SetMemory(0x58DC64, Add, 0xFFFFFF25),
		SetMemory(0x58DC6C, Add, 0xFFFFFF65),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000044),
		SetMemory(0x58DC68, Add, 0x00000004),
		SetMemory(0x58DC64, Add, 0x000000DB),
		SetMemory(0x58DC6C, Add, 0x0000009B),
		SetMemory(0x58DC60, Add, 0x00000003),
		SetMemory(0x58DC68, Add, 0x00000043),
		SetMemory(0x58DC64, Add, 0xFFFFFF25),
		SetMemory(0x58DC6C, Add, 0xFFFFFF65),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFFD),
		SetMemory(0x58DC68, Add, 0xFFFFFFBD),
		SetMemory(0x58DC64, Add, 0x000000DB),
		SetMemory(0x58DC6C, Add, 0x0000009B),
		SetMemory(0x58DC60, Add, 0x0000004C),
		SetMemory(0x58DC68, Add, 0x0000008C),
		SetMemory(0x58DC64, Add, 0xFFFFFF25),
		SetMemory(0x58DC6C, Add, 0xFFFFFF65),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFB4),
		SetMemory(0x58DC68, Add, 0xFFFFFF74),
		SetMemory(0x58DC64, Add, 0x000000DB),
		SetMemory(0x58DC6C, Add, 0x0000009B),
		SetMemory(0x58DC60, Add, 0x00000070),
		SetMemory(0x58DC68, Add, 0x000000B0),
		SetMemory(0x58DC64, Add, 0xFFFFFF64),
		SetMemory(0x58DC6C, Add, 0xFFFFFFA4),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF90),
		SetMemory(0x58DC68, Add, 0xFFFFFF50),
		SetMemory(0x58DC64, Add, 0x0000009C),
		SetMemory(0x58DC6C, Add, 0x0000005C),
		SetMemory(0x58DC60, Add, 0x00000094),
		SetMemory(0x58DC68, Add, 0x000000D4),
		SetMemory(0x58DC64, Add, 0xFFFFFFA2),
		SetMemory(0x58DC6C, Add, 0xFFFFFFE2),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF6C),
		SetMemory(0x58DC68, Add, 0xFFFFFF2C),
		SetMemory(0x58DC64, Add, 0x0000005E),
		SetMemory(0x58DC6C, Add, 0x0000001E),
		SetMemory(0x58DC60, Add, 0x00000100),
		SetMemory(0x58DC68, Add, 0x00000140),
		SetMemory(0x58DC64, Add, 0xFFFFFFE0),
		SetMemory(0x58DC6C, Add, 0x00000020),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF00),
		SetMemory(0x58DC68, Add, 0xFFFFFEC0),
		SetMemory(0x58DC64, Add, 0x00000020),
		SetMemory(0x58DC6C, Add, 0xFFFFFFE0),
		SetMemory(0x58DC60, Add, 0x000000DC),
		SetMemory(0x58DC68, Add, 0x0000011C),
		SetMemory(0x58DC64, Add, 0x0000001E),
		SetMemory(0x58DC6C, Add, 0x0000005E),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF24),
		SetMemory(0x58DC68, Add, 0xFFFFFEE4),
		SetMemory(0x58DC64, Add, 0xFFFFFFE2),
		SetMemory(0x58DC6C, Add, 0xFFFFFFA2),
		SetMemory(0x58DC60, Add, 0x000000B8),
		SetMemory(0x58DC68, Add, 0x000000F8),
		SetMemory(0x58DC64, Add, 0x0000005C),
		SetMemory(0x58DC6C, Add, 0x0000009C),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF48),
		SetMemory(0x58DC68, Add, 0xFFFFFF08),
		SetMemory(0x58DC64, Add, 0xFFFFFFA4),
		SetMemory(0x58DC6C, Add, 0xFFFFFF64),
		SetMemory(0x58DC60, Add, 0x00000094),
		SetMemory(0x58DC68, Add, 0x000000D4),
		SetMemory(0x58DC64, Add, 0x0000009B),
		SetMemory(0x58DC6C, Add, 0x000000DB),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF6C),
		SetMemory(0x58DC68, Add, 0xFFFFFF2C),
		SetMemory(0x58DC64, Add, 0xFFFFFF65),
		SetMemory(0x58DC6C, Add, 0xFFFFFF25),
		SetMemory(0x58DC60, Add, 0x00000070),
		SetMemory(0x58DC68, Add, 0x000000B0),
		SetMemory(0x58DC64, Add, 0x000000D9),
		SetMemory(0x58DC6C, Add, 0x00000119),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF90),
		SetMemory(0x58DC68, Add, 0xFFFFFF50),
		SetMemory(0x58DC64, Add, 0xFFFFFF27),
		SetMemory(0x58DC6C, Add, 0xFFFFFEE7),
		SetMemory(0x58DC60, Add, 0x00000028),
		SetMemory(0x58DC68, Add, 0x00000068),
		SetMemory(0x58DC64, Add, 0x000000D9),
		SetMemory(0x58DC6C, Add, 0x00000119),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFD8),
		SetMemory(0x58DC68, Add, 0xFFFFFF98),
		SetMemory(0x58DC64, Add, 0xFFFFFF27),
		SetMemory(0x58DC6C, Add, 0xFFFFFEE7),
		SetMemory(0x58DC60, Add, 0xFFFFFFE1),
		SetMemory(0x58DC68, Add, 0x00000020),
		SetMemory(0x58DC64, Add, 0x000000D9),
		SetMemory(0x58DC6C, Add, 0x00000119),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000001F),
		SetMemory(0x58DC68, Add, 0xFFFFFFE0),
		SetMemory(0x58DC64, Add, 0xFFFFFF27),
		SetMemory(0x58DC6C, Add, 0xFFFFFEE7),
		SetMemory(0x58DC60, Add, 0xFFFFFF99),
		SetMemory(0x58DC68, Add, 0xFFFFFFD9),
		SetMemory(0x58DC64, Add, 0x000000D9),
		SetMemory(0x58DC6C, Add, 0x00000119),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000067),
		SetMemory(0x58DC68, Add, 0x00000027),
		SetMemory(0x58DC64, Add, 0xFFFFFF27),
		SetMemory(0x58DC6C, Add, 0xFFFFFEE7),
		SetMemory(0x58DC60, Add, 0xFFFFFF51),
		SetMemory(0x58DC68, Add, 0xFFFFFF91),
		SetMemory(0x58DC64, Add, 0x000000D9),
		SetMemory(0x58DC6C, Add, 0x00000119),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000AF),
		SetMemory(0x58DC68, Add, 0x0000006F),
		SetMemory(0x58DC64, Add, 0xFFFFFF27),
		SetMemory(0x58DC6C, Add, 0xFFFFFEE7),
		SetMemory(0x58DC60, Add, 0xFFFFFF2D),
		SetMemory(0x58DC68, Add, 0xFFFFFF6D),
		SetMemory(0x58DC64, Add, 0x0000009B),
		SetMemory(0x58DC6C, Add, 0x000000DB),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000D3),
		SetMemory(0x58DC68, Add, 0x00000093),
		SetMemory(0x58DC64, Add, 0xFFFFFF65),
		SetMemory(0x58DC6C, Add, 0xFFFFFF25),
		SetMemory(0x58DC60, Add, 0xFFFFFF09),
		SetMemory(0x58DC68, Add, 0xFFFFFF49),
		SetMemory(0x58DC64, Add, 0x0000005C),
		SetMemory(0x58DC6C, Add, 0x0000009C),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000F7),
		SetMemory(0x58DC68, Add, 0x000000B7),
		SetMemory(0x58DC64, Add, 0xFFFFFFA4),
		SetMemory(0x58DC6C, Add, 0xFFFFFF64),
		SetMemory(0x58DC60, Add, 0xFFFFFEE4),
		SetMemory(0x58DC68, Add, 0xFFFFFF24),
		SetMemory(0x58DC64, Add, 0x0000001E),
		SetMemory(0x58DC6C, Add, 0x0000005E),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000011C),
		SetMemory(0x58DC68, Add, 0x000000DC),
		SetMemory(0x58DC64, Add, 0xFFFFFFE2),
		SetMemory(0x58DC6C, Add, 0xFFFFFFA2),
		SetMemory(0x58DC60, Add, 0xFFFFFEC0),
		SetMemory(0x58DC68, Add, 0xFFFFFF00),
		SetMemory(0x58DC64, Add, 0xFFFFFFE1),
		SetMemory(0x58DC6C, Add, 0x00000020),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000140),
		SetMemory(0x58DC68, Add, 0x00000100),
		SetMemory(0x58DC64, Add, 0x0000001F),
		SetMemory(0x58DC6C, Add, 0xFFFFFFE0),
		SetMemory(0x58DC60, Add, 0xFFFFFEE4),
		SetMemory(0x58DC68, Add, 0xFFFFFF24),
		SetMemory(0x58DC64, Add, 0xFFFFFFA2),
		SetMemory(0x58DC6C, Add, 0xFFFFFFE2),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000011C),
		SetMemory(0x58DC68, Add, 0x000000DC),
		SetMemory(0x58DC64, Add, 0x0000005E),
		SetMemory(0x58DC6C, Add, 0x0000001E),
		SetMemory(0x58DC60, Add, 0xFFFFFF08),
		SetMemory(0x58DC68, Add, 0xFFFFFF48),
		SetMemory(0x58DC64, Add, 0xFFFFFF64),
		SetMemory(0x58DC6C, Add, 0xFFFFFFA4),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000F8),
		SetMemory(0x58DC68, Add, 0x000000B8),
		SetMemory(0x58DC64, Add, 0x0000009C),
		SetMemory(0x58DC6C, Add, 0x0000005C),
		SetMemory(0x58DC60, Add, 0xFFFFFF2C),
		SetMemory(0x58DC68, Add, 0xFFFFFF6C),
		SetMemory(0x58DC64, Add, 0xFFFFFF25),
		SetMemory(0x58DC6C, Add, 0xFFFFFF65),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000D4),
		SetMemory(0x58DC68, Add, 0x00000094),
		SetMemory(0x58DC64, Add, 0x000000DB),
		SetMemory(0x58DC6C, Add, 0x0000009B),
		SetMemory(0x58DC60, Add, 0xFFFFFF50),
		SetMemory(0x58DC68, Add, 0xFFFFFF90),
		SetMemory(0x58DC64, Add, 0xFFFFFEE7),
		SetMemory(0x58DC6C, Add, 0xFFFFFF27),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000B0),
		SetMemory(0x58DC68, Add, 0x00000070),
		SetMemory(0x58DC64, Add, 0x00000119),
		SetMemory(0x58DC6C, Add, 0x000000D9),
		SetMemory(0x58DC60, Add, 0xFFFFFF98),
		SetMemory(0x58DC68, Add, 0xFFFFFFD8),
		SetMemory(0x58DC64, Add, 0xFFFFFEE7),
		SetMemory(0x58DC6C, Add, 0xFFFFFF27),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000068),
		SetMemory(0x58DC68, Add, 0x00000028),
		SetMemory(0x58DC64, Add, 0x00000119),
		SetMemory(0x58DC6C, Add, 0x000000D9),
		SetMemory(0x58DC60, Add, 0xFFFFFFE0),
		SetMemory(0x58DC68, Add, 0x0000001F),
		SetMemory(0x58DC64, Add, 0xFFFFFEE7),
		SetMemory(0x58DC6C, Add, 0xFFFFFF27),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000020),
		SetMemory(0x58DC68, Add, 0xFFFFFFE1),
		SetMemory(0x58DC64, Add, 0x00000119),
		SetMemory(0x58DC6C, Add, 0x000000D9),
		SetMemory(0x58DC60, Add, 0x00000028),
		SetMemory(0x58DC68, Add, 0x00000068),
		SetMemory(0x58DC64, Add, 0xFFFFFEE7),
		SetMemory(0x58DC6C, Add, 0xFFFFFF27),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFD8),
		SetMemory(0x58DC68, Add, 0xFFFFFF98),
		SetMemory(0x58DC64, Add, 0x00000119),
		SetMemory(0x58DC6C, Add, 0x000000D9),
		SetMemory(0x58DC60, Add, 0x00000070),
		SetMemory(0x58DC68, Add, 0x000000B0),
		SetMemory(0x58DC64, Add, 0xFFFFFEE7),
		SetMemory(0x58DC6C, Add, 0xFFFFFF27),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF90),
		SetMemory(0x58DC68, Add, 0xFFFFFF50),
		SetMemory(0x58DC64, Add, 0x00000119),
		SetMemory(0x58DC6C, Add, 0x000000D9),
		SetMemory(0x58DC60, Add, 0x00000094),
		SetMemory(0x58DC68, Add, 0x000000D4),
		SetMemory(0x58DC64, Add, 0xFFFFFF25),
		SetMemory(0x58DC6C, Add, 0xFFFFFF65),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF6C),
		SetMemory(0x58DC68, Add, 0xFFFFFF2C),
		SetMemory(0x58DC64, Add, 0x000000DB),
		SetMemory(0x58DC6C, Add, 0x0000009B),
		SetMemory(0x58DC60, Add, 0x000000B8),
		SetMemory(0x58DC68, Add, 0x000000F8),
		SetMemory(0x58DC64, Add, 0xFFFFFF64),
		SetMemory(0x58DC6C, Add, 0xFFFFFFA4),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF48),
		SetMemory(0x58DC68, Add, 0xFFFFFF08),
		SetMemory(0x58DC64, Add, 0x0000009C),
		SetMemory(0x58DC6C, Add, 0x0000005C),
		SetMemory(0x58DC60, Add, 0x000000DC),
		SetMemory(0x58DC68, Add, 0x0000011C),
		SetMemory(0x58DC64, Add, 0xFFFFFFA2),
		SetMemory(0x58DC6C, Add, 0xFFFFFFE2),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF24),
		SetMemory(0x58DC68, Add, 0xFFFFFEE4),
		SetMemory(0x58DC64, Add, 0x0000005E),
		SetMemory(0x58DC6C, Add, 0x0000001E),
		SetMemory(0x58DC60, Add, 0x00000148),
		SetMemory(0x58DC68, Add, 0x00000188),
		SetMemory(0x58DC64, Add, 0xFFFFFFE0),
		SetMemory(0x58DC6C, Add, 0x00000020),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFEB8),
		SetMemory(0x58DC68, Add, 0xFFFFFE78),
		SetMemory(0x58DC64, Add, 0x00000020),
		SetMemory(0x58DC6C, Add, 0xFFFFFFE0),
		SetMemory(0x58DC60, Add, 0x00000124),
		SetMemory(0x58DC68, Add, 0x00000164),
		SetMemory(0x58DC64, Add, 0x0000001E),
		SetMemory(0x58DC6C, Add, 0x0000005E),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFEDC),
		SetMemory(0x58DC68, Add, 0xFFFFFE9C),
		SetMemory(0x58DC64, Add, 0xFFFFFFE2),
		SetMemory(0x58DC6C, Add, 0xFFFFFFA2),
		SetMemory(0x58DC60, Add, 0x00000100),
		SetMemory(0x58DC68, Add, 0x00000140),
		SetMemory(0x58DC64, Add, 0x0000005C),
		SetMemory(0x58DC6C, Add, 0x0000009C),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF00),
		SetMemory(0x58DC68, Add, 0xFFFFFEC0),
		SetMemory(0x58DC64, Add, 0xFFFFFFA4),
		SetMemory(0x58DC6C, Add, 0xFFFFFF64),
		SetMemory(0x58DC60, Add, 0x000000DC),
		SetMemory(0x58DC68, Add, 0x0000011C),
		SetMemory(0x58DC64, Add, 0x0000009B),
		SetMemory(0x58DC6C, Add, 0x000000DB),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF24),
		SetMemory(0x58DC68, Add, 0xFFFFFEE4),
		SetMemory(0x58DC64, Add, 0xFFFFFF65),
		SetMemory(0x58DC6C, Add, 0xFFFFFF25),
		SetMemory(0x58DC60, Add, 0x000000B8),
		SetMemory(0x58DC68, Add, 0x000000F8),
		SetMemory(0x58DC64, Add, 0x000000D9),
		SetMemory(0x58DC6C, Add, 0x00000119),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF48),
		SetMemory(0x58DC68, Add, 0xFFFFFF08),
		SetMemory(0x58DC64, Add, 0xFFFFFF27),
		SetMemory(0x58DC6C, Add, 0xFFFFFEE7),
		SetMemory(0x58DC60, Add, 0x00000094),
		SetMemory(0x58DC68, Add, 0x000000D4),
		SetMemory(0x58DC64, Add, 0x00000117),
		SetMemory(0x58DC6C, Add, 0x00000157),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF6C),
		SetMemory(0x58DC68, Add, 0xFFFFFF2C),
		SetMemory(0x58DC64, Add, 0xFFFFFEE9),
		SetMemory(0x58DC6C, Add, 0xFFFFFEA9),
		SetMemory(0x58DC60, Add, 0x0000004C),
		SetMemory(0x58DC68, Add, 0x0000008C),
		SetMemory(0x58DC64, Add, 0x00000117),
		SetMemory(0x58DC6C, Add, 0x00000157),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFB4),
		SetMemory(0x58DC68, Add, 0xFFFFFF74),
		SetMemory(0x58DC64, Add, 0xFFFFFEE9),
		SetMemory(0x58DC6C, Add, 0xFFFFFEA9),
		SetMemory(0x58DC60, Add, 0x00000004),
		SetMemory(0x58DC68, Add, 0x00000044),
		SetMemory(0x58DC64, Add, 0x00000117),
		SetMemory(0x58DC6C, Add, 0x00000157),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFFC),
		SetMemory(0x58DC68, Add, 0xFFFFFFBC),
		SetMemory(0x58DC64, Add, 0xFFFFFEE9),
		SetMemory(0x58DC6C, Add, 0xFFFFFEA9),
		SetMemory(0x58DC60, Add, 0xFFFFFFBD),
		SetMemory(0x58DC68, Add, 0xFFFFFFFD),
		SetMemory(0x58DC64, Add, 0x00000117),
		SetMemory(0x58DC6C, Add, 0x00000157),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000043),
		SetMemory(0x58DC68, Add, 0x00000003),
		SetMemory(0x58DC64, Add, 0xFFFFFEE9),
		SetMemory(0x58DC6C, Add, 0xFFFFFEA9),
		SetMemory(0x58DC60, Add, 0xFFFFFF75),
		SetMemory(0x58DC68, Add, 0xFFFFFFB5),
		SetMemory(0x58DC64, Add, 0x00000117),
		SetMemory(0x58DC6C, Add, 0x00000157),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000008B),
		SetMemory(0x58DC68, Add, 0x0000004B),
		SetMemory(0x58DC64, Add, 0xFFFFFEE9),
		SetMemory(0x58DC6C, Add, 0xFFFFFEA9),
		SetMemory(0x58DC60, Add, 0xFFFFFF2D),
		SetMemory(0x58DC68, Add, 0xFFFFFF6D),
		SetMemory(0x58DC64, Add, 0x00000117),
		SetMemory(0x58DC6C, Add, 0x00000157),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000D3),
		SetMemory(0x58DC68, Add, 0x00000093),
		SetMemory(0x58DC64, Add, 0xFFFFFEE9),
		SetMemory(0x58DC6C, Add, 0xFFFFFEA9),
		SetMemory(0x58DC60, Add, 0xFFFFFF09),
		SetMemory(0x58DC68, Add, 0xFFFFFF49),
		SetMemory(0x58DC64, Add, 0x000000D9),
		SetMemory(0x58DC6C, Add, 0x00000119),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000F7),
		SetMemory(0x58DC68, Add, 0x000000B7),
		SetMemory(0x58DC64, Add, 0xFFFFFF27),
		SetMemory(0x58DC6C, Add, 0xFFFFFEE7),
		SetMemory(0x58DC60, Add, 0xFFFFFEE5),
		SetMemory(0x58DC68, Add, 0xFFFFFF25),
		SetMemory(0x58DC64, Add, 0x0000009B),
		SetMemory(0x58DC6C, Add, 0x000000DB),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000011B),
		SetMemory(0x58DC68, Add, 0x000000DB),
		SetMemory(0x58DC64, Add, 0xFFFFFF65),
		SetMemory(0x58DC6C, Add, 0xFFFFFF25),
		SetMemory(0x58DC60, Add, 0xFFFFFEC1),
		SetMemory(0x58DC68, Add, 0xFFFFFF01),
		SetMemory(0x58DC64, Add, 0x0000005C),
		SetMemory(0x58DC6C, Add, 0x0000009C),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000013F),
		SetMemory(0x58DC68, Add, 0x000000FF),
		SetMemory(0x58DC64, Add, 0xFFFFFFA4),
		SetMemory(0x58DC6C, Add, 0xFFFFFF64),
		SetMemory(0x58DC60, Add, 0xFFFFFE9C),
		SetMemory(0x58DC68, Add, 0xFFFFFEDC),
		SetMemory(0x58DC64, Add, 0x0000001E),
		SetMemory(0x58DC6C, Add, 0x0000005E),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000164),
		SetMemory(0x58DC68, Add, 0x00000124),
		SetMemory(0x58DC64, Add, 0xFFFFFFE2),
		SetMemory(0x58DC6C, Add, 0xFFFFFFA2),
		SetMemory(0x58DC60, Add, 0xFFFFFE78),
		SetMemory(0x58DC68, Add, 0xFFFFFEB8),
		SetMemory(0x58DC64, Add, 0xFFFFFFE1),
		SetMemory(0x58DC6C, Add, 0x00000020),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000188),
		SetMemory(0x58DC68, Add, 0x00000148),
		SetMemory(0x58DC64, Add, 0x0000001F),
		SetMemory(0x58DC6C, Add, 0xFFFFFFE0),
		SetMemory(0x58DC60, Add, 0xFFFFFE9C),
		SetMemory(0x58DC68, Add, 0xFFFFFEDC),
		SetMemory(0x58DC64, Add, 0xFFFFFFA2),
		SetMemory(0x58DC6C, Add, 0xFFFFFFE2),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000164),
		SetMemory(0x58DC68, Add, 0x00000124),
		SetMemory(0x58DC64, Add, 0x0000005E),
		SetMemory(0x58DC6C, Add, 0x0000001E),
		SetMemory(0x58DC60, Add, 0xFFFFFEC0),
		SetMemory(0x58DC68, Add, 0xFFFFFF00),
		SetMemory(0x58DC64, Add, 0xFFFFFF64),
		SetMemory(0x58DC6C, Add, 0xFFFFFFA4),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000140),
		SetMemory(0x58DC68, Add, 0x00000100),
		SetMemory(0x58DC64, Add, 0x0000009C),
		SetMemory(0x58DC6C, Add, 0x0000005C),
		SetMemory(0x58DC60, Add, 0xFFFFFEE4),
		SetMemory(0x58DC68, Add, 0xFFFFFF24),
		SetMemory(0x58DC64, Add, 0xFFFFFF25),
		SetMemory(0x58DC6C, Add, 0xFFFFFF65),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000011C),
		SetMemory(0x58DC68, Add, 0x000000DC),
		SetMemory(0x58DC64, Add, 0x000000DB),
		SetMemory(0x58DC6C, Add, 0x0000009B),
		SetMemory(0x58DC60, Add, 0xFFFFFF08),
		SetMemory(0x58DC68, Add, 0xFFFFFF48),
		SetMemory(0x58DC64, Add, 0xFFFFFEE7),
		SetMemory(0x58DC6C, Add, 0xFFFFFF27),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000F8),
		SetMemory(0x58DC68, Add, 0x000000B8),
		SetMemory(0x58DC64, Add, 0x00000119),
		SetMemory(0x58DC6C, Add, 0x000000D9),
		SetMemory(0x58DC60, Add, 0xFFFFFF2C),
		SetMemory(0x58DC68, Add, 0xFFFFFF6C),
		SetMemory(0x58DC64, Add, 0xFFFFFEA9),
		SetMemory(0x58DC6C, Add, 0xFFFFFEE9),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000D4),
		SetMemory(0x58DC68, Add, 0x00000094),
		SetMemory(0x58DC64, Add, 0x00000157),
		SetMemory(0x58DC6C, Add, 0x00000117),
		SetMemory(0x58DC60, Add, 0xFFFFFF74),
		SetMemory(0x58DC68, Add, 0xFFFFFFB4),
		SetMemory(0x58DC64, Add, 0xFFFFFEA9),
		SetMemory(0x58DC6C, Add, 0xFFFFFEE9),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000008C),
		SetMemory(0x58DC68, Add, 0x0000004C),
		SetMemory(0x58DC64, Add, 0x00000157),
		SetMemory(0x58DC6C, Add, 0x00000117),
		SetMemory(0x58DC60, Add, 0xFFFFFFBC),
		SetMemory(0x58DC68, Add, 0xFFFFFFFC),
		SetMemory(0x58DC64, Add, 0xFFFFFEA9),
		SetMemory(0x58DC6C, Add, 0xFFFFFEE9),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000044),
		SetMemory(0x58DC68, Add, 0x00000004),
		SetMemory(0x58DC64, Add, 0x00000157),
		SetMemory(0x58DC6C, Add, 0x00000117),
		SetMemory(0x58DC60, Add, 0x00000003),
		SetMemory(0x58DC68, Add, 0x00000043),
		SetMemory(0x58DC64, Add, 0xFFFFFEA9),
		SetMemory(0x58DC6C, Add, 0xFFFFFEE9),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFFD),
		SetMemory(0x58DC68, Add, 0xFFFFFFBD),
		SetMemory(0x58DC64, Add, 0x00000157),
		SetMemory(0x58DC6C, Add, 0x00000117),
		SetMemory(0x58DC60, Add, 0x0000004C),
		SetMemory(0x58DC68, Add, 0x0000008C),
		SetMemory(0x58DC64, Add, 0xFFFFFEA9),
		SetMemory(0x58DC6C, Add, 0xFFFFFEE9),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFB4),
		SetMemory(0x58DC68, Add, 0xFFFFFF74),
		SetMemory(0x58DC64, Add, 0x00000157),
		SetMemory(0x58DC6C, Add, 0x00000117),
		SetMemory(0x58DC60, Add, 0x00000094),
		SetMemory(0x58DC68, Add, 0x000000D4),
		SetMemory(0x58DC64, Add, 0xFFFFFEA9),
		SetMemory(0x58DC6C, Add, 0xFFFFFEE9),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF6C),
		SetMemory(0x58DC68, Add, 0xFFFFFF2C),
		SetMemory(0x58DC64, Add, 0x00000157),
		SetMemory(0x58DC6C, Add, 0x00000117),
		SetMemory(0x58DC60, Add, 0x000000B8),
		SetMemory(0x58DC68, Add, 0x000000F8),
		SetMemory(0x58DC64, Add, 0xFFFFFEE7),
		SetMemory(0x58DC6C, Add, 0xFFFFFF27),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF48),
		SetMemory(0x58DC68, Add, 0xFFFFFF08),
		SetMemory(0x58DC64, Add, 0x00000119),
		SetMemory(0x58DC6C, Add, 0x000000D9),
		SetMemory(0x58DC60, Add, 0x000000DC),
		SetMemory(0x58DC68, Add, 0x0000011C),
		SetMemory(0x58DC64, Add, 0xFFFFFF25),
		SetMemory(0x58DC6C, Add, 0xFFFFFF65),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF24),
		SetMemory(0x58DC68, Add, 0xFFFFFEE4),
		SetMemory(0x58DC64, Add, 0x000000DB),
		SetMemory(0x58DC6C, Add, 0x0000009B),
		SetMemory(0x58DC60, Add, 0x00000100),
		SetMemory(0x58DC68, Add, 0x00000140),
		SetMemory(0x58DC64, Add, 0xFFFFFF64),
		SetMemory(0x58DC6C, Add, 0xFFFFFFA4),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF00),
		SetMemory(0x58DC68, Add, 0xFFFFFEC0),
		SetMemory(0x58DC64, Add, 0x0000009C),
		SetMemory(0x58DC6C, Add, 0x0000005C),
		SetMemory(0x58DC60, Add, 0x00000124),
		SetMemory(0x58DC68, Add, 0x00000164),
		SetMemory(0x58DC64, Add, 0xFFFFFFA2),
		SetMemory(0x58DC6C, Add, 0xFFFFFFE2),
		Call_ZergSpawnSet_Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFEDC),
		SetMemory(0x58DC68, Add, 0xFFFFFE9C),
		SetMemory(0x58DC64, Add, 0x0000005E),
		SetMemory(0x58DC6C, Add, 0x0000001E),
	})

NIfEnd()




---Lair Hive CSPlot Trigger

DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFE0),
		SetMemory(0x58DC68, Add, 0x00000020),
		SetMemory(0x58DC64, Add, 0xFFFFFFE0),
		SetMemory(0x58DC6C, Add, 0x00000020),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000020),
		SetMemory(0x58DC68, Add, 0xFFFFFFE0),
		SetMemory(0x58DC64, Add, 0x00000020),
		SetMemory(0x58DC6C, Add, 0xFFFFFFE0),
		SetMemory(0x58DC60, Add, 0xFFFFFFE1),
		SetMemory(0x58DC68, Add, 0x00000020),
		SetMemory(0x58DC64, Add, 0xFFFFFF9D),
		SetMemory(0x58DC6C, Add, 0xFFFFFFDD),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000001F),
		SetMemory(0x58DC68, Add, 0xFFFFFFE0),
		SetMemory(0x58DC64, Add, 0x00000063),
		SetMemory(0x58DC6C, Add, 0x00000023),
		SetMemory(0x58DC60, Add, 0x00000023),
		SetMemory(0x58DC68, Add, 0x00000063),
		SetMemory(0x58DC64, Add, 0xFFFFFF9D),
		SetMemory(0x58DC6C, Add, 0xFFFFFFDD),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFDD),
		SetMemory(0x58DC68, Add, 0xFFFFFF9D),
		SetMemory(0x58DC64, Add, 0x00000063),
		SetMemory(0x58DC6C, Add, 0x00000023),
		SetMemory(0x58DC60, Add, 0x00000023),
		SetMemory(0x58DC68, Add, 0x00000063),
		SetMemory(0x58DC64, Add, 0xFFFFFFE0),
		SetMemory(0x58DC6C, Add, 0x00000020),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFDD),
		SetMemory(0x58DC68, Add, 0xFFFFFF9D),
		SetMemory(0x58DC64, Add, 0x00000020),
		SetMemory(0x58DC6C, Add, 0xFFFFFFE0),
		SetMemory(0x58DC60, Add, 0x00000023),
		SetMemory(0x58DC68, Add, 0x00000063),
		SetMemory(0x58DC64, Add, 0x00000023),
		SetMemory(0x58DC6C, Add, 0x00000063),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFDD),
		SetMemory(0x58DC68, Add, 0xFFFFFF9D),
		SetMemory(0x58DC64, Add, 0xFFFFFFDD),
		SetMemory(0x58DC6C, Add, 0xFFFFFF9D),
		SetMemory(0x58DC60, Add, 0xFFFFFFE1),
		SetMemory(0x58DC68, Add, 0x00000020),
		SetMemory(0x58DC64, Add, 0x00000023),
		SetMemory(0x58DC6C, Add, 0x00000063),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000001F),
		SetMemory(0x58DC68, Add, 0xFFFFFFE0),
		SetMemory(0x58DC64, Add, 0xFFFFFFDD),
		SetMemory(0x58DC6C, Add, 0xFFFFFF9D),
		SetMemory(0x58DC60, Add, 0xFFFFFF9D),
		SetMemory(0x58DC68, Add, 0xFFFFFFDD),
		SetMemory(0x58DC64, Add, 0x00000023),
		SetMemory(0x58DC6C, Add, 0x00000063),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000063),
		SetMemory(0x58DC68, Add, 0x00000023),
		SetMemory(0x58DC64, Add, 0xFFFFFFDD),
		SetMemory(0x58DC6C, Add, 0xFFFFFF9D),
		SetMemory(0x58DC60, Add, 0xFFFFFF9D),
		SetMemory(0x58DC68, Add, 0xFFFFFFDD),
		SetMemory(0x58DC64, Add, 0xFFFFFFE1),
		SetMemory(0x58DC6C, Add, 0x00000020),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000063),
		SetMemory(0x58DC68, Add, 0x00000023),
		SetMemory(0x58DC64, Add, 0x0000001F),
		SetMemory(0x58DC6C, Add, 0xFFFFFFE0),
		SetMemory(0x58DC60, Add, 0xFFFFFF9D),
		SetMemory(0x58DC68, Add, 0xFFFFFFDD),
		SetMemory(0x58DC64, Add, 0xFFFFFF9D),
		SetMemory(0x58DC6C, Add, 0xFFFFFFDD),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000063),
		SetMemory(0x58DC68, Add, 0x00000023),
		SetMemory(0x58DC64, Add, 0x00000063),
		SetMemory(0x58DC6C, Add, 0x00000023),
		SetMemory(0x58DC60, Add, 0xFFFFFFE1),
		SetMemory(0x58DC68, Add, 0x00000020),
		SetMemory(0x58DC64, Add, 0xFFFFFF59),
		SetMemory(0x58DC6C, Add, 0xFFFFFF99),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000001F),
		SetMemory(0x58DC68, Add, 0xFFFFFFE0),
		SetMemory(0x58DC64, Add, 0x000000A7),
		SetMemory(0x58DC6C, Add, 0x00000067),
		SetMemory(0x58DC60, Add, 0x00000023),
		SetMemory(0x58DC68, Add, 0x00000063),
		SetMemory(0x58DC64, Add, 0xFFFFFF59),
		SetMemory(0x58DC6C, Add, 0xFFFFFF99),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFDD),
		SetMemory(0x58DC68, Add, 0xFFFFFF9D),
		SetMemory(0x58DC64, Add, 0x000000A7),
		SetMemory(0x58DC6C, Add, 0x00000067),
		SetMemory(0x58DC60, Add, 0x00000067),
		SetMemory(0x58DC68, Add, 0x000000A7),
		SetMemory(0x58DC64, Add, 0xFFFFFF59),
		SetMemory(0x58DC6C, Add, 0xFFFFFF99),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF99),
		SetMemory(0x58DC68, Add, 0xFFFFFF59),
		SetMemory(0x58DC64, Add, 0x000000A7),
		SetMemory(0x58DC6C, Add, 0x00000067),
		SetMemory(0x58DC60, Add, 0x00000067),
		SetMemory(0x58DC68, Add, 0x000000A7),
		SetMemory(0x58DC64, Add, 0xFFFFFF9D),
		SetMemory(0x58DC6C, Add, 0xFFFFFFDD),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF99),
		SetMemory(0x58DC68, Add, 0xFFFFFF59),
		SetMemory(0x58DC64, Add, 0x00000063),
		SetMemory(0x58DC6C, Add, 0x00000023),
		SetMemory(0x58DC60, Add, 0x00000067),
		SetMemory(0x58DC68, Add, 0x000000A7),
		SetMemory(0x58DC64, Add, 0xFFFFFFE0),
		SetMemory(0x58DC6C, Add, 0x00000020),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF99),
		SetMemory(0x58DC68, Add, 0xFFFFFF59),
		SetMemory(0x58DC64, Add, 0x00000020),
		SetMemory(0x58DC6C, Add, 0xFFFFFFE0),
		SetMemory(0x58DC60, Add, 0x00000067),
		SetMemory(0x58DC68, Add, 0x000000A7),
		SetMemory(0x58DC64, Add, 0x00000023),
		SetMemory(0x58DC6C, Add, 0x00000063),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF99),
		SetMemory(0x58DC68, Add, 0xFFFFFF59),
		SetMemory(0x58DC64, Add, 0xFFFFFFDD),
		SetMemory(0x58DC6C, Add, 0xFFFFFF9D),
		SetMemory(0x58DC60, Add, 0x00000067),
		SetMemory(0x58DC68, Add, 0x000000A7),
		SetMemory(0x58DC64, Add, 0x00000067),
		SetMemory(0x58DC6C, Add, 0x000000A7),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF99),
		SetMemory(0x58DC68, Add, 0xFFFFFF59),
		SetMemory(0x58DC64, Add, 0xFFFFFF99),
		SetMemory(0x58DC6C, Add, 0xFFFFFF59),
		SetMemory(0x58DC60, Add, 0x00000023),
		SetMemory(0x58DC68, Add, 0x00000063),
		SetMemory(0x58DC64, Add, 0x00000067),
		SetMemory(0x58DC6C, Add, 0x000000A7),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFDD),
		SetMemory(0x58DC68, Add, 0xFFFFFF9D),
		SetMemory(0x58DC64, Add, 0xFFFFFF99),
		SetMemory(0x58DC6C, Add, 0xFFFFFF59),
		SetMemory(0x58DC60, Add, 0xFFFFFFE1),
		SetMemory(0x58DC68, Add, 0x00000020),
		SetMemory(0x58DC64, Add, 0x00000067),
		SetMemory(0x58DC6C, Add, 0x000000A7),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000001F),
		SetMemory(0x58DC68, Add, 0xFFFFFFE0),
		SetMemory(0x58DC64, Add, 0xFFFFFF99),
		SetMemory(0x58DC6C, Add, 0xFFFFFF59),
		SetMemory(0x58DC60, Add, 0xFFFFFF9D),
		SetMemory(0x58DC68, Add, 0xFFFFFFDD),
		SetMemory(0x58DC64, Add, 0x00000067),
		SetMemory(0x58DC6C, Add, 0x000000A7),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000063),
		SetMemory(0x58DC68, Add, 0x00000023),
		SetMemory(0x58DC64, Add, 0xFFFFFF99),
		SetMemory(0x58DC6C, Add, 0xFFFFFF59),
		SetMemory(0x58DC60, Add, 0xFFFFFF59),
		SetMemory(0x58DC68, Add, 0xFFFFFF99),
		SetMemory(0x58DC64, Add, 0x00000067),
		SetMemory(0x58DC6C, Add, 0x000000A7),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000A7),
		SetMemory(0x58DC68, Add, 0x00000067),
		SetMemory(0x58DC64, Add, 0xFFFFFF99),
		SetMemory(0x58DC6C, Add, 0xFFFFFF59),
		SetMemory(0x58DC60, Add, 0xFFFFFF59),
		SetMemory(0x58DC68, Add, 0xFFFFFF99),
		SetMemory(0x58DC64, Add, 0x00000023),
		SetMemory(0x58DC6C, Add, 0x00000063),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000A7),
		SetMemory(0x58DC68, Add, 0x00000067),
		SetMemory(0x58DC64, Add, 0xFFFFFFDD),
		SetMemory(0x58DC6C, Add, 0xFFFFFF9D),
		SetMemory(0x58DC60, Add, 0xFFFFFF59),
		SetMemory(0x58DC68, Add, 0xFFFFFF99),
		SetMemory(0x58DC64, Add, 0xFFFFFFE1),
		SetMemory(0x58DC6C, Add, 0x00000020),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000A7),
		SetMemory(0x58DC68, Add, 0x00000067),
		SetMemory(0x58DC64, Add, 0x0000001F),
		SetMemory(0x58DC6C, Add, 0xFFFFFFE0),
		SetMemory(0x58DC60, Add, 0xFFFFFF59),
		SetMemory(0x58DC68, Add, 0xFFFFFF99),
		SetMemory(0x58DC64, Add, 0xFFFFFF9D),
		SetMemory(0x58DC6C, Add, 0xFFFFFFDD),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000A7),
		SetMemory(0x58DC68, Add, 0x00000067),
		SetMemory(0x58DC64, Add, 0x00000063),
		SetMemory(0x58DC6C, Add, 0x00000023),
		SetMemory(0x58DC60, Add, 0xFFFFFF59),
		SetMemory(0x58DC68, Add, 0xFFFFFF99),
		SetMemory(0x58DC64, Add, 0xFFFFFF59),
		SetMemory(0x58DC6C, Add, 0xFFFFFF99),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000A7),
		SetMemory(0x58DC68, Add, 0x00000067),
		SetMemory(0x58DC64, Add, 0x000000A7),
		SetMemory(0x58DC6C, Add, 0x00000067),
		SetMemory(0x58DC60, Add, 0xFFFFFF9D),
		SetMemory(0x58DC68, Add, 0xFFFFFFDD),
		SetMemory(0x58DC64, Add, 0xFFFFFF59),
		SetMemory(0x58DC6C, Add, 0xFFFFFF99),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000063),
		SetMemory(0x58DC68, Add, 0x00000023),
		SetMemory(0x58DC64, Add, 0x000000A7),
		SetMemory(0x58DC6C, Add, 0x00000067),
		SetMemory(0x58DC60, Add, 0xFFFFFFE1),
		SetMemory(0x58DC68, Add, 0x00000020),
		SetMemory(0x58DC64, Add, 0xFFFFFF15),
		SetMemory(0x58DC6C, Add, 0xFFFFFF55),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000001F),
		SetMemory(0x58DC68, Add, 0xFFFFFFE0),
		SetMemory(0x58DC64, Add, 0x000000EB),
		SetMemory(0x58DC6C, Add, 0x000000AB),
		SetMemory(0x58DC60, Add, 0x00000023),
		SetMemory(0x58DC68, Add, 0x00000063),
		SetMemory(0x58DC64, Add, 0xFFFFFF15),
		SetMemory(0x58DC6C, Add, 0xFFFFFF55),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFDD),
		SetMemory(0x58DC68, Add, 0xFFFFFF9D),
		SetMemory(0x58DC64, Add, 0x000000EB),
		SetMemory(0x58DC6C, Add, 0x000000AB),
		SetMemory(0x58DC60, Add, 0x00000067),
		SetMemory(0x58DC68, Add, 0x000000A7),
		SetMemory(0x58DC64, Add, 0xFFFFFF15),
		SetMemory(0x58DC6C, Add, 0xFFFFFF55),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF99),
		SetMemory(0x58DC68, Add, 0xFFFFFF59),
		SetMemory(0x58DC64, Add, 0x000000EB),
		SetMemory(0x58DC6C, Add, 0x000000AB),
		SetMemory(0x58DC60, Add, 0x000000AB),
		SetMemory(0x58DC68, Add, 0x000000EB),
		SetMemory(0x58DC64, Add, 0xFFFFFF15),
		SetMemory(0x58DC6C, Add, 0xFFFFFF55),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF55),
		SetMemory(0x58DC68, Add, 0xFFFFFF15),
		SetMemory(0x58DC64, Add, 0x000000EB),
		SetMemory(0x58DC6C, Add, 0x000000AB),
		SetMemory(0x58DC60, Add, 0x000000AB),
		SetMemory(0x58DC68, Add, 0x000000EB),
		SetMemory(0x58DC64, Add, 0xFFFFFF59),
		SetMemory(0x58DC6C, Add, 0xFFFFFF99),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF55),
		SetMemory(0x58DC68, Add, 0xFFFFFF15),
		SetMemory(0x58DC64, Add, 0x000000A7),
		SetMemory(0x58DC6C, Add, 0x00000067),
		SetMemory(0x58DC60, Add, 0x000000AB),
		SetMemory(0x58DC68, Add, 0x000000EB),
		SetMemory(0x58DC64, Add, 0xFFFFFF9D),
		SetMemory(0x58DC6C, Add, 0xFFFFFFDD),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF55),
		SetMemory(0x58DC68, Add, 0xFFFFFF15),
		SetMemory(0x58DC64, Add, 0x00000063),
		SetMemory(0x58DC6C, Add, 0x00000023),
		SetMemory(0x58DC60, Add, 0x000000AB),
		SetMemory(0x58DC68, Add, 0x000000EB),
		SetMemory(0x58DC64, Add, 0xFFFFFFE0),
		SetMemory(0x58DC6C, Add, 0x00000020),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF55),
		SetMemory(0x58DC68, Add, 0xFFFFFF15),
		SetMemory(0x58DC64, Add, 0x00000020),
		SetMemory(0x58DC6C, Add, 0xFFFFFFE0),
		SetMemory(0x58DC60, Add, 0x000000AB),
		SetMemory(0x58DC68, Add, 0x000000EB),
		SetMemory(0x58DC64, Add, 0x00000023),
		SetMemory(0x58DC6C, Add, 0x00000063),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF55),
		SetMemory(0x58DC68, Add, 0xFFFFFF15),
		SetMemory(0x58DC64, Add, 0xFFFFFFDD),
		SetMemory(0x58DC6C, Add, 0xFFFFFF9D),
		SetMemory(0x58DC60, Add, 0x000000AB),
		SetMemory(0x58DC68, Add, 0x000000EB),
		SetMemory(0x58DC64, Add, 0x00000067),
		SetMemory(0x58DC6C, Add, 0x000000A7),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF55),
		SetMemory(0x58DC68, Add, 0xFFFFFF15),
		SetMemory(0x58DC64, Add, 0xFFFFFF99),
		SetMemory(0x58DC6C, Add, 0xFFFFFF59),
		SetMemory(0x58DC60, Add, 0x000000AB),
		SetMemory(0x58DC68, Add, 0x000000EB),
		SetMemory(0x58DC64, Add, 0x000000AB),
		SetMemory(0x58DC6C, Add, 0x000000EB),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF55),
		SetMemory(0x58DC68, Add, 0xFFFFFF15),
		SetMemory(0x58DC64, Add, 0xFFFFFF55),
		SetMemory(0x58DC6C, Add, 0xFFFFFF15),
		SetMemory(0x58DC60, Add, 0x00000067),
		SetMemory(0x58DC68, Add, 0x000000A7),
		SetMemory(0x58DC64, Add, 0x000000AB),
		SetMemory(0x58DC6C, Add, 0x000000EB),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF99),
		SetMemory(0x58DC68, Add, 0xFFFFFF59),
		SetMemory(0x58DC64, Add, 0xFFFFFF55),
		SetMemory(0x58DC6C, Add, 0xFFFFFF15),
		SetMemory(0x58DC60, Add, 0x00000023),
		SetMemory(0x58DC68, Add, 0x00000063),
		SetMemory(0x58DC64, Add, 0x000000AB),
		SetMemory(0x58DC6C, Add, 0x000000EB),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFDD),
		SetMemory(0x58DC68, Add, 0xFFFFFF9D),
		SetMemory(0x58DC64, Add, 0xFFFFFF55),
		SetMemory(0x58DC6C, Add, 0xFFFFFF15),
		SetMemory(0x58DC60, Add, 0xFFFFFFE1),
		SetMemory(0x58DC68, Add, 0x00000020),
		SetMemory(0x58DC64, Add, 0x000000AB),
		SetMemory(0x58DC6C, Add, 0x000000EB),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000001F),
		SetMemory(0x58DC68, Add, 0xFFFFFFE0),
		SetMemory(0x58DC64, Add, 0xFFFFFF55),
		SetMemory(0x58DC6C, Add, 0xFFFFFF15),
		SetMemory(0x58DC60, Add, 0xFFFFFF9D),
		SetMemory(0x58DC68, Add, 0xFFFFFFDD),
		SetMemory(0x58DC64, Add, 0x000000AB),
		SetMemory(0x58DC6C, Add, 0x000000EB),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000063),
		SetMemory(0x58DC68, Add, 0x00000023),
		SetMemory(0x58DC64, Add, 0xFFFFFF55),
		SetMemory(0x58DC6C, Add, 0xFFFFFF15),
		SetMemory(0x58DC60, Add, 0xFFFFFF59),
		SetMemory(0x58DC68, Add, 0xFFFFFF99),
		SetMemory(0x58DC64, Add, 0x000000AB),
		SetMemory(0x58DC6C, Add, 0x000000EB),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000A7),
		SetMemory(0x58DC68, Add, 0x00000067),
		SetMemory(0x58DC64, Add, 0xFFFFFF55),
		SetMemory(0x58DC6C, Add, 0xFFFFFF15),
		SetMemory(0x58DC60, Add, 0xFFFFFF15),
		SetMemory(0x58DC68, Add, 0xFFFFFF55),
		SetMemory(0x58DC64, Add, 0x000000AB),
		SetMemory(0x58DC6C, Add, 0x000000EB),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000EB),
		SetMemory(0x58DC68, Add, 0x000000AB),
		SetMemory(0x58DC64, Add, 0xFFFFFF55),
		SetMemory(0x58DC6C, Add, 0xFFFFFF15),
		SetMemory(0x58DC60, Add, 0xFFFFFF15),
		SetMemory(0x58DC68, Add, 0xFFFFFF55),
		SetMemory(0x58DC64, Add, 0x00000067),
		SetMemory(0x58DC6C, Add, 0x000000A7),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000EB),
		SetMemory(0x58DC68, Add, 0x000000AB),
		SetMemory(0x58DC64, Add, 0xFFFFFF99),
		SetMemory(0x58DC6C, Add, 0xFFFFFF59),
		SetMemory(0x58DC60, Add, 0xFFFFFF15),
		SetMemory(0x58DC68, Add, 0xFFFFFF55),
		SetMemory(0x58DC64, Add, 0x00000023),
		SetMemory(0x58DC6C, Add, 0x00000063),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000EB),
		SetMemory(0x58DC68, Add, 0x000000AB),
		SetMemory(0x58DC64, Add, 0xFFFFFFDD),
		SetMemory(0x58DC6C, Add, 0xFFFFFF9D),
		SetMemory(0x58DC60, Add, 0xFFFFFF15),
		SetMemory(0x58DC68, Add, 0xFFFFFF55),
		SetMemory(0x58DC64, Add, 0xFFFFFFE1),
		SetMemory(0x58DC6C, Add, 0x00000020),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000EB),
		SetMemory(0x58DC68, Add, 0x000000AB),
		SetMemory(0x58DC64, Add, 0x0000001F),
		SetMemory(0x58DC6C, Add, 0xFFFFFFE0),
		SetMemory(0x58DC60, Add, 0xFFFFFF15),
		SetMemory(0x58DC68, Add, 0xFFFFFF55),
		SetMemory(0x58DC64, Add, 0xFFFFFF9D),
		SetMemory(0x58DC6C, Add, 0xFFFFFFDD),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000EB),
		SetMemory(0x58DC68, Add, 0x000000AB),
		SetMemory(0x58DC64, Add, 0x00000063),
		SetMemory(0x58DC6C, Add, 0x00000023),
		SetMemory(0x58DC60, Add, 0xFFFFFF15),
		SetMemory(0x58DC68, Add, 0xFFFFFF55),
		SetMemory(0x58DC64, Add, 0xFFFFFF59),
		SetMemory(0x58DC6C, Add, 0xFFFFFF99),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000EB),
		SetMemory(0x58DC68, Add, 0x000000AB),
		SetMemory(0x58DC64, Add, 0x000000A7),
		SetMemory(0x58DC6C, Add, 0x00000067),
		SetMemory(0x58DC60, Add, 0xFFFFFF15),
		SetMemory(0x58DC68, Add, 0xFFFFFF55),
		SetMemory(0x58DC64, Add, 0xFFFFFF15),
		SetMemory(0x58DC6C, Add, 0xFFFFFF55),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000EB),
		SetMemory(0x58DC68, Add, 0x000000AB),
		SetMemory(0x58DC64, Add, 0x000000EB),
		SetMemory(0x58DC6C, Add, 0x000000AB),
		SetMemory(0x58DC60, Add, 0xFFFFFF59),
		SetMemory(0x58DC68, Add, 0xFFFFFF99),
		SetMemory(0x58DC64, Add, 0xFFFFFF15),
		SetMemory(0x58DC6C, Add, 0xFFFFFF55),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000A7),
		SetMemory(0x58DC68, Add, 0x00000067),
		SetMemory(0x58DC64, Add, 0x000000EB),
		SetMemory(0x58DC6C, Add, 0x000000AB),
		SetMemory(0x58DC60, Add, 0xFFFFFF9D),
		SetMemory(0x58DC68, Add, 0xFFFFFFDD),
		SetMemory(0x58DC64, Add, 0xFFFFFF15),
		SetMemory(0x58DC6C, Add, 0xFFFFFF55),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000063),
		SetMemory(0x58DC68, Add, 0x00000023),
		SetMemory(0x58DC64, Add, 0x000000EB),
		SetMemory(0x58DC6C, Add, 0x000000AB),
		SetMemory(0x58DC60, Add, 0xFFFFFFE1),
		SetMemory(0x58DC68, Add, 0x00000020),
		SetMemory(0x58DC64, Add, 0xFFFFFED1),
		SetMemory(0x58DC6C, Add, 0xFFFFFF11),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000001F),
		SetMemory(0x58DC68, Add, 0xFFFFFFE0),
		SetMemory(0x58DC64, Add, 0x0000012F),
		SetMemory(0x58DC6C, Add, 0x000000EF),
		SetMemory(0x58DC60, Add, 0x00000023),
		SetMemory(0x58DC68, Add, 0x00000063),
		SetMemory(0x58DC64, Add, 0xFFFFFED1),
		SetMemory(0x58DC6C, Add, 0xFFFFFF11),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFDD),
		SetMemory(0x58DC68, Add, 0xFFFFFF9D),
		SetMemory(0x58DC64, Add, 0x0000012F),
		SetMemory(0x58DC6C, Add, 0x000000EF),
		SetMemory(0x58DC60, Add, 0x00000067),
		SetMemory(0x58DC68, Add, 0x000000A7),
		SetMemory(0x58DC64, Add, 0xFFFFFED1),
		SetMemory(0x58DC6C, Add, 0xFFFFFF11),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF99),
		SetMemory(0x58DC68, Add, 0xFFFFFF59),
		SetMemory(0x58DC64, Add, 0x0000012F),
		SetMemory(0x58DC6C, Add, 0x000000EF),
		SetMemory(0x58DC60, Add, 0x000000AB),
		SetMemory(0x58DC68, Add, 0x000000EB),
		SetMemory(0x58DC64, Add, 0xFFFFFED1),
		SetMemory(0x58DC6C, Add, 0xFFFFFF11),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF55),
		SetMemory(0x58DC68, Add, 0xFFFFFF15),
		SetMemory(0x58DC64, Add, 0x0000012F),
		SetMemory(0x58DC6C, Add, 0x000000EF),
		SetMemory(0x58DC60, Add, 0x000000EF),
		SetMemory(0x58DC68, Add, 0x0000012F),
		SetMemory(0x58DC64, Add, 0xFFFFFED1),
		SetMemory(0x58DC6C, Add, 0xFFFFFF11),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF11),
		SetMemory(0x58DC68, Add, 0xFFFFFED1),
		SetMemory(0x58DC64, Add, 0x0000012F),
		SetMemory(0x58DC6C, Add, 0x000000EF),
		SetMemory(0x58DC60, Add, 0x000000EF),
		SetMemory(0x58DC68, Add, 0x0000012F),
		SetMemory(0x58DC64, Add, 0xFFFFFF15),
		SetMemory(0x58DC6C, Add, 0xFFFFFF55),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF11),
		SetMemory(0x58DC68, Add, 0xFFFFFED1),
		SetMemory(0x58DC64, Add, 0x000000EB),
		SetMemory(0x58DC6C, Add, 0x000000AB),
		SetMemory(0x58DC60, Add, 0x000000EF),
		SetMemory(0x58DC68, Add, 0x0000012F),
		SetMemory(0x58DC64, Add, 0xFFFFFF59),
		SetMemory(0x58DC6C, Add, 0xFFFFFF99),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF11),
		SetMemory(0x58DC68, Add, 0xFFFFFED1),
		SetMemory(0x58DC64, Add, 0x000000A7),
		SetMemory(0x58DC6C, Add, 0x00000067),
		SetMemory(0x58DC60, Add, 0x000000EF),
		SetMemory(0x58DC68, Add, 0x0000012F),
		SetMemory(0x58DC64, Add, 0xFFFFFF9D),
		SetMemory(0x58DC6C, Add, 0xFFFFFFDD),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF11),
		SetMemory(0x58DC68, Add, 0xFFFFFED1),
		SetMemory(0x58DC64, Add, 0x00000063),
		SetMemory(0x58DC6C, Add, 0x00000023),
		SetMemory(0x58DC60, Add, 0x000000EF),
		SetMemory(0x58DC68, Add, 0x0000012F),
		SetMemory(0x58DC64, Add, 0xFFFFFFE0),
		SetMemory(0x58DC6C, Add, 0x00000020),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF11),
		SetMemory(0x58DC68, Add, 0xFFFFFED1),
		SetMemory(0x58DC64, Add, 0x00000020),
		SetMemory(0x58DC6C, Add, 0xFFFFFFE0),
		SetMemory(0x58DC60, Add, 0x000000EF),
		SetMemory(0x58DC68, Add, 0x0000012F),
		SetMemory(0x58DC64, Add, 0x00000023),
		SetMemory(0x58DC6C, Add, 0x00000063),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF11),
		SetMemory(0x58DC68, Add, 0xFFFFFED1),
		SetMemory(0x58DC64, Add, 0xFFFFFFDD),
		SetMemory(0x58DC6C, Add, 0xFFFFFF9D),
		SetMemory(0x58DC60, Add, 0x000000EF),
		SetMemory(0x58DC68, Add, 0x0000012F),
		SetMemory(0x58DC64, Add, 0x00000067),
		SetMemory(0x58DC6C, Add, 0x000000A7),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF11),
		SetMemory(0x58DC68, Add, 0xFFFFFED1),
		SetMemory(0x58DC64, Add, 0xFFFFFF99),
		SetMemory(0x58DC6C, Add, 0xFFFFFF59),
		SetMemory(0x58DC60, Add, 0x000000EF),
		SetMemory(0x58DC68, Add, 0x0000012F),
		SetMemory(0x58DC64, Add, 0x000000AB),
		SetMemory(0x58DC6C, Add, 0x000000EB),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF11),
		SetMemory(0x58DC68, Add, 0xFFFFFED1),
		SetMemory(0x58DC64, Add, 0xFFFFFF55),
		SetMemory(0x58DC6C, Add, 0xFFFFFF15),
		SetMemory(0x58DC60, Add, 0x000000EF),
		SetMemory(0x58DC68, Add, 0x0000012F),
		SetMemory(0x58DC64, Add, 0x000000EF),
		SetMemory(0x58DC6C, Add, 0x0000012F),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF11),
		SetMemory(0x58DC68, Add, 0xFFFFFED1),
		SetMemory(0x58DC64, Add, 0xFFFFFF11),
		SetMemory(0x58DC6C, Add, 0xFFFFFED1),
		SetMemory(0x58DC60, Add, 0x000000AB),
		SetMemory(0x58DC68, Add, 0x000000EB),
		SetMemory(0x58DC64, Add, 0x000000EF),
		SetMemory(0x58DC6C, Add, 0x0000012F),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF55),
		SetMemory(0x58DC68, Add, 0xFFFFFF15),
		SetMemory(0x58DC64, Add, 0xFFFFFF11),
		SetMemory(0x58DC6C, Add, 0xFFFFFED1),
		SetMemory(0x58DC60, Add, 0x00000067),
		SetMemory(0x58DC68, Add, 0x000000A7),
		SetMemory(0x58DC64, Add, 0x000000EF),
		SetMemory(0x58DC6C, Add, 0x0000012F),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF99),
		SetMemory(0x58DC68, Add, 0xFFFFFF59),
		SetMemory(0x58DC64, Add, 0xFFFFFF11),
		SetMemory(0x58DC6C, Add, 0xFFFFFED1),
		SetMemory(0x58DC60, Add, 0x00000023),
		SetMemory(0x58DC68, Add, 0x00000063),
		SetMemory(0x58DC64, Add, 0x000000EF),
		SetMemory(0x58DC6C, Add, 0x0000012F),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFDD),
		SetMemory(0x58DC68, Add, 0xFFFFFF9D),
		SetMemory(0x58DC64, Add, 0xFFFFFF11),
		SetMemory(0x58DC6C, Add, 0xFFFFFED1),
		SetMemory(0x58DC60, Add, 0xFFFFFFE1),
		SetMemory(0x58DC68, Add, 0x00000020),
		SetMemory(0x58DC64, Add, 0x000000EF),
		SetMemory(0x58DC6C, Add, 0x0000012F),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000001F),
		SetMemory(0x58DC68, Add, 0xFFFFFFE0),
		SetMemory(0x58DC64, Add, 0xFFFFFF11),
		SetMemory(0x58DC6C, Add, 0xFFFFFED1),
		SetMemory(0x58DC60, Add, 0xFFFFFF9D),
		SetMemory(0x58DC68, Add, 0xFFFFFFDD),
		SetMemory(0x58DC64, Add, 0x000000EF),
		SetMemory(0x58DC6C, Add, 0x0000012F),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000063),
		SetMemory(0x58DC68, Add, 0x00000023),
		SetMemory(0x58DC64, Add, 0xFFFFFF11),
		SetMemory(0x58DC6C, Add, 0xFFFFFED1),
		SetMemory(0x58DC60, Add, 0xFFFFFF59),
		SetMemory(0x58DC68, Add, 0xFFFFFF99),
		SetMemory(0x58DC64, Add, 0x000000EF),
		SetMemory(0x58DC6C, Add, 0x0000012F),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000A7),
		SetMemory(0x58DC68, Add, 0x00000067),
		SetMemory(0x58DC64, Add, 0xFFFFFF11),
		SetMemory(0x58DC6C, Add, 0xFFFFFED1),
		SetMemory(0x58DC60, Add, 0xFFFFFF15),
		SetMemory(0x58DC68, Add, 0xFFFFFF55),
		SetMemory(0x58DC64, Add, 0x000000EF),
		SetMemory(0x58DC6C, Add, 0x0000012F),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000EB),
		SetMemory(0x58DC68, Add, 0x000000AB),
		SetMemory(0x58DC64, Add, 0xFFFFFF11),
		SetMemory(0x58DC6C, Add, 0xFFFFFED1),
		SetMemory(0x58DC60, Add, 0xFFFFFED1),
		SetMemory(0x58DC68, Add, 0xFFFFFF11),
		SetMemory(0x58DC64, Add, 0x000000EF),
		SetMemory(0x58DC6C, Add, 0x0000012F),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000012F),
		SetMemory(0x58DC68, Add, 0x000000EF),
		SetMemory(0x58DC64, Add, 0xFFFFFF11),
		SetMemory(0x58DC6C, Add, 0xFFFFFED1),
		SetMemory(0x58DC60, Add, 0xFFFFFED1),
		SetMemory(0x58DC68, Add, 0xFFFFFF11),
		SetMemory(0x58DC64, Add, 0x000000AB),
		SetMemory(0x58DC6C, Add, 0x000000EB),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000012F),
		SetMemory(0x58DC68, Add, 0x000000EF),
		SetMemory(0x58DC64, Add, 0xFFFFFF55),
		SetMemory(0x58DC6C, Add, 0xFFFFFF15),
		SetMemory(0x58DC60, Add, 0xFFFFFED1),
		SetMemory(0x58DC68, Add, 0xFFFFFF11),
		SetMemory(0x58DC64, Add, 0x00000067),
		SetMemory(0x58DC6C, Add, 0x000000A7),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000012F),
		SetMemory(0x58DC68, Add, 0x000000EF),
		SetMemory(0x58DC64, Add, 0xFFFFFF99),
		SetMemory(0x58DC6C, Add, 0xFFFFFF59),
		SetMemory(0x58DC60, Add, 0xFFFFFED1),
		SetMemory(0x58DC68, Add, 0xFFFFFF11),
		SetMemory(0x58DC64, Add, 0x00000023),
		SetMemory(0x58DC6C, Add, 0x00000063),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000012F),
		SetMemory(0x58DC68, Add, 0x000000EF),
		SetMemory(0x58DC64, Add, 0xFFFFFFDD),
		SetMemory(0x58DC6C, Add, 0xFFFFFF9D),
		SetMemory(0x58DC60, Add, 0xFFFFFED1),
		SetMemory(0x58DC68, Add, 0xFFFFFF11),
		SetMemory(0x58DC64, Add, 0xFFFFFFE1),
		SetMemory(0x58DC6C, Add, 0x00000020),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000012F),
		SetMemory(0x58DC68, Add, 0x000000EF),
		SetMemory(0x58DC64, Add, 0x0000001F),
		SetMemory(0x58DC6C, Add, 0xFFFFFFE0),
		SetMemory(0x58DC60, Add, 0xFFFFFED1),
		SetMemory(0x58DC68, Add, 0xFFFFFF11),
		SetMemory(0x58DC64, Add, 0xFFFFFF9D),
		SetMemory(0x58DC6C, Add, 0xFFFFFFDD),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000012F),
		SetMemory(0x58DC68, Add, 0x000000EF),
		SetMemory(0x58DC64, Add, 0x00000063),
		SetMemory(0x58DC6C, Add, 0x00000023),
		SetMemory(0x58DC60, Add, 0xFFFFFED1),
		SetMemory(0x58DC68, Add, 0xFFFFFF11),
		SetMemory(0x58DC64, Add, 0xFFFFFF59),
		SetMemory(0x58DC6C, Add, 0xFFFFFF99),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000012F),
		SetMemory(0x58DC68, Add, 0x000000EF),
		SetMemory(0x58DC64, Add, 0x000000A7),
		SetMemory(0x58DC6C, Add, 0x00000067),
		SetMemory(0x58DC60, Add, 0xFFFFFED1),
		SetMemory(0x58DC68, Add, 0xFFFFFF11),
		SetMemory(0x58DC64, Add, 0xFFFFFF15),
		SetMemory(0x58DC6C, Add, 0xFFFFFF55),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000012F),
		SetMemory(0x58DC68, Add, 0x000000EF),
		SetMemory(0x58DC64, Add, 0x000000EB),
		SetMemory(0x58DC6C, Add, 0x000000AB),
		SetMemory(0x58DC60, Add, 0xFFFFFED1),
		SetMemory(0x58DC68, Add, 0xFFFFFF11),
		SetMemory(0x58DC64, Add, 0xFFFFFED1),
		SetMemory(0x58DC6C, Add, 0xFFFFFF11),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000012F),
		SetMemory(0x58DC68, Add, 0x000000EF),
		SetMemory(0x58DC64, Add, 0x0000012F),
		SetMemory(0x58DC6C, Add, 0x000000EF),
		SetMemory(0x58DC60, Add, 0xFFFFFF15),
		SetMemory(0x58DC68, Add, 0xFFFFFF55),
		SetMemory(0x58DC64, Add, 0xFFFFFED1),
		SetMemory(0x58DC6C, Add, 0xFFFFFF11),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000EB),
		SetMemory(0x58DC68, Add, 0x000000AB),
		SetMemory(0x58DC64, Add, 0x0000012F),
		SetMemory(0x58DC6C, Add, 0x000000EF),
		SetMemory(0x58DC60, Add, 0xFFFFFF59),
		SetMemory(0x58DC68, Add, 0xFFFFFF99),
		SetMemory(0x58DC64, Add, 0xFFFFFED1),
		SetMemory(0x58DC6C, Add, 0xFFFFFF11),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000A7),
		SetMemory(0x58DC68, Add, 0x00000067),
		SetMemory(0x58DC64, Add, 0x0000012F),
		SetMemory(0x58DC6C, Add, 0x000000EF),
		SetMemory(0x58DC60, Add, 0xFFFFFF9D),
		SetMemory(0x58DC68, Add, 0xFFFFFFDD),
		SetMemory(0x58DC64, Add, 0xFFFFFED1),
		SetMemory(0x58DC6C, Add, 0xFFFFFF11),
		Call_UnitIDV
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000063),
		SetMemory(0x58DC68, Add, 0x00000023),
		SetMemory(0x58DC64, Add, 0x0000012F),
		SetMemory(0x58DC6C, Add, 0x000000EF),
	})

 
---Lair Hive CSPlot Trigger End
Call_LoadCp()
DoActions(FP,MoveCp(Add,1*4))

NIfEnd()
DoActions(FP,MoveCp(Subtract,1*4))
CGunErrorCheck(2)
NIf(FP,{DeathsX(CurrentPlayer,AtMost,0*0x1000,0,0xF000)}) -- LAIR
DoActions(FP,MoveCp(Add,1*4))
NIf(FP,{DeathsX(CurrentPlayer,AtMost,0,0,0xFFFF),DeathsX(CurrentPlayer,AtMost,2*16777216,0,0xFF000000)}) -- AllowSpawnSet for Lair
---Lair CSPlot Trigger


NIf(FP,{DeathsX(CurrentPlayer,AtLeast,1*16777216,0,0xFF000000)}) -- 
Call_SaveCp()

---------\
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000000D);
		SetMemory(0x58DC68, Add, 0x0000004D);
		SetMemory(0x58DC64, Add, 0xFFFFFFB3);
		SetMemory(0x58DC6C, Add, 0xFFFFFFF3);
		Call_UnitIDVLair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFF3);
		SetMemory(0x58DC68, Add, 0xFFFFFFB3);
		SetMemory(0x58DC64, Add, 0x0000004D);
		SetMemory(0x58DC6C, Add, 0x0000000D);
		SetMemory(0x58DC60, Add, 0x0000000D);
		SetMemory(0x58DC68, Add, 0x0000004D);
		SetMemory(0x58DC64, Add, 0x0000000D);
		SetMemory(0x58DC6C, Add, 0x0000004D);
		Call_UnitIDVLair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFF3);
		SetMemory(0x58DC68, Add, 0xFFFFFFB3);
		SetMemory(0x58DC64, Add, 0xFFFFFFF3);
		SetMemory(0x58DC6C, Add, 0xFFFFFFB3);
		SetMemory(0x58DC60, Add, 0xFFFFFFB3);
		SetMemory(0x58DC68, Add, 0xFFFFFFF3);
		SetMemory(0x58DC64, Add, 0x0000000D);
		SetMemory(0x58DC6C, Add, 0x0000004D);
		Call_UnitIDVLair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000004D);
		SetMemory(0x58DC68, Add, 0x0000000D);
		SetMemory(0x58DC64, Add, 0xFFFFFFF3);
		SetMemory(0x58DC6C, Add, 0xFFFFFFB3);
		SetMemory(0x58DC60, Add, 0xFFFFFFB3);
		SetMemory(0x58DC68, Add, 0xFFFFFFF3);
		SetMemory(0x58DC64, Add, 0xFFFFFFB3);
		SetMemory(0x58DC6C, Add, 0xFFFFFFF3);
		Call_UnitIDVLair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000004D);
		SetMemory(0x58DC68, Add, 0x0000000D);
		SetMemory(0x58DC64, Add, 0x0000004D);
		SetMemory(0x58DC6C, Add, 0x0000000D);
		SetMemory(0x58DC60, Add, 0x0000003A);
		SetMemory(0x58DC68, Add, 0x0000007A);
		SetMemory(0x58DC64, Add, 0xFFFFFF86);
		SetMemory(0x58DC6C, Add, 0xFFFFFFC6);
		Call_UnitIDVLair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFC6);
		SetMemory(0x58DC68, Add, 0xFFFFFF86);
		SetMemory(0x58DC64, Add, 0x0000007A);
		SetMemory(0x58DC6C, Add, 0x0000003A);
		SetMemory(0x58DC60, Add, 0x0000003A);
		SetMemory(0x58DC68, Add, 0x0000007A);
		SetMemory(0x58DC64, Add, 0x0000003A);
		SetMemory(0x58DC6C, Add, 0x0000007A);
		Call_UnitIDVLair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFC6);
		SetMemory(0x58DC68, Add, 0xFFFFFF86);
		SetMemory(0x58DC64, Add, 0xFFFFFFC6);
		SetMemory(0x58DC6C, Add, 0xFFFFFF86);
		SetMemory(0x58DC60, Add, 0xFFFFFF86);
		SetMemory(0x58DC68, Add, 0xFFFFFFC6);
		SetMemory(0x58DC64, Add, 0x0000003A);
		SetMemory(0x58DC6C, Add, 0x0000007A);
		Call_UnitIDVLair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000007A);
		SetMemory(0x58DC68, Add, 0x0000003A);
		SetMemory(0x58DC64, Add, 0xFFFFFFC6);
		SetMemory(0x58DC6C, Add, 0xFFFFFF86);
		SetMemory(0x58DC60, Add, 0xFFFFFF86);
		SetMemory(0x58DC68, Add, 0xFFFFFFC6);
		SetMemory(0x58DC64, Add, 0xFFFFFF86);
		SetMemory(0x58DC6C, Add, 0xFFFFFFC6);
		Call_UnitIDVLair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000007A);
		SetMemory(0x58DC68, Add, 0x0000003A);
		SetMemory(0x58DC64, Add, 0x0000007A);
		SetMemory(0x58DC6C, Add, 0x0000003A);
		SetMemory(0x58DC60, Add, 0x00000067);
		SetMemory(0x58DC68, Add, 0x000000A7);
		SetMemory(0x58DC64, Add, 0xFFFFFF59);
		SetMemory(0x58DC6C, Add, 0xFFFFFF99);
		Call_UnitIDVLair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF99);
		SetMemory(0x58DC68, Add, 0xFFFFFF59);
		SetMemory(0x58DC64, Add, 0x000000A7);
		SetMemory(0x58DC6C, Add, 0x00000067);
		SetMemory(0x58DC60, Add, 0x00000067);
		SetMemory(0x58DC68, Add, 0x000000A7);
		SetMemory(0x58DC64, Add, 0x00000067);
		SetMemory(0x58DC6C, Add, 0x000000A7);
		Call_UnitIDVLair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF99);
		SetMemory(0x58DC68, Add, 0xFFFFFF59);
		SetMemory(0x58DC64, Add, 0xFFFFFF99);
		SetMemory(0x58DC6C, Add, 0xFFFFFF59);
		SetMemory(0x58DC60, Add, 0xFFFFFF59);
		SetMemory(0x58DC68, Add, 0xFFFFFF99);
		SetMemory(0x58DC64, Add, 0x00000067);
		SetMemory(0x58DC6C, Add, 0x000000A7);
		Call_UnitIDVLair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000A7);
		SetMemory(0x58DC68, Add, 0x00000067);
		SetMemory(0x58DC64, Add, 0xFFFFFF99);
		SetMemory(0x58DC6C, Add, 0xFFFFFF59);
		SetMemory(0x58DC60, Add, 0xFFFFFF59);
		SetMemory(0x58DC68, Add, 0xFFFFFF99);
		SetMemory(0x58DC64, Add, 0xFFFFFF59);
		SetMemory(0x58DC6C, Add, 0xFFFFFF99);
		Call_UnitIDVLair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000A7);
		SetMemory(0x58DC68, Add, 0x00000067);
		SetMemory(0x58DC64, Add, 0x000000A7);
		SetMemory(0x58DC6C, Add, 0x00000067);
		SetMemory(0x58DC60, Add, 0x00000095);
		SetMemory(0x58DC68, Add, 0x000000D5);
		SetMemory(0x58DC64, Add, 0xFFFFFF2B);
		SetMemory(0x58DC6C, Add, 0xFFFFFF6B);
		Call_UnitIDVLair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF6B);
		SetMemory(0x58DC68, Add, 0xFFFFFF2B);
		SetMemory(0x58DC64, Add, 0x000000D5);
		SetMemory(0x58DC6C, Add, 0x00000095);
		SetMemory(0x58DC60, Add, 0x00000095);
		SetMemory(0x58DC68, Add, 0x000000D5);
		SetMemory(0x58DC64, Add, 0x00000095);
		SetMemory(0x58DC6C, Add, 0x000000D5);
		Call_UnitIDVLair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF6B);
		SetMemory(0x58DC68, Add, 0xFFFFFF2B);
		SetMemory(0x58DC64, Add, 0xFFFFFF6B);
		SetMemory(0x58DC6C, Add, 0xFFFFFF2B);
		SetMemory(0x58DC60, Add, 0xFFFFFF2B);
		SetMemory(0x58DC68, Add, 0xFFFFFF6B);
		SetMemory(0x58DC64, Add, 0x00000095);
		SetMemory(0x58DC6C, Add, 0x000000D5);
		Call_UnitIDVLair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000D5);
		SetMemory(0x58DC68, Add, 0x00000095);
		SetMemory(0x58DC64, Add, 0xFFFFFF6B);
		SetMemory(0x58DC6C, Add, 0xFFFFFF2B);
		SetMemory(0x58DC60, Add, 0xFFFFFF2B);
		SetMemory(0x58DC68, Add, 0xFFFFFF6B);
		SetMemory(0x58DC64, Add, 0xFFFFFF2B);
		SetMemory(0x58DC6C, Add, 0xFFFFFF6B);
		Call_UnitIDVLair
	})
DoActions(FP,{
		SetMemory(0x58DC60, Add, 0x000000D5);
		SetMemory(0x58DC68, Add, 0x00000095);
		SetMemory(0x58DC64, Add, 0x000000D5);
		SetMemory(0x58DC6C, Add, 0x00000095);
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000000);
		SetMemory(0x58DC68, Add, 0x00000040);
		SetMemory(0x58DC64, Add, 0xFFFFFFA9);
		SetMemory(0x58DC6C, Add, 0xFFFFFFE9);
		Call_UnitIDV2Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000000);
		SetMemory(0x58DC68, Add, 0xFFFFFFC0);
		SetMemory(0x58DC64, Add, 0x00000057);
		SetMemory(0x58DC6C, Add, 0x00000017);
		SetMemory(0x58DC60, Add, 0x00000020);
		SetMemory(0x58DC68, Add, 0x00000060);
		SetMemory(0x58DC64, Add, 0xFFFFFFE0);
		SetMemory(0x58DC6C, Add, 0x00000020);
		Call_UnitIDV2Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFE0);
		SetMemory(0x58DC68, Add, 0xFFFFFFA0);
		SetMemory(0x58DC64, Add, 0x00000020);
		SetMemory(0x58DC6C, Add, 0xFFFFFFE0);
		SetMemory(0x58DC60, Add, 0x00000000);
		SetMemory(0x58DC68, Add, 0x00000040);
		SetMemory(0x58DC64, Add, 0x00000017);
		SetMemory(0x58DC6C, Add, 0x00000057);
		Call_UnitIDV2Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000000);
		SetMemory(0x58DC68, Add, 0xFFFFFFC0);
		SetMemory(0x58DC64, Add, 0xFFFFFFE9);
		SetMemory(0x58DC6C, Add, 0xFFFFFFA9);
		SetMemory(0x58DC60, Add, 0xFFFFFFC1);
		SetMemory(0x58DC68, Add, 0x00000000);
		SetMemory(0x58DC64, Add, 0x00000017);
		SetMemory(0x58DC6C, Add, 0x00000057);
		Call_UnitIDV2Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000003F);
		SetMemory(0x58DC68, Add, 0x00000000);
		SetMemory(0x58DC64, Add, 0xFFFFFFE9);
		SetMemory(0x58DC6C, Add, 0xFFFFFFA9);
		SetMemory(0x58DC60, Add, 0xFFFFFFA0);
		SetMemory(0x58DC68, Add, 0xFFFFFFE0);
		SetMemory(0x58DC64, Add, 0xFFFFFFE1);
		SetMemory(0x58DC6C, Add, 0x00000020);
		Call_UnitIDV2Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000060);
		SetMemory(0x58DC68, Add, 0x00000020);
		SetMemory(0x58DC64, Add, 0x0000001F);
		SetMemory(0x58DC6C, Add, 0xFFFFFFE0);
		SetMemory(0x58DC60, Add, 0xFFFFFFC0);
		SetMemory(0x58DC68, Add, 0x00000000);
		SetMemory(0x58DC64, Add, 0xFFFFFFA9);
		SetMemory(0x58DC6C, Add, 0xFFFFFFE9);
		Call_UnitIDV2Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000040);
		SetMemory(0x58DC68, Add, 0x00000000);
		SetMemory(0x58DC64, Add, 0x00000057);
		SetMemory(0x58DC6C, Add, 0x00000017);
		SetMemory(0x58DC60, Add, 0x00000020);
		SetMemory(0x58DC68, Add, 0x00000060);
		SetMemory(0x58DC64, Add, 0xFFFFFF72);
		SetMemory(0x58DC6C, Add, 0xFFFFFFB2);
		Call_UnitIDV2Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFE0);
		SetMemory(0x58DC68, Add, 0xFFFFFFA0);
		SetMemory(0x58DC64, Add, 0x0000008E);
		SetMemory(0x58DC6C, Add, 0x0000004E);
		SetMemory(0x58DC60, Add, 0x00000060);
		SetMemory(0x58DC68, Add, 0x000000A0);
		SetMemory(0x58DC64, Add, 0xFFFFFFE0);
		SetMemory(0x58DC6C, Add, 0x00000020);
		Call_UnitIDV2Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFA0);
		SetMemory(0x58DC68, Add, 0xFFFFFF60);
		SetMemory(0x58DC64, Add, 0x00000020);
		SetMemory(0x58DC6C, Add, 0xFFFFFFE0);
		SetMemory(0x58DC60, Add, 0x00000020);
		SetMemory(0x58DC68, Add, 0x00000060);
		SetMemory(0x58DC64, Add, 0x0000004E);
		SetMemory(0x58DC6C, Add, 0x0000008E);
		Call_UnitIDV2Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFE0);
		SetMemory(0x58DC68, Add, 0xFFFFFFA0);
		SetMemory(0x58DC64, Add, 0xFFFFFFB2);
		SetMemory(0x58DC6C, Add, 0xFFFFFF72);
		SetMemory(0x58DC60, Add, 0xFFFFFFA1);
		SetMemory(0x58DC68, Add, 0xFFFFFFE1);
		SetMemory(0x58DC64, Add, 0x0000004E);
		SetMemory(0x58DC6C, Add, 0x0000008E);
		Call_UnitIDV2Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000005F);
		SetMemory(0x58DC68, Add, 0x0000001F);
		SetMemory(0x58DC64, Add, 0xFFFFFFB2);
		SetMemory(0x58DC6C, Add, 0xFFFFFF72);
		SetMemory(0x58DC60, Add, 0xFFFFFF60);
		SetMemory(0x58DC68, Add, 0xFFFFFFA0);
		SetMemory(0x58DC64, Add, 0xFFFFFFE1);
		SetMemory(0x58DC6C, Add, 0x00000020);
		Call_UnitIDV2Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000A0);
		SetMemory(0x58DC68, Add, 0x00000060);
		SetMemory(0x58DC64, Add, 0x0000001F);
		SetMemory(0x58DC6C, Add, 0xFFFFFFE0);
		SetMemory(0x58DC60, Add, 0xFFFFFFA0);
		SetMemory(0x58DC68, Add, 0xFFFFFFE0);
		SetMemory(0x58DC64, Add, 0xFFFFFF72);
		SetMemory(0x58DC6C, Add, 0xFFFFFFB2);
		Call_UnitIDV2Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000060);
		SetMemory(0x58DC68, Add, 0x00000020);
		SetMemory(0x58DC64, Add, 0x0000008E);
		SetMemory(0x58DC6C, Add, 0x0000004E);
		SetMemory(0x58DC60, Add, 0x00000040);
		SetMemory(0x58DC68, Add, 0x00000080);
		SetMemory(0x58DC64, Add, 0xFFFFFF3A);
		SetMemory(0x58DC6C, Add, 0xFFFFFF7A);
		Call_UnitIDV2Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFC0);
		SetMemory(0x58DC68, Add, 0xFFFFFF80);
		SetMemory(0x58DC64, Add, 0x000000C6);
		SetMemory(0x58DC6C, Add, 0x00000086);
		SetMemory(0x58DC60, Add, 0x000000A0);
		SetMemory(0x58DC68, Add, 0x000000E0);
		SetMemory(0x58DC64, Add, 0xFFFFFFE0);
		SetMemory(0x58DC6C, Add, 0x00000020);
		Call_UnitIDV2Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF60);
		SetMemory(0x58DC68, Add, 0xFFFFFF20);
		SetMemory(0x58DC64, Add, 0x00000020);
		SetMemory(0x58DC6C, Add, 0xFFFFFFE0);
		SetMemory(0x58DC60, Add, 0x00000040);
		SetMemory(0x58DC68, Add, 0x00000080);
		SetMemory(0x58DC64, Add, 0x00000086);
		SetMemory(0x58DC6C, Add, 0x000000C6);
		Call_UnitIDV2Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFC0);
		SetMemory(0x58DC68, Add, 0xFFFFFF80);
		SetMemory(0x58DC64, Add, 0xFFFFFF7A);
		SetMemory(0x58DC6C, Add, 0xFFFFFF3A);
		SetMemory(0x58DC60, Add, 0xFFFFFF81);
		SetMemory(0x58DC68, Add, 0xFFFFFFC1);
		SetMemory(0x58DC64, Add, 0x00000086);
		SetMemory(0x58DC6C, Add, 0x000000C6);
		Call_UnitIDV2Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000007F);
		SetMemory(0x58DC68, Add, 0x0000003F);
		SetMemory(0x58DC64, Add, 0xFFFFFF7A);
		SetMemory(0x58DC6C, Add, 0xFFFFFF3A);
		SetMemory(0x58DC60, Add, 0xFFFFFF20);
		SetMemory(0x58DC68, Add, 0xFFFFFF60);
		SetMemory(0x58DC64, Add, 0xFFFFFFE1);
		SetMemory(0x58DC6C, Add, 0x00000020);
		Call_UnitIDV2Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000E0);
		SetMemory(0x58DC68, Add, 0x000000A0);
		SetMemory(0x58DC64, Add, 0x0000001F);
		SetMemory(0x58DC6C, Add, 0xFFFFFFE0);
		SetMemory(0x58DC60, Add, 0xFFFFFF80);
		SetMemory(0x58DC68, Add, 0xFFFFFFC0);
		SetMemory(0x58DC64, Add, 0xFFFFFF3A);
		SetMemory(0x58DC6C, Add, 0xFFFFFF7A);
		Call_UnitIDV2Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000080);
		SetMemory(0x58DC68, Add, 0x00000040);
		SetMemory(0x58DC64, Add, 0x000000C6);
		SetMemory(0x58DC6C, Add, 0x00000086);
		SetMemory(0x58DC60, Add, 0x00000060);
		SetMemory(0x58DC68, Add, 0x000000A0);
		SetMemory(0x58DC64, Add, 0xFFFFFF03);
		SetMemory(0x58DC6C, Add, 0xFFFFFF43);
		Call_UnitIDV2Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFA0);
		SetMemory(0x58DC68, Add, 0xFFFFFF60);
		SetMemory(0x58DC64, Add, 0x000000FD);
		SetMemory(0x58DC6C, Add, 0x000000BD);
		SetMemory(0x58DC60, Add, 0x000000E0);
		SetMemory(0x58DC68, Add, 0x00000120);
		SetMemory(0x58DC64, Add, 0xFFFFFFE0);
		SetMemory(0x58DC6C, Add, 0x00000020);
		Call_UnitIDV2Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF20);
		SetMemory(0x58DC68, Add, 0xFFFFFEE0);
		SetMemory(0x58DC64, Add, 0x00000020);
		SetMemory(0x58DC6C, Add, 0xFFFFFFE0);
		SetMemory(0x58DC60, Add, 0x00000060);
		SetMemory(0x58DC68, Add, 0x000000A0);
		SetMemory(0x58DC64, Add, 0x000000BD);
		SetMemory(0x58DC6C, Add, 0x000000FD);
		Call_UnitIDV2Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFA0);
		SetMemory(0x58DC68, Add, 0xFFFFFF60);
		SetMemory(0x58DC64, Add, 0xFFFFFF43);
		SetMemory(0x58DC6C, Add, 0xFFFFFF03);
		SetMemory(0x58DC60, Add, 0xFFFFFF61);
		SetMemory(0x58DC68, Add, 0xFFFFFFA1);
		SetMemory(0x58DC64, Add, 0x000000BD);
		SetMemory(0x58DC6C, Add, 0x000000FD);
		Call_UnitIDV2Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000009F);
		SetMemory(0x58DC68, Add, 0x0000005F);
		SetMemory(0x58DC64, Add, 0xFFFFFF43);
		SetMemory(0x58DC6C, Add, 0xFFFFFF03);
		SetMemory(0x58DC60, Add, 0xFFFFFEE0);
		SetMemory(0x58DC68, Add, 0xFFFFFF20);
		SetMemory(0x58DC64, Add, 0xFFFFFFE1);
		SetMemory(0x58DC6C, Add, 0x00000020);
		Call_UnitIDV2Lair
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000120);
		SetMemory(0x58DC68, Add, 0x000000E0);
		SetMemory(0x58DC64, Add, 0x0000001F);
		SetMemory(0x58DC6C, Add, 0xFFFFFFE0);
		SetMemory(0x58DC60, Add, 0xFFFFFF60);
		SetMemory(0x58DC68, Add, 0xFFFFFFA0);
		SetMemory(0x58DC64, Add, 0xFFFFFF03);
		SetMemory(0x58DC6C, Add, 0xFFFFFF43);
		Call_UnitIDV2Lair
	})
DoActions(FP,{
		SetMemory(0x58DC60, Add, 0x000000A0);
		SetMemory(0x58DC68, Add, 0x00000060);
		SetMemory(0x58DC64, Add, 0x000000FD);
		SetMemory(0x58DC6C, Add, 0x000000BD);
	})

---Lair CSPlot Trigger End
Call_LoadCp()
NIfEnd()
CGunErrorCheck(3)

Trigger {
	players = {FP},
	actions = {
		Order("Men",Force2,1,Attack,2);
		PreserveTrigger();
		},
}
DoActions(FP,{SetDeathsX(CurrentPlayer,Add,1*16777216,0,0xFF000000),SetDeathsX(CurrentPlayer,SetTo,480,0,0xFFFF)})
for i = 0, 11 do
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		DeathsX(CurrentPlayer,Exactly,i*65536,0,0xFF0000);
		DeathsX(CurrentPlayer,Exactly,3*16777216,0,0xFF000000);
		},
	actions = {
		SetCDeaths(FP,Add,1,CCode(0x1001,i));
		PreserveTrigger();
		},
}
end

NIfEnd()

NIf(FP,{DeathsX(CurrentPlayer,Exactly,3*16777216,0,0xFF000000),DeathsX(CurrentPlayer,AtMost,0,0,0xFFFF)}) -- 1
-- Wave Suspend
DoActions(FP,{SetDeaths(CurrentPlayer,SetTo,0,0),MoveCp(Subtract,1*4),SetDeaths(CurrentPlayer,SetTo,0,0),MoveCp(Add,1*4)})
NIfEnd()
DoActions(FP,MoveCp(Subtract,1*4))


NIf(FP,{DeathsX(CurrentPlayer,AtMost,0,0,0x80000000),Deaths(CurrentPlayer,AtLeast,1,0)})
Call_SaveCp()
	GName = "기지 \x18Lair \x04를"
	GPoint = 50000
	Mode = 0
	GunText = "\n\n\n\n\n\n\n\n\n\x13\x08！ ！ ！ \x04적의 "..GName.." 파괴하였다!\x17 + "..GPoint.." P t s\x08 ！ ！ ！\n\n"
	Trigger {
	players = {FP},
		conditions = {
		Label(0);
			},
	actions = {
		SetDeathsX(CurrentPlayer,SetTo,0x80000000,0,0x80000000);
		SetMemory(0x6509B0, SetTo, 0);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 1);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 2);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 3);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 4);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 5);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 128);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 129);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 130);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 131);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, FP);
		SetScore(Force1,Add,GPoint,Kills);
		SetCDeaths(FP,SetTo,2,BGMType);
		PreserveTrigger();
		},
	}
Call_LoadCp()
NIfEnd()

NIfEnd() -- LAIR END
CGunErrorCheck(4)










NIf(FP,{DeathsX(CurrentPlayer,Exactly,1*0x1000,0,0xF000)}) -- HIVE
DoActions(FP,MoveCp(Add,1*4))
NIf(FP,{DeathsX(CurrentPlayer,AtLeast,1,0,0xFFFF),DeathsX(CurrentPlayer,AtMost,2,0,0xFFFF),DeathsX(CurrentPlayer,AtMost,1*16777216,0,0xFF000000)}) -- Hero SpawnSet
--Hero SpawnSet
NIfEnd()


NIf(FP,{DeathsX(CurrentPlayer,AtMost,0,0,0xFFFF),DeathsX(CurrentPlayer,AtMost,2*16777216,0,0xFF000000)}) -- AllowSpawnSet for Hive
---Hive CSPlot Trigger
NIf(FP,{DeathsX(CurrentPlayer,AtLeast,1*16777216,0,0xFF000000)}) -- 
Call_SaveCp()
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000000D);
		SetMemory(0x58DC68, Add, 0x0000004D);
		SetMemory(0x58DC64, Add, 0xFFFFFF86);
		SetMemory(0x58DC6C, Add, 0xFFFFFFC6);
		Call_UnitIDVHive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFF3);
		SetMemory(0x58DC68, Add, 0xFFFFFFB3);
		SetMemory(0x58DC64, Add, 0x0000007A);
		SetMemory(0x58DC6C, Add, 0x0000003A);
		SetMemory(0x58DC60, Add, 0x0000003A);
		SetMemory(0x58DC68, Add, 0x0000007A);
		SetMemory(0x58DC64, Add, 0xFFFFFFB3);
		SetMemory(0x58DC6C, Add, 0xFFFFFFF3);
		Call_UnitIDVHive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFC6);
		SetMemory(0x58DC68, Add, 0xFFFFFF86);
		SetMemory(0x58DC64, Add, 0x0000004D);
		SetMemory(0x58DC6C, Add, 0x0000000D);
		SetMemory(0x58DC60, Add, 0x0000003A);
		SetMemory(0x58DC68, Add, 0x0000007A);
		SetMemory(0x58DC64, Add, 0x0000000D);
		SetMemory(0x58DC6C, Add, 0x0000004D);
		Call_UnitIDVHive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFC6);
		SetMemory(0x58DC68, Add, 0xFFFFFF86);
		SetMemory(0x58DC64, Add, 0xFFFFFFF3);
		SetMemory(0x58DC6C, Add, 0xFFFFFFB3);
		SetMemory(0x58DC60, Add, 0x0000000D);
		SetMemory(0x58DC68, Add, 0x0000004D);
		SetMemory(0x58DC64, Add, 0x0000003A);
		SetMemory(0x58DC6C, Add, 0x0000007A);
		Call_UnitIDVHive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFF3);
		SetMemory(0x58DC68, Add, 0xFFFFFFB3);
		SetMemory(0x58DC64, Add, 0xFFFFFFC6);
		SetMemory(0x58DC6C, Add, 0xFFFFFF86);
		SetMemory(0x58DC60, Add, 0xFFFFFFB3);
		SetMemory(0x58DC68, Add, 0xFFFFFFF3);
		SetMemory(0x58DC64, Add, 0x0000003A);
		SetMemory(0x58DC6C, Add, 0x0000007A);
		Call_UnitIDVHive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000004D);
		SetMemory(0x58DC68, Add, 0x0000000D);
		SetMemory(0x58DC64, Add, 0xFFFFFFC6);
		SetMemory(0x58DC6C, Add, 0xFFFFFF86);
		SetMemory(0x58DC60, Add, 0xFFFFFF86);
		SetMemory(0x58DC68, Add, 0xFFFFFFC6);
		SetMemory(0x58DC64, Add, 0x0000000D);
		SetMemory(0x58DC6C, Add, 0x0000004D);
		Call_UnitIDVHive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000007A);
		SetMemory(0x58DC68, Add, 0x0000003A);
		SetMemory(0x58DC64, Add, 0xFFFFFFF3);
		SetMemory(0x58DC6C, Add, 0xFFFFFFB3);
		SetMemory(0x58DC60, Add, 0xFFFFFF86);
		SetMemory(0x58DC68, Add, 0xFFFFFFC6);
		SetMemory(0x58DC64, Add, 0xFFFFFFB3);
		SetMemory(0x58DC6C, Add, 0xFFFFFFF3);
		Call_UnitIDVHive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000007A);
		SetMemory(0x58DC68, Add, 0x0000003A);
		SetMemory(0x58DC64, Add, 0x0000004D);
		SetMemory(0x58DC6C, Add, 0x0000000D);
		SetMemory(0x58DC60, Add, 0xFFFFFFB3);
		SetMemory(0x58DC68, Add, 0xFFFFFFF3);
		SetMemory(0x58DC64, Add, 0xFFFFFF86);
		SetMemory(0x58DC6C, Add, 0xFFFFFFC6);
		Call_UnitIDVHive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000004D);
		SetMemory(0x58DC68, Add, 0x0000000D);
		SetMemory(0x58DC64, Add, 0x0000007A);
		SetMemory(0x58DC6C, Add, 0x0000003A);
		SetMemory(0x58DC60, Add, 0x0000000D);
		SetMemory(0x58DC68, Add, 0x0000004D);
		SetMemory(0x58DC64, Add, 0xFFFFFF59);
		SetMemory(0x58DC6C, Add, 0xFFFFFF99);
		Call_UnitIDVHive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFF3);
		SetMemory(0x58DC68, Add, 0xFFFFFFB3);
		SetMemory(0x58DC64, Add, 0x000000A7);
		SetMemory(0x58DC6C, Add, 0x00000067);
		SetMemory(0x58DC60, Add, 0x0000003A);
		SetMemory(0x58DC68, Add, 0x0000007A);
		SetMemory(0x58DC64, Add, 0xFFFFFF59);
		SetMemory(0x58DC6C, Add, 0xFFFFFF99);
		Call_UnitIDVHive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFC6);
		SetMemory(0x58DC68, Add, 0xFFFFFF86);
		SetMemory(0x58DC64, Add, 0x000000A7);
		SetMemory(0x58DC6C, Add, 0x00000067);
		SetMemory(0x58DC60, Add, 0x00000067);
		SetMemory(0x58DC68, Add, 0x000000A7);
		SetMemory(0x58DC64, Add, 0xFFFFFF59);
		SetMemory(0x58DC6C, Add, 0xFFFFFF99);
		Call_UnitIDVHive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF99);
		SetMemory(0x58DC68, Add, 0xFFFFFF59);
		SetMemory(0x58DC64, Add, 0x000000A7);
		SetMemory(0x58DC6C, Add, 0x00000067);
		SetMemory(0x58DC60, Add, 0x00000067);
		SetMemory(0x58DC68, Add, 0x000000A7);
		SetMemory(0x58DC64, Add, 0xFFFFFF86);
		SetMemory(0x58DC6C, Add, 0xFFFFFFC6);
		Call_UnitIDVHive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF99);
		SetMemory(0x58DC68, Add, 0xFFFFFF59);
		SetMemory(0x58DC64, Add, 0x0000007A);
		SetMemory(0x58DC6C, Add, 0x0000003A);
		SetMemory(0x58DC60, Add, 0x00000067);
		SetMemory(0x58DC68, Add, 0x000000A7);
		SetMemory(0x58DC64, Add, 0xFFFFFFB3);
		SetMemory(0x58DC6C, Add, 0xFFFFFFF3);
		Call_UnitIDVHive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF99);
		SetMemory(0x58DC68, Add, 0xFFFFFF59);
		SetMemory(0x58DC64, Add, 0x0000004D);
		SetMemory(0x58DC6C, Add, 0x0000000D);
		SetMemory(0x58DC60, Add, 0x00000067);
		SetMemory(0x58DC68, Add, 0x000000A7);
		SetMemory(0x58DC64, Add, 0x0000000D);
		SetMemory(0x58DC6C, Add, 0x0000004D);
		Call_UnitIDVHive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF99);
		SetMemory(0x58DC68, Add, 0xFFFFFF59);
		SetMemory(0x58DC64, Add, 0xFFFFFFF3);
		SetMemory(0x58DC6C, Add, 0xFFFFFFB3);
		SetMemory(0x58DC60, Add, 0x00000067);
		SetMemory(0x58DC68, Add, 0x000000A7);
		SetMemory(0x58DC64, Add, 0x0000003A);
		SetMemory(0x58DC6C, Add, 0x0000007A);
		Call_UnitIDVHive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF99);
		SetMemory(0x58DC68, Add, 0xFFFFFF59);
		SetMemory(0x58DC64, Add, 0xFFFFFFC6);
		SetMemory(0x58DC6C, Add, 0xFFFFFF86);
		SetMemory(0x58DC60, Add, 0x00000067);
		SetMemory(0x58DC68, Add, 0x000000A7);
		SetMemory(0x58DC64, Add, 0x00000067);
		SetMemory(0x58DC6C, Add, 0x000000A7);
		Call_UnitIDVHive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF99);
		SetMemory(0x58DC68, Add, 0xFFFFFF59);
		SetMemory(0x58DC64, Add, 0xFFFFFF99);
		SetMemory(0x58DC6C, Add, 0xFFFFFF59);
		SetMemory(0x58DC60, Add, 0x0000003A);
		SetMemory(0x58DC68, Add, 0x0000007A);
		SetMemory(0x58DC64, Add, 0x00000067);
		SetMemory(0x58DC6C, Add, 0x000000A7);
		Call_UnitIDVHive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFC6);
		SetMemory(0x58DC68, Add, 0xFFFFFF86);
		SetMemory(0x58DC64, Add, 0xFFFFFF99);
		SetMemory(0x58DC6C, Add, 0xFFFFFF59);
		SetMemory(0x58DC60, Add, 0x0000000D);
		SetMemory(0x58DC68, Add, 0x0000004D);
		SetMemory(0x58DC64, Add, 0x00000067);
		SetMemory(0x58DC6C, Add, 0x000000A7);
		Call_UnitIDVHive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFF3);
		SetMemory(0x58DC68, Add, 0xFFFFFFB3);
		SetMemory(0x58DC64, Add, 0xFFFFFF99);
		SetMemory(0x58DC6C, Add, 0xFFFFFF59);
		SetMemory(0x58DC60, Add, 0xFFFFFFB3);
		SetMemory(0x58DC68, Add, 0xFFFFFFF3);
		SetMemory(0x58DC64, Add, 0x00000067);
		SetMemory(0x58DC6C, Add, 0x000000A7);
		Call_UnitIDVHive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000004D);
		SetMemory(0x58DC68, Add, 0x0000000D);
		SetMemory(0x58DC64, Add, 0xFFFFFF99);
		SetMemory(0x58DC6C, Add, 0xFFFFFF59);
		SetMemory(0x58DC60, Add, 0xFFFFFF86);
		SetMemory(0x58DC68, Add, 0xFFFFFFC6);
		SetMemory(0x58DC64, Add, 0x00000067);
		SetMemory(0x58DC6C, Add, 0x000000A7);
		Call_UnitIDVHive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000007A);
		SetMemory(0x58DC68, Add, 0x0000003A);
		SetMemory(0x58DC64, Add, 0xFFFFFF99);
		SetMemory(0x58DC6C, Add, 0xFFFFFF59);
		SetMemory(0x58DC60, Add, 0xFFFFFF59);
		SetMemory(0x58DC68, Add, 0xFFFFFF99);
		SetMemory(0x58DC64, Add, 0x00000067);
		SetMemory(0x58DC6C, Add, 0x000000A7);
		Call_UnitIDVHive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000A7);
		SetMemory(0x58DC68, Add, 0x00000067);
		SetMemory(0x58DC64, Add, 0xFFFFFF99);
		SetMemory(0x58DC6C, Add, 0xFFFFFF59);
		SetMemory(0x58DC60, Add, 0xFFFFFF59);
		SetMemory(0x58DC68, Add, 0xFFFFFF99);
		SetMemory(0x58DC64, Add, 0x0000003A);
		SetMemory(0x58DC6C, Add, 0x0000007A);
		Call_UnitIDVHive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000A7);
		SetMemory(0x58DC68, Add, 0x00000067);
		SetMemory(0x58DC64, Add, 0xFFFFFFC6);
		SetMemory(0x58DC6C, Add, 0xFFFFFF86);
		SetMemory(0x58DC60, Add, 0xFFFFFF59);
		SetMemory(0x58DC68, Add, 0xFFFFFF99);
		SetMemory(0x58DC64, Add, 0x0000000D);
		SetMemory(0x58DC6C, Add, 0x0000004D);
		Call_UnitIDVHive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000A7);
		SetMemory(0x58DC68, Add, 0x00000067);
		SetMemory(0x58DC64, Add, 0xFFFFFFF3);
		SetMemory(0x58DC6C, Add, 0xFFFFFFB3);
		SetMemory(0x58DC60, Add, 0xFFFFFF59);
		SetMemory(0x58DC68, Add, 0xFFFFFF99);
		SetMemory(0x58DC64, Add, 0xFFFFFFB3);
		SetMemory(0x58DC6C, Add, 0xFFFFFFF3);
		Call_UnitIDVHive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000A7);
		SetMemory(0x58DC68, Add, 0x00000067);
		SetMemory(0x58DC64, Add, 0x0000004D);
		SetMemory(0x58DC6C, Add, 0x0000000D);
		SetMemory(0x58DC60, Add, 0xFFFFFF59);
		SetMemory(0x58DC68, Add, 0xFFFFFF99);
		SetMemory(0x58DC64, Add, 0xFFFFFF86);
		SetMemory(0x58DC6C, Add, 0xFFFFFFC6);
		Call_UnitIDVHive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000A7);
		SetMemory(0x58DC68, Add, 0x00000067);
		SetMemory(0x58DC64, Add, 0x0000007A);
		SetMemory(0x58DC6C, Add, 0x0000003A);
		SetMemory(0x58DC60, Add, 0xFFFFFF59);
		SetMemory(0x58DC68, Add, 0xFFFFFF99);
		SetMemory(0x58DC64, Add, 0xFFFFFF59);
		SetMemory(0x58DC6C, Add, 0xFFFFFF99);
		Call_UnitIDVHive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000A7);
		SetMemory(0x58DC68, Add, 0x00000067);
		SetMemory(0x58DC64, Add, 0x000000A7);
		SetMemory(0x58DC6C, Add, 0x00000067);
		SetMemory(0x58DC60, Add, 0xFFFFFF86);
		SetMemory(0x58DC68, Add, 0xFFFFFFC6);
		SetMemory(0x58DC64, Add, 0xFFFFFF59);
		SetMemory(0x58DC6C, Add, 0xFFFFFF99);
		Call_UnitIDVHive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000007A);
		SetMemory(0x58DC68, Add, 0x0000003A);
		SetMemory(0x58DC64, Add, 0x000000A7);
		SetMemory(0x58DC6C, Add, 0x00000067);
		SetMemory(0x58DC60, Add, 0xFFFFFFB3);
		SetMemory(0x58DC68, Add, 0xFFFFFFF3);
		SetMemory(0x58DC64, Add, 0xFFFFFF59);
		SetMemory(0x58DC6C, Add, 0xFFFFFF99);
		Call_UnitIDVHive
	})
DoActions(FP,{
		SetMemory(0x58DC60, Add, 0x0000004D);
		SetMemory(0x58DC68, Add, 0x0000000D);
		SetMemory(0x58DC64, Add, 0x000000A7);
		SetMemory(0x58DC6C, Add, 0x00000067);
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000058);
		SetMemory(0x58DC68, Add, 0x00000098);
		SetMemory(0x58DC64, Add, 0x00000009);
		SetMemory(0x58DC6C, Add, 0x00000049);
		Call_UnitIDV2Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFA8);
		SetMemory(0x58DC68, Add, 0xFFFFFF68);
		SetMemory(0x58DC64, Add, 0xFFFFFFF7);
		SetMemory(0x58DC6C, Add, 0xFFFFFFB7);
		SetMemory(0x58DC60, Add, 0x00000040);
		SetMemory(0x58DC68, Add, 0x00000080);
		SetMemory(0x58DC64, Add, 0x00000033);
		SetMemory(0x58DC6C, Add, 0x00000073);
		Call_UnitIDV2Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFC0);
		SetMemory(0x58DC68, Add, 0xFFFFFF80);
		SetMemory(0x58DC64, Add, 0xFFFFFFCD);
		SetMemory(0x58DC6C, Add, 0xFFFFFF8D);
		SetMemory(0x58DC60, Add, 0xFFFFFFF9);
		SetMemory(0x58DC68, Add, 0x00000038);
		SetMemory(0x58DC64, Add, 0x0000005C);
		SetMemory(0x58DC6C, Add, 0x0000009C);
		Call_UnitIDV2Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000007);
		SetMemory(0x58DC68, Add, 0xFFFFFFC8);
		SetMemory(0x58DC64, Add, 0xFFFFFFA4);
		SetMemory(0x58DC6C, Add, 0xFFFFFF64);
		SetMemory(0x58DC60, Add, 0xFFFFFFC9);
		SetMemory(0x58DC68, Add, 0x00000008);
		SetMemory(0x58DC64, Add, 0x0000005C);
		SetMemory(0x58DC6C, Add, 0x0000009C);
		Call_UnitIDV2Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000037);
		SetMemory(0x58DC68, Add, 0xFFFFFFF8);
		SetMemory(0x58DC64, Add, 0xFFFFFFA4);
		SetMemory(0x58DC6C, Add, 0xFFFFFF64);
		SetMemory(0x58DC60, Add, 0xFFFFFF81);
		SetMemory(0x58DC68, Add, 0xFFFFFFC1);
		SetMemory(0x58DC64, Add, 0x00000033);
		SetMemory(0x58DC6C, Add, 0x00000073);
		Call_UnitIDV2Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000007F);
		SetMemory(0x58DC68, Add, 0x0000003F);
		SetMemory(0x58DC64, Add, 0xFFFFFFCD);
		SetMemory(0x58DC6C, Add, 0xFFFFFF8D);
		SetMemory(0x58DC60, Add, 0xFFFFFF68);
		SetMemory(0x58DC68, Add, 0xFFFFFFA8);
		SetMemory(0x58DC64, Add, 0x00000009);
		SetMemory(0x58DC6C, Add, 0x00000049);
		Call_UnitIDV2Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000098);
		SetMemory(0x58DC68, Add, 0x00000058);
		SetMemory(0x58DC64, Add, 0xFFFFFFF7);
		SetMemory(0x58DC6C, Add, 0xFFFFFFB7);
		SetMemory(0x58DC60, Add, 0xFFFFFF68);
		SetMemory(0x58DC68, Add, 0xFFFFFFA8);
		SetMemory(0x58DC64, Add, 0xFFFFFFB7);
		SetMemory(0x58DC6C, Add, 0xFFFFFFF7);
		Call_UnitIDV2Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000098);
		SetMemory(0x58DC68, Add, 0x00000058);
		SetMemory(0x58DC64, Add, 0x00000049);
		SetMemory(0x58DC6C, Add, 0x00000009);
		SetMemory(0x58DC60, Add, 0xFFFFFF80);
		SetMemory(0x58DC68, Add, 0xFFFFFFC0);
		SetMemory(0x58DC64, Add, 0xFFFFFF8D);
		SetMemory(0x58DC6C, Add, 0xFFFFFFCD);
		Call_UnitIDV2Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000080);
		SetMemory(0x58DC68, Add, 0x00000040);
		SetMemory(0x58DC64, Add, 0x00000073);
		SetMemory(0x58DC6C, Add, 0x00000033);
		SetMemory(0x58DC60, Add, 0xFFFFFFC8);
		SetMemory(0x58DC68, Add, 0x00000007);
		SetMemory(0x58DC64, Add, 0xFFFFFF64);
		SetMemory(0x58DC6C, Add, 0xFFFFFFA4);
		Call_UnitIDV2Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000038);
		SetMemory(0x58DC68, Add, 0xFFFFFFF9);
		SetMemory(0x58DC64, Add, 0x0000009C);
		SetMemory(0x58DC6C, Add, 0x0000005C);
		SetMemory(0x58DC60, Add, 0xFFFFFFF8);
		SetMemory(0x58DC68, Add, 0x00000037);
		SetMemory(0x58DC64, Add, 0xFFFFFF64);
		SetMemory(0x58DC6C, Add, 0xFFFFFFA4);
		Call_UnitIDV2Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000008);
		SetMemory(0x58DC68, Add, 0xFFFFFFC9);
		SetMemory(0x58DC64, Add, 0x0000009C);
		SetMemory(0x58DC6C, Add, 0x0000005C);
		SetMemory(0x58DC60, Add, 0x00000040);
		SetMemory(0x58DC68, Add, 0x00000080);
		SetMemory(0x58DC64, Add, 0xFFFFFF8D);
		SetMemory(0x58DC6C, Add, 0xFFFFFFCD);
		Call_UnitIDV2Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFC0);
		SetMemory(0x58DC68, Add, 0xFFFFFF80);
		SetMemory(0x58DC64, Add, 0x00000073);
		SetMemory(0x58DC6C, Add, 0x00000033);
		SetMemory(0x58DC60, Add, 0x00000058);
		SetMemory(0x58DC68, Add, 0x00000098);
		SetMemory(0x58DC64, Add, 0xFFFFFFB7);
		SetMemory(0x58DC6C, Add, 0xFFFFFFF7);
		Call_UnitIDV2Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFA8);
		SetMemory(0x58DC68, Add, 0xFFFFFF68);
		SetMemory(0x58DC64, Add, 0x00000049);
		SetMemory(0x58DC6C, Add, 0x00000009);
		SetMemory(0x58DC60, Add, 0x00000088);
		SetMemory(0x58DC68, Add, 0x000000C8);
		SetMemory(0x58DC64, Add, 0x00000009);
		SetMemory(0x58DC6C, Add, 0x00000049);
		Call_UnitIDV2Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF78);
		SetMemory(0x58DC68, Add, 0xFFFFFF38);
		SetMemory(0x58DC64, Add, 0xFFFFFFF7);
		SetMemory(0x58DC6C, Add, 0xFFFFFFB7);
		SetMemory(0x58DC60, Add, 0x00000058);
		SetMemory(0x58DC68, Add, 0x00000098);
		SetMemory(0x58DC64, Add, 0x0000005C);
		SetMemory(0x58DC6C, Add, 0x0000009C);
		Call_UnitIDV2Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFA8);
		SetMemory(0x58DC68, Add, 0xFFFFFF68);
		SetMemory(0x58DC64, Add, 0xFFFFFFA4);
		SetMemory(0x58DC6C, Add, 0xFFFFFF64);
		SetMemory(0x58DC60, Add, 0x00000010);
		SetMemory(0x58DC68, Add, 0x00000050);
		SetMemory(0x58DC64, Add, 0x00000086);
		SetMemory(0x58DC6C, Add, 0x000000C6);
		Call_UnitIDV2Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFF0);
		SetMemory(0x58DC68, Add, 0xFFFFFFB0);
		SetMemory(0x58DC64, Add, 0xFFFFFF7A);
		SetMemory(0x58DC6C, Add, 0xFFFFFF3A);
		SetMemory(0x58DC60, Add, 0xFFFFFFB1);
		SetMemory(0x58DC68, Add, 0xFFFFFFF1);
		SetMemory(0x58DC64, Add, 0x00000086);
		SetMemory(0x58DC6C, Add, 0x000000C6);
		Call_UnitIDV2Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x0000004F);
		SetMemory(0x58DC68, Add, 0x0000000F);
		SetMemory(0x58DC64, Add, 0xFFFFFF7A);
		SetMemory(0x58DC6C, Add, 0xFFFFFF3A);
		SetMemory(0x58DC60, Add, 0xFFFFFF69);
		SetMemory(0x58DC68, Add, 0xFFFFFFA9);
		SetMemory(0x58DC64, Add, 0x0000005C);
		SetMemory(0x58DC6C, Add, 0x0000009C);
		Call_UnitIDV2Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000097);
		SetMemory(0x58DC68, Add, 0x00000057);
		SetMemory(0x58DC64, Add, 0xFFFFFFA4);
		SetMemory(0x58DC6C, Add, 0xFFFFFF64);
		SetMemory(0x58DC60, Add, 0xFFFFFF38);
		SetMemory(0x58DC68, Add, 0xFFFFFF78);
		SetMemory(0x58DC64, Add, 0x00000009);
		SetMemory(0x58DC6C, Add, 0x00000049);
		Call_UnitIDV2Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000C8);
		SetMemory(0x58DC68, Add, 0x00000088);
		SetMemory(0x58DC64, Add, 0xFFFFFFF7);
		SetMemory(0x58DC6C, Add, 0xFFFFFFB7);
		SetMemory(0x58DC60, Add, 0xFFFFFF38);
		SetMemory(0x58DC68, Add, 0xFFFFFF78);
		SetMemory(0x58DC64, Add, 0xFFFFFFB7);
		SetMemory(0x58DC6C, Add, 0xFFFFFFF7);
		Call_UnitIDV2Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000C8);
		SetMemory(0x58DC68, Add, 0x00000088);
		SetMemory(0x58DC64, Add, 0x00000049);
		SetMemory(0x58DC6C, Add, 0x00000009);
		SetMemory(0x58DC60, Add, 0xFFFFFF68);
		SetMemory(0x58DC68, Add, 0xFFFFFFA8);
		SetMemory(0x58DC64, Add, 0xFFFFFF64);
		SetMemory(0x58DC6C, Add, 0xFFFFFFA4);
		Call_UnitIDV2Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000098);
		SetMemory(0x58DC68, Add, 0x00000058);
		SetMemory(0x58DC64, Add, 0x0000009C);
		SetMemory(0x58DC6C, Add, 0x0000005C);
		SetMemory(0x58DC60, Add, 0xFFFFFFB0);
		SetMemory(0x58DC68, Add, 0xFFFFFFF0);
		SetMemory(0x58DC64, Add, 0xFFFFFF3A);
		SetMemory(0x58DC6C, Add, 0xFFFFFF7A);
		Call_UnitIDV2Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000050);
		SetMemory(0x58DC68, Add, 0x00000010);
		SetMemory(0x58DC64, Add, 0x000000C6);
		SetMemory(0x58DC6C, Add, 0x00000086);
		SetMemory(0x58DC60, Add, 0x00000010);
		SetMemory(0x58DC68, Add, 0x00000050);
		SetMemory(0x58DC64, Add, 0xFFFFFF3A);
		SetMemory(0x58DC6C, Add, 0xFFFFFF7A);
		Call_UnitIDV2Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFF0);
		SetMemory(0x58DC68, Add, 0xFFFFFFB0);
		SetMemory(0x58DC64, Add, 0x000000C6);
		SetMemory(0x58DC6C, Add, 0x00000086);
		SetMemory(0x58DC60, Add, 0x00000058);
		SetMemory(0x58DC68, Add, 0x00000098);
		SetMemory(0x58DC64, Add, 0xFFFFFF64);
		SetMemory(0x58DC6C, Add, 0xFFFFFFA4);
		Call_UnitIDV2Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFA8);
		SetMemory(0x58DC68, Add, 0xFFFFFF68);
		SetMemory(0x58DC64, Add, 0x0000009C);
		SetMemory(0x58DC6C, Add, 0x0000005C);
		SetMemory(0x58DC60, Add, 0x00000088);
		SetMemory(0x58DC68, Add, 0x000000C8);
		SetMemory(0x58DC64, Add, 0xFFFFFFB7);
		SetMemory(0x58DC6C, Add, 0xFFFFFFF7);
		Call_UnitIDV2Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF78);
		SetMemory(0x58DC68, Add, 0xFFFFFF38);
		SetMemory(0x58DC64, Add, 0x00000049);
		SetMemory(0x58DC6C, Add, 0x00000009);
		SetMemory(0x58DC60, Add, 0x000000B8);
		SetMemory(0x58DC68, Add, 0x000000F8);
		SetMemory(0x58DC64, Add, 0x00000009);
		SetMemory(0x58DC6C, Add, 0x00000049);
		Call_UnitIDV2Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF48);
		SetMemory(0x58DC68, Add, 0xFFFFFF08);
		SetMemory(0x58DC64, Add, 0xFFFFFFF7);
		SetMemory(0x58DC6C, Add, 0xFFFFFFB7);
		SetMemory(0x58DC60, Add, 0x000000A0);
		SetMemory(0x58DC68, Add, 0x000000E0);
		SetMemory(0x58DC64, Add, 0x00000033);
		SetMemory(0x58DC6C, Add, 0x00000073);
		Call_UnitIDV2Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF60);
		SetMemory(0x58DC68, Add, 0xFFFFFF20);
		SetMemory(0x58DC64, Add, 0xFFFFFFCD);
		SetMemory(0x58DC6C, Add, 0xFFFFFF8D);
		SetMemory(0x58DC60, Add, 0x00000088);
		SetMemory(0x58DC68, Add, 0x000000C8);
		SetMemory(0x58DC64, Add, 0x0000005C);
		SetMemory(0x58DC6C, Add, 0x0000009C);
		Call_UnitIDV2Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF78);
		SetMemory(0x58DC68, Add, 0xFFFFFF38);
		SetMemory(0x58DC64, Add, 0xFFFFFFA4);
		SetMemory(0x58DC6C, Add, 0xFFFFFF64);
		SetMemory(0x58DC60, Add, 0x00000070);
		SetMemory(0x58DC68, Add, 0x000000B0);
		SetMemory(0x58DC64, Add, 0x00000086);
		SetMemory(0x58DC6C, Add, 0x000000C6);
		Call_UnitIDV2Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF90);
		SetMemory(0x58DC68, Add, 0xFFFFFF50);
		SetMemory(0x58DC64, Add, 0xFFFFFF7A);
		SetMemory(0x58DC6C, Add, 0xFFFFFF3A);
		SetMemory(0x58DC60, Add, 0x00000028);
		SetMemory(0x58DC68, Add, 0x00000068);
		SetMemory(0x58DC64, Add, 0x000000AF);
		SetMemory(0x58DC6C, Add, 0x000000EF);
		Call_UnitIDV2Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFD8);
		SetMemory(0x58DC68, Add, 0xFFFFFF98);
		SetMemory(0x58DC64, Add, 0xFFFFFF51);
		SetMemory(0x58DC6C, Add, 0xFFFFFF11);
		SetMemory(0x58DC60, Add, 0xFFFFFFF9);
		SetMemory(0x58DC68, Add, 0x00000038);
		SetMemory(0x58DC64, Add, 0x000000AF);
		SetMemory(0x58DC6C, Add, 0x000000EF);
		Call_UnitIDV2Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000007);
		SetMemory(0x58DC68, Add, 0xFFFFFFC8);
		SetMemory(0x58DC64, Add, 0xFFFFFF51);
		SetMemory(0x58DC6C, Add, 0xFFFFFF11);
		SetMemory(0x58DC60, Add, 0xFFFFFFC9);
		SetMemory(0x58DC68, Add, 0x00000008);
		SetMemory(0x58DC64, Add, 0x000000AF);
		SetMemory(0x58DC6C, Add, 0x000000EF);
		Call_UnitIDV2Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000037);
		SetMemory(0x58DC68, Add, 0xFFFFFFF8);
		SetMemory(0x58DC64, Add, 0xFFFFFF51);
		SetMemory(0x58DC6C, Add, 0xFFFFFF11);
		SetMemory(0x58DC60, Add, 0xFFFFFF99);
		SetMemory(0x58DC68, Add, 0xFFFFFFD9);
		SetMemory(0x58DC64, Add, 0x000000AF);
		SetMemory(0x58DC6C, Add, 0x000000EF);
		Call_UnitIDV2Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000067);
		SetMemory(0x58DC68, Add, 0x00000027);
		SetMemory(0x58DC64, Add, 0xFFFFFF51);
		SetMemory(0x58DC6C, Add, 0xFFFFFF11);
		SetMemory(0x58DC60, Add, 0xFFFFFF51);
		SetMemory(0x58DC68, Add, 0xFFFFFF91);
		SetMemory(0x58DC64, Add, 0x00000086);
		SetMemory(0x58DC6C, Add, 0x000000C6);
		Call_UnitIDV2Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000AF);
		SetMemory(0x58DC68, Add, 0x0000006F);
		SetMemory(0x58DC64, Add, 0xFFFFFF7A);
		SetMemory(0x58DC6C, Add, 0xFFFFFF3A);
		SetMemory(0x58DC60, Add, 0xFFFFFF39);
		SetMemory(0x58DC68, Add, 0xFFFFFF79);
		SetMemory(0x58DC64, Add, 0x0000005C);
		SetMemory(0x58DC6C, Add, 0x0000009C);
		Call_UnitIDV2Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000C7);
		SetMemory(0x58DC68, Add, 0x00000087);
		SetMemory(0x58DC64, Add, 0xFFFFFFA4);
		SetMemory(0x58DC6C, Add, 0xFFFFFF64);
		SetMemory(0x58DC60, Add, 0xFFFFFF21);
		SetMemory(0x58DC68, Add, 0xFFFFFF61);
		SetMemory(0x58DC64, Add, 0x00000033);
		SetMemory(0x58DC6C, Add, 0x00000073);
		Call_UnitIDV2Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000DF);
		SetMemory(0x58DC68, Add, 0x0000009F);
		SetMemory(0x58DC64, Add, 0xFFFFFFCD);
		SetMemory(0x58DC6C, Add, 0xFFFFFF8D);
		SetMemory(0x58DC60, Add, 0xFFFFFF08);
		SetMemory(0x58DC68, Add, 0xFFFFFF48);
		SetMemory(0x58DC64, Add, 0x00000009);
		SetMemory(0x58DC6C, Add, 0x00000049);
		Call_UnitIDV2Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000F8);
		SetMemory(0x58DC68, Add, 0x000000B8);
		SetMemory(0x58DC64, Add, 0xFFFFFFF7);
		SetMemory(0x58DC6C, Add, 0xFFFFFFB7);
		SetMemory(0x58DC60, Add, 0xFFFFFF08);
		SetMemory(0x58DC68, Add, 0xFFFFFF48);
		SetMemory(0x58DC64, Add, 0xFFFFFFB7);
		SetMemory(0x58DC6C, Add, 0xFFFFFFF7);
		Call_UnitIDV2Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000F8);
		SetMemory(0x58DC68, Add, 0x000000B8);
		SetMemory(0x58DC64, Add, 0x00000049);
		SetMemory(0x58DC6C, Add, 0x00000009);
		SetMemory(0x58DC60, Add, 0xFFFFFF20);
		SetMemory(0x58DC68, Add, 0xFFFFFF60);
		SetMemory(0x58DC64, Add, 0xFFFFFF8D);
		SetMemory(0x58DC6C, Add, 0xFFFFFFCD);
		Call_UnitIDV2Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000E0);
		SetMemory(0x58DC68, Add, 0x000000A0);
		SetMemory(0x58DC64, Add, 0x00000073);
		SetMemory(0x58DC6C, Add, 0x00000033);
		SetMemory(0x58DC60, Add, 0xFFFFFF38);
		SetMemory(0x58DC68, Add, 0xFFFFFF78);
		SetMemory(0x58DC64, Add, 0xFFFFFF64);
		SetMemory(0x58DC6C, Add, 0xFFFFFFA4);
		Call_UnitIDV2Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000C8);
		SetMemory(0x58DC68, Add, 0x00000088);
		SetMemory(0x58DC64, Add, 0x0000009C);
		SetMemory(0x58DC6C, Add, 0x0000005C);
		SetMemory(0x58DC60, Add, 0xFFFFFF50);
		SetMemory(0x58DC68, Add, 0xFFFFFF90);
		SetMemory(0x58DC64, Add, 0xFFFFFF3A);
		SetMemory(0x58DC6C, Add, 0xFFFFFF7A);
		Call_UnitIDV2Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x000000B0);
		SetMemory(0x58DC68, Add, 0x00000070);
		SetMemory(0x58DC64, Add, 0x000000C6);
		SetMemory(0x58DC6C, Add, 0x00000086);
		SetMemory(0x58DC60, Add, 0xFFFFFF98);
		SetMemory(0x58DC68, Add, 0xFFFFFFD8);
		SetMemory(0x58DC64, Add, 0xFFFFFF11);
		SetMemory(0x58DC6C, Add, 0xFFFFFF51);
		Call_UnitIDV2Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000068);
		SetMemory(0x58DC68, Add, 0x00000028);
		SetMemory(0x58DC64, Add, 0x000000EF);
		SetMemory(0x58DC6C, Add, 0x000000AF);
		SetMemory(0x58DC60, Add, 0xFFFFFFC8);
		SetMemory(0x58DC68, Add, 0x00000007);
		SetMemory(0x58DC64, Add, 0xFFFFFF11);
		SetMemory(0x58DC6C, Add, 0xFFFFFF51);
		Call_UnitIDV2Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000038);
		SetMemory(0x58DC68, Add, 0xFFFFFFF9);
		SetMemory(0x58DC64, Add, 0x000000EF);
		SetMemory(0x58DC6C, Add, 0x000000AF);
		SetMemory(0x58DC60, Add, 0xFFFFFFF8);
		SetMemory(0x58DC68, Add, 0x00000037);
		SetMemory(0x58DC64, Add, 0xFFFFFF11);
		SetMemory(0x58DC6C, Add, 0xFFFFFF51);
		Call_UnitIDV2Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0x00000008);
		SetMemory(0x58DC68, Add, 0xFFFFFFC9);
		SetMemory(0x58DC64, Add, 0x000000EF);
		SetMemory(0x58DC6C, Add, 0x000000AF);
		SetMemory(0x58DC60, Add, 0x00000028);
		SetMemory(0x58DC68, Add, 0x00000068);
		SetMemory(0x58DC64, Add, 0xFFFFFF11);
		SetMemory(0x58DC6C, Add, 0xFFFFFF51);
		Call_UnitIDV2Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFFD8);
		SetMemory(0x58DC68, Add, 0xFFFFFF98);
		SetMemory(0x58DC64, Add, 0x000000EF);
		SetMemory(0x58DC6C, Add, 0x000000AF);
		SetMemory(0x58DC60, Add, 0x00000070);
		SetMemory(0x58DC68, Add, 0x000000B0);
		SetMemory(0x58DC64, Add, 0xFFFFFF3A);
		SetMemory(0x58DC6C, Add, 0xFFFFFF7A);
		Call_UnitIDV2Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF90);
		SetMemory(0x58DC68, Add, 0xFFFFFF50);
		SetMemory(0x58DC64, Add, 0x000000C6);
		SetMemory(0x58DC6C, Add, 0x00000086);
		SetMemory(0x58DC60, Add, 0x00000088);
		SetMemory(0x58DC68, Add, 0x000000C8);
		SetMemory(0x58DC64, Add, 0xFFFFFF64);
		SetMemory(0x58DC6C, Add, 0xFFFFFFA4);
		Call_UnitIDV2Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF78);
		SetMemory(0x58DC68, Add, 0xFFFFFF38);
		SetMemory(0x58DC64, Add, 0x0000009C);
		SetMemory(0x58DC6C, Add, 0x0000005C);
		SetMemory(0x58DC60, Add, 0x000000A0);
		SetMemory(0x58DC68, Add, 0x000000E0);
		SetMemory(0x58DC64, Add, 0xFFFFFF8D);
		SetMemory(0x58DC6C, Add, 0xFFFFFFCD);
		Call_UnitIDV2Hive
	})
DoActionsX(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF60);
		SetMemory(0x58DC68, Add, 0xFFFFFF20);
		SetMemory(0x58DC64, Add, 0x00000073);
		SetMemory(0x58DC6C, Add, 0x00000033);
		SetMemory(0x58DC60, Add, 0x000000B8);
		SetMemory(0x58DC68, Add, 0x000000F8);
		SetMemory(0x58DC64, Add, 0xFFFFFFB7);
		SetMemory(0x58DC6C, Add, 0xFFFFFFF7);
		Call_UnitIDV2Hive
	})
DoActions(FP,{
		SetMemory(0x58DC60, Add, 0xFFFFFF48);
		SetMemory(0x58DC68, Add, 0xFFFFFF08);
		SetMemory(0x58DC64, Add, 0x00000049);
		SetMemory(0x58DC6C, Add, 0x00000009);
	})



---Hive CSPlot Trigger End
Call_LoadCp()
NIfEnd()
Trigger {
	players = {FP},
	actions = {
		Order("Men",Force2,1,Attack,2);
		PreserveTrigger();
		},
}
DoActions(FP,{SetDeathsX(CurrentPlayer,Add,1*16777216,0,0xFF000000),SetDeathsX(CurrentPlayer,SetTo,480,0,0xFFFF)})
for i = 0, 11 do
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		DeathsX(CurrentPlayer,Exactly,i*65536,0,0xFF0000);
		DeathsX(CurrentPlayer,Exactly,3*16777216,0,0xFF000000);
		},
	actions = {
		SetCDeaths(FP,Add,1,CCode(0x1002,i));
		PreserveTrigger();
		},
}
end
NIfEnd()

CGunErrorCheck(5)
NIf(FP,{DeathsX(CurrentPlayer,Exactly,3*16777216,0,0xFF000000),DeathsX(CurrentPlayer,AtMost,0,0,0xFFFF)}) -- 1
-- Wave Suspend
DoActions(FP,{SetDeaths(CurrentPlayer,SetTo,0,0),MoveCp(Subtract,1*4),SetDeaths(CurrentPlayer,SetTo,0,0),MoveCp(Add,1*4)})
NIfEnd()
DoActions(FP,MoveCp(Subtract,1*4))
NIf(FP,{DeathsX(CurrentPlayer,AtMost,0,0,0x80000000),Deaths(CurrentPlayer,AtLeast,1,0)})
CreateUnitPolygonSafeWithPropertiesGun(FP,{Command(Force2,AtMost,3,"Stasis Cell/Prison")},37,32,32,96,30,6,1,P8,{3,103},{
			clocked = false,
			burrowed = true,
			intransit = false,
			hallucinated = false,
			invincible = false,
			hitpoint = 100,
			shield = 100,
			energy = 100,
			resource = 0,
			hanger = 0,
		})
CreateUnitPolygonSafe2Gun(FP,{Command(Force2,Exactly,2,"Stasis Cell/Prison")},37,32,32,96,30,6,1,P8,{1,88})
CreateUnitPolygonSafe2Gun(FP,{Command(Force2,Exactly,1,"Stasis Cell/Prison")},37,32,32,96,30,6,1,P8,{1,74})
CreateUnitPolygonSafe2Gun(FP,{Command(Force2,Exactly,0,"Stasis Cell/Prison")},37,32,32,96,30,6,1,P8,{1,23})
Call_SaveCp()
	GName = "기지 \x18Hive \x04를"
	GPoint = 55500
	Mode = 0
	GunText = "\n\n\n\n\n\n\n\n\n\x13\x08！ ！ ！ \x04적의 "..GName.." 파괴하였다!\x17 + "..GPoint.." P t s\x08 ！ ！ ！\n\n"
	Trigger {
	players = {FP},
		conditions = {
		Label(0);
			},
	actions = {
		SetDeathsX(CurrentPlayer,SetTo,0x80000000,0,0x80000000);
		SetMemory(0x6509B0, SetTo, 0);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 1);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 2);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 3);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 4);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 5);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 128);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 129);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 130);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 131);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, FP);
		SetScore(Force1,Add,GPoint,Kills);
		SetCDeaths(FP,SetTo,3,BGMType);
		PreserveTrigger();
		},
	}
Call_LoadCp()
NIfEnd()

NIfEnd() -- HIVE END

Trigger { -- TIMER
	players = {FP},
	conditions = {Deaths(CurrentPlayer,AtLeast,1,0);},
	actions = {
		MoveCp(Add,1*4);
		SetDeathsX(CurrentPlayer,Subtract,1,0,0xFFFF);
		MoveCp(Subtract,1*4);
		PreserveTrigger();
		}
}

NIfEnd() -- LAIR HIVE END
CGunErrorCheck(6)
NIf(FP,DeathsX(CurrentPlayer,Exactly,2*0x1000,0,0xF000)) -- BdIndex 2
DoActions(FP,{
SetMemory(0x58DC60 + 0x14*0,Add,32*7),
SetMemory(0x58DC68 + 0x14*0,Subtract,32*7),
SetMemory(0x58DC64 + 0x14*0,Add,32*7),
SetMemory(0x58DC6C + 0x14*0,Subtract,32*7),
})
CAdd(FP,0x6509B0,1)

NIf(FP,{DeathsX(CurrentPlayer,AtMost,0*16777216,0,0xFF000000),DeathsX(CurrentPlayer,AtMost,0,0,0xFF)})
Call_SaveCp()
	GName = "번데기 \x18Small Chrysalis \x04를"
	GPoint = 35000
	Mode = 0
	GunText = "\n\n\n\n\n\n\n\n\n\x13\x08！ ！ ！ \x04적의 "..GName.." 파괴하였다!\x17 + "..GPoint.." P t s\x08 ！ ！ ！\n\n"
	Trigger {
	players = {FP},
		conditions = {
		Label(0);
			},
	actions = {
		SetMemory(0x6509B0, SetTo, 0);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 1);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 2);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 3);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 4);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 5);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 128);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 129);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 130);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 131);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, FP);
		SetScore(Force1,Add,GPoint,Kills);
		SetCDeaths(FP,SetTo,3,BGMType);
		PreserveTrigger();
		},
	}
Call_LoadCp()
NIfEnd()

Trigger { -- While
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,Exactly,1,GMode);
		DeathsX(CurrentPlayer,AtMost,0,0,0xFF);
		DeathsX(CurrentPlayer,AtMost,19*16777216,0,0xFF000000);},
	actions = {
		SetDeathsX(CurrentPlayer,Add,3*256,0,0xFF00);
		CreateUnit(1,84,1,FP);
		PreserveTrigger();
		}
}

Trigger { -- While
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,Exactly,2,GMode);
		DeathsX(CurrentPlayer,AtMost,19*16777216,0,0xFF000000);
		DeathsX(CurrentPlayer,AtMost,0,0,0xFF);},
	actions = {
		SetDeathsX(CurrentPlayer,Add,6*256,0,0xFF00);
		CreateUnit(1,84,1,FP);
		PreserveTrigger();
		}
}

Trigger { -- While
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,Exactly,3,GMode);
		DeathsX(CurrentPlayer,AtMost,0,0,0xFF);
		DeathsX(CurrentPlayer,AtMost,19*16777216,0,0xFF000000);
},
	actions = {
		SetDeathsX(CurrentPlayer,Add,9*256,0,0xFF00);
		CreateUnit(1,84,1,FP);
		PreserveTrigger();
		}
}

Trigger {
	players = {FP},
	conditions = {
		Label(0);
		DeathsX(CurrentPlayer,Exactly,0,0,0xFF0000);
	},
	actions = {
		SetCVar(FP,CryUID[2],SetTo,80);
		PreserveTrigger();
	}
}
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		DeathsX(CurrentPlayer,Exactly,1*65536,0,0xFF0000);
	},
	actions = {
		SetCVar(FP,CryUID[2],SetTo,21);
		PreserveTrigger();
	}
}
NWhile(FP,{Memory(0x628438,AtLeast,1),DeathsX(CurrentPlayer,AtLeast,1*256,0,0xFF00)})


Call_SaveCp()
CRead(FP,Nextptrs,0x628438,"X",0xFFFFFF,1)
CDoActions(FP,{
	SetMemory(0x6509B0,SetTo,6);
	RunAIScriptAt("Set Unit Order To: Junk Yard Dog",1),
	SetMemory(0x6509B0,SetTo,7);
	RunAIScriptAt("Set Unit Order To: Junk Yard Dog",1),
	TCreateUnit(1,CryUID,1,_Add(_Mod(_Rand(),2),6)),
	})
CIfX(FP,CVar(FP,HondonMode[2],AtMost,0))
CDoActions(FP,{
	TSetDeaths(_Add(Nextptrs,13),SetTo,_Mod(_Rand(),4000),0),
	TSetDeathsX(_Add(Nextptrs,18),SetTo,_Mod(_Rand(),4000),0,0xFFFF)})
CelseX()
CDoActions(FP,{
	TSetDeaths(_Add(Nextptrs,13),SetTo,12000,0),
	TSetDeathsX(_Add(Nextptrs,18),SetTo,4000,0,0xFFFF)})
CIfXEnd()
Call_LoadCp()
DoActions(FP,{SetDeathsX(CurrentPlayer,Subtract,1*256,0,0xFF00)})
NWhileEnd()
Trigger { -- JYD
	players = {FP},
	conditions = {DeathsX(CurrentPlayer,AtMost,0,0,0xFF);},
	actions = {
		SetDeathsX(CurrentPlayer,SetTo,10,0,0xFF);SetDeathsX(CurrentPlayer,Add,1*16777216,0,0xFF000000);
		PreserveTrigger();
		}
}
Trigger { -- Suspend
	players = {FP},
	conditions = {
		Label(0);
		DeathsX(CurrentPlayer,AtLeast,20*16777216,0,0xFF000000);
		DeathsX(CurrentPlayer,AtMost,0,0,0xFF00);
},
	actions = {
		SetDeaths(CurrentPlayer,SetTo,0,0);
		MoveCp(Subtract,1*4);
		SetDeaths(CurrentPlayer,SetTo,0,0);
		MoveCp(Add,1*4);
		SetCDeaths(FP,Add,1,Chry_cond);
		PreserveTrigger();
		}
}
CSub(FP,0x6509B0,1)
Trigger { -- TIMER
	players = {FP},
	conditions = {Deaths(CurrentPlayer,AtLeast,1,0);},
	actions = {
		MoveCp(Add,1*4);
		SetDeathsX(CurrentPlayer,Subtract,1,0,0xFF);
		MoveCp(Subtract,1*4);
		PreserveTrigger();
		}
}
NIfEnd() -- BdIndex 2 End
NIf(FP,DeathsX(CurrentPlayer,Exactly,3*0x1000,0,0xF000)) -- BdIndex 3


CAdd(FP,0x6509B0,1)
NIf(FP,{DeathsX(CurrentPlayer,AtMost,0,0,0xFF),DeathsX(CurrentPlayer,AtMost,0,0,0xFF00)})
Call_SaveCp()
 -- 레어 파괴시 포인트, 브금, 텍스트, 포인트
	GName = "심층부 \x18Core of Galaxy \x04를"
	GPoint = 333000
	Mode = 0
	GunText = "\n\n\n\n\n\n\n\n\n\x13\x08！ ！ ！ \x04적의 "..GName.." 파괴하였다!\x17 + "..GPoint.." P t s\x08 ！ ！ ！\n\n"
	Trigger {
	players = {FP},
		conditions = {
		Label(0);
			},
	actions = {
		SetMemory(0x6509B0, SetTo, 0);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 1);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 2);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 3);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 4);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 5);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 128);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 129);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 130);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 131);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, FP);
		SetScore(Force1,Add,GPoint,Kills);
		SetCDeaths(FP,SetTo,4,BGMType);
		},
	}

Trigger {
	players = {FP},
	conditions = {
	},
	actions = {
		SetMemory(0x6509B0,SetTo,0);
		RunAIScript("Turn ON Shared Vision for Player 8");
		SetMemory(0x6509B0,SetTo,1);
		RunAIScript("Turn ON Shared Vision for Player 8");
		SetMemory(0x6509B0,SetTo,2);
		RunAIScript("Turn ON Shared Vision for Player 8");
		SetMemory(0x6509B0,SetTo,3);
		RunAIScript("Turn ON Shared Vision for Player 8");
		SetMemory(0x6509B0,SetTo,4);
		RunAIScript("Turn ON Shared Vision for Player 8");
		SetMemory(0x6509B0,SetTo,5);
		RunAIScript("Turn ON Shared Vision for Player 8");
		SetMemory(0x6509B0,SetTo,FP);
	}
}
Call_LoadCp()
NIfEnd()
DisGunUnitID = {21,80,28,86,98,27,88}
for i = 0, #DisGunUnitID - 1 do
Trigger { -- TIMER
	players = {FP},
	conditions = {
		Label(0);
		DeathsX(CurrentPlayer,Exactly,i*256,0,0xFF00);
},
	actions = {
		SetCVar(FP,UnitIDVDis[2],SetTo,DisGunUnitID[i+1]);
		PreserveTrigger();
		}
}
end
Trigger { -- TIMER2
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtMost,2,GMode);
},
	actions = {
		SetDeathsX(CurrentPlayer,Add,1*65536,0,0xFF0000);
		PreserveTrigger();
		}
}

Trigger { -- TIMER2
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtLeast,3,GMode);
},
	actions = {
		SetDeathsX(CurrentPlayer,SetTo,2*65536,0,0xFF0000);
		PreserveTrigger();
		}
}

NIf(FP,DeathsX(CurrentPlayer,AtLeast,2*65536,0,0xFF0000))


TriggerX(FP,{CVar(FP,HondonMode[2],AtMost,0)},{
	SetMemory(0x6CA010, SetTo, 1707);--배틀
	SetMemory(0x6C9F8C, SetTo, 1707);--아비터
	SetMemory(0x6C9FA4, SetTo, 1707);--스카웃

},{preserved})
TriggerX(FP,{CVar(FP,HondonMode[2],AtLeast,1)},{
	SetMemory(0x6CA010, SetTo, 12000);--배틀
	SetMemory(0x6C9F8C, SetTo, 12000);--아비터
	SetMemory(0x6C9FA4, SetTo, 12000);--스카웃

},{preserved})

CDoActions(FP,{
		SetMemory(0x662350 + (27*4), SetTo, (22000*256));
		SetMemory(0x662350 + (88*4), SetTo, (25000*256));
		SetMemory(0x662350 + (98*4), SetTo, (10000*256));
TSetMemory(0x58DC60 + 0x14*0,SetTo,_Mul(DisGun,32)),
TSetMemory(0x58DC68 + 0x14*0,SetTo,_Add(_Mul(DisGun,32),32)),
SetMemory(0x58DC64 + 0x14*0,SetTo,0),
SetMemory(0x58DC6C + 0x14*0,SetTo,32),
TCreateUnit(1,UnitIDVDis,1,P8),
Order("Men",P8,1,Attack,2),
SetMemory(0x58DC60 + 0x14*0,SetTo,0),
SetMemory(0x58DC68 + 0x14*0,SetTo,32),
TSetMemory(0x58DC64 + 0x14*0,SetTo,_Mul(DisGun,32)),
TSetMemory(0x58DC6C + 0x14*0,SetTo,_Add(_Mul(DisGun,32),32)),
TCreateUnit(1,UnitIDVDis,1,P8),
Order("Men",P8,1,Attack,2),
SetDeathsX(CurrentPlayer,Add,1,0,0xFF),
SetDeathsX(CurrentPlayer,Subtract,2*65536,0,0xFF0000),
SetCVar(FP,DisGun[2],Add,1),
		SetMemory(0x662350 + (27*4), SetTo, (30000*256));
		SetMemory(0x662350 + (88*4), SetTo, (40000*256));
		SetMemory(0x662350 + (98*4), SetTo, (20000*256));
})

TriggerX(FP,{CVar(FP,HondonMode[2],AtMost,0)},{
	SetMemory(0x6CA010, SetTo, 640);--배틀
	SetMemory(0x6C9F8C, SetTo, 1280);--아비터
	SetMemory(0x6C9FA4, SetTo, 1280);--스카웃

},{preserved})
TriggerX(FP,{CVar(FP,HondonMode[2],AtLeast,1)},{
	SetMemory(0x6CA010, SetTo, 12000);--배틀
	SetMemory(0x6C9F8C, SetTo, 12000);--아비터
	SetMemory(0x6C9FA4, SetTo, 12000);--스카웃

},{preserved})

Trigger { -- TIMER
	players = {FP},
	conditions = {
		Label(0);
		DeathsX(CurrentPlayer,AtLeast,127,0,0xFF);},
	actions = {
		SetDeathsX(CurrentPlayer,SetTo,0,0,0xFF);
		SetDeathsX(CurrentPlayer,Add,1*256,0,0xFF00);
		SetDeathsX(CurrentPlayer,SetTo,0,0,0xFF0000);
		SetCVar(FP,DisGun[2],SetTo,0);
		PreserveTrigger();
		}
}

NIfEnd()
Call_SaveCp()
Trigger { -- Suspend
	players = {FP},
	conditions = {
		Label(0);
		DeathsX(CurrentPlayer,AtLeast,(#DisGunUnitID)*256,0,0xFF00);},
	actions = {
		SetDeaths(CurrentPlayer,SetTo,0,0);
		MoveCp(Subtract,1*4);
		SetDeaths(CurrentPlayer,SetTo,0,0);
		MoveCp(Add,1*4);
		SetCDeaths(FP,Add,1,SPGunCond);
		SetMemory(0x6509B0,SetTo,0);
		RunAIScript("Turn OFF Shared Vision for Player 8");
		SetMemory(0x6509B0,SetTo,1);
		RunAIScript("Turn OFF Shared Vision for Player 8");
		SetMemory(0x6509B0,SetTo,2);
		RunAIScript("Turn OFF Shared Vision for Player 8");
		SetMemory(0x6509B0,SetTo,3);
		RunAIScript("Turn OFF Shared Vision for Player 8");
		SetMemory(0x6509B0,SetTo,4);
		RunAIScript("Turn OFF Shared Vision for Player 8");
		SetMemory(0x6509B0,SetTo,5);
		RunAIScript("Turn OFF Shared Vision for Player 8");
		SetMemory(0x6509B0,SetTo,FP);
		PreserveTrigger();
		}
}
Call_LoadCp()
CSub(FP,0x6509B0,1)
NIfEnd()
NIf(FP,DeathsX(CurrentPlayer,Exactly,4*0x1000,0,0xF000)) -- BdIndex 4
Call_SaveCp()
 -- 레어 파괴시 포인트, 브금, 텍스트, 포인트
	GName = "빅! 한 \x18Monster Kraken! \x04을"
	GPoint = 700000
	Mode = 0
	GunText = "\n\n\n\n\n\n\n\n\n\x13\x08！ ！ ！ \x04적의 "..GName.." 파괴하였다!\x17 + "..GPoint.." P t s\x08 ！ ！ ！\n\n"
	Trigger {
	players = {FP},
		conditions = {
		Label(0);
			},
	actions = {
		MoveCp(Add,4);
		SetDeathsX(CurrentPlayer,SetTo,1100*65536,0,0x7FFF0000);
		SetMemory(0x6509B0, SetTo, 0);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 1);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 2);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 3);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 4);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 5);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 128);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 129);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 130);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 131);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, FP);
		SetScore(Force1,Add,GPoint,Kills);
		SetCDeaths(FP,SetTo,4,BGMType);
		},
	}
Call_LoadCp()

Trigger { -- TIMER
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,Exactly,3,GMode);
		Deaths(CurrentPlayer,AtLeast,1,0);},
	actions = {
		MoveCp(Add,4);
		SetDeathsX(CurrentPlayer,Subtract,12*65536,0,0x7FFF0000);
		MoveCp(Subtract,4);
		PreserveTrigger();
		}
}
Trigger { -- TIMER
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,Exactly,2,GMode);
		Deaths(CurrentPlayer,AtLeast,1,0);},
	actions = {
		MoveCp(Add,4);
		SetDeathsX(CurrentPlayer,Subtract,24*65536,0,0x7FFF0000);
		MoveCp(Subtract,4);
		PreserveTrigger();
		}
}
Trigger { -- TIMER
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,Exactly,1,GMode);
		Deaths(CurrentPlayer,AtLeast,1,0);},
	actions = {
		MoveCp(Add,4);
		SetDeathsX(CurrentPlayer,Subtract,36*65536,0,0x7FFF0000);
		MoveCp(Subtract,4);
		PreserveTrigger();
		}
}

CAdd(FP,0x6509B0,1)
CDoActions(FP,{TSetDeathsX(CurrentPlayer,Add,_Mul(_Mod(_Rand(),11),256),0,0xFF00)})
Trigger { -- TIMER
	players = {FP},
	conditions = {
		Label(0);
		DeathsX(CurrentPlayer,AtLeast,90*256,0,0xFF00);},
	actions = {
		SetDeathsX(CurrentPlayer,Subtract,90*256,0,0xFF00);
		PreserveTrigger();
		}
}

Call_Gun_TempSave()
CMov(FP,Gun_W,0)
NWhile(FP,CVar(FP,Gun_W[2],AtMost,3),SetCVar(FP,Gun_W[2],Add,1))
f_Lengthdir(FP,Gun_R,_Add(_Mul(Gun_W,90),Gun_A),Gun_X,Gun_Y)
Call_Gun_LocPos()
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		--CDeaths(FP,Exactly,2,GMode);
	},
	actions = {
		SetMemory(0x6CA010, SetTo, 150);
		CreateUnit(1,27,1,FP);
		SetMemory(0x6CA010, SetTo, 640);
		SetMemory(0x58DC60 + 0x14*0,Subtract,128);
		SetMemory(0x58DC68 + 0x14*0,Add,128);
		SetMemory(0x58DC64 + 0x14*0,Subtract,128);
		SetMemory(0x58DC6C + 0x14*0,Add,128);
		Order(27,FP,1,Attack,31);
		PreserveTrigger();
	}
}
--[[
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,Exactly,3,GMode);
	},
	actions = {
		SetMemory(0x6CA010, SetTo, 150);
		CreateUnit(1,29,1,FP);
		SetMemory(0x6CA010, SetTo, 640);
		SetMemory(0x58DC60 + 0x14*0,Subtract,128);
		SetMemory(0x58DC68 + 0x14*0,Add,128);
		SetMemory(0x58DC64 + 0x14*0,Subtract,128);
		SetMemory(0x58DC6C + 0x14*0,Add,128);
		Order(29,FP,1,Attack,31);
		PreserveTrigger();
	}
}
]]
NWhileEnd()
Call_LoadCp()
Trigger { -- Suspend
	players = {FP},
	conditions = {
		Label(0);
		DeathsX(CurrentPlayer,AtMost,0,0,0x7FFF0000);
		
},
	actions = {
		MoveCp(Subtract,4);
		SetDeaths(CurrentPlayer,SetTo,0,0);
		MoveCp(Add,4);
		SetDeaths(CurrentPlayer,SetTo,0,0);
		SetCDeaths(FP,Add,1,SPGunCond);
		PreserveTrigger();
		}
}


CSub(FP,0x6509B0,1)



NIfEnd()

NIf(FP,{DeathsX(CurrentPlayer,AtLeast,5*0x1000,0,0xF000),DeathsX(CurrentPlayer,AtMost,7*0x1000,0,0xF000)}) -- BdIndex 5~7

Trigger { -- 
	players = {FP},
	conditions = {
		Label(0);
		DeathsX(CurrentPlayer,Exactly,5*0x1000,0,0xF000);
		},
	actions = {
		SetCVar(FP,Gun_UID[2],SetTo,9);
		SetCVar(FP,Gun_UID2[2],SetTo,193);
		SetCVar(FP,Gun_UID3[2],SetTo,179);
		PreserveTrigger();
		}
}

Trigger { -- 
	players = {FP},
	conditions = {
		Label(0);
		DeathsX(CurrentPlayer,Exactly,6*0x1000,0,0xF000);
		},
	actions = {
		SetCVar(FP,Gun_UID[2],SetTo,17);
		SetCVar(FP,Gun_UID2[2],SetTo,192);
		SetCVar(FP,Gun_UID3[2],SetTo,180);
		PreserveTrigger();
		}
}

NIf(FP,{DeathsX(CurrentPlayer,AtMost,0,0,0x80000000),DeathsX(CurrentPlayer,Exactly,5*0x1000,0,0xF000)})
Call_SaveCp()
	GName = "수정탑 \x18Pylon \x04을"
	GPoint = 100000
	Mode = 0
	GunText = "\n\n\n\n\n\n\n\n\n\x13\x08！ ！ ！ \x04적의 "..GName.." 파괴하였다!\x17 + "..GPoint.." P t s\x08 ！ ！ ！\n\n"
	Trigger {
	players = {FP},
		conditions = {
		Label(0);
			},
	actions = {
		SetDeathsX(CurrentPlayer,SetTo,0x80000000,0,0x80000000);
		MoveCp(Add,4);
		SetDeathsX(CurrentPlayer,SetTo,1830*0x10000,0,0x7FFF0000);
		MoveCp(Subtract,4);
		SetMemory(0x6509B0, SetTo, 0);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 1);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 2);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 3);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 4);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 5);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 128);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 129);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 130);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 131);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, FP);
		SetScore(Force1,Add,GPoint,Kills);
		SetCDeaths(FP,SetTo,3,BGMType);
		PreserveTrigger();
		},
	}
Call_LoadCp()
NIfEnd()

NIf(FP,{DeathsX(CurrentPlayer,AtMost,0,0,0x80000000),DeathsX(CurrentPlayer,Exactly,6*0x1000,0,0xF000)})
Call_SaveCp()
	GName = "보급고 \x18Supply \x04를"
	GPoint = 100000
	Mode = 0
	GunText = "\n\n\n\n\n\n\n\n\n\x13\x08！ ！ ！ \x04적의 "..GName.." 파괴하였다!\x17 + "..GPoint.." P t s\x08 ！ ！ ！\n\n"
	Trigger {
	players = {FP},
		conditions = {
		Label(0);
			},
	actions = {
		SetDeathsX(CurrentPlayer,SetTo,0x80000000,0,0x80000000);
		MoveCp(Add,4);
		SetDeathsX(CurrentPlayer,SetTo,1830*0x10000,0,0x7FFF0000);
		MoveCp(Subtract,4);
		SetMemory(0x6509B0, SetTo, 0);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 1);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 2);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 3);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 4);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 5);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 128);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 129);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 130);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 131);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, FP);
		SetScore(Force1,Add,GPoint,Kills);
		SetCDeaths(FP,SetTo,3,BGMType);
		PreserveTrigger();
		},
	}
Call_LoadCp()
NIfEnd()
NIf(FP,{DeathsX(CurrentPlayer,AtMost,0,0,0x80000000),DeathsX(CurrentPlayer,Exactly,7*0x1000,0,0xF000)})
Call_SaveCp()
	GName = "수정 집합체 \x18Formation \x04을"
	GPoint = 400000
	Mode = 0
	GunText = "\n\n\n\n\n\n\n\n\n\x13\x08！ ！ ！ \x04적의 "..GName.." 파괴하였다!\x17 + "..GPoint.." P t s\x08 ！ ！ ！\n\n"
	Trigger {
	players = {FP},
		conditions = {
		Label(0);
			},
	actions = {
		SetDeathsX(CurrentPlayer,SetTo,0x80000000,0,0x80000000);
		MoveCp(Add,4);
		SetDeathsX(CurrentPlayer,SetTo,1830*0x10000,0,0x7FFF0000);
		MoveCp(Subtract,4);
		SetMemory(0x6509B0, SetTo, 0);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 1);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 2);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 3);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 4);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 5);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 128);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 129);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 130);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 131);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, FP);
		SetScore(Force1,Add,GPoint,Kills);
		SetCDeaths(FP,SetTo,4,BGMType);
		PreserveTrigger();
		},
	}
Call_LoadCp()
NIfEnd()


Trigger { -- +-Switch
	players = {FP},
	conditions = {
		Label(0);
		DeathsX(CurrentPlayer,Exactly,0x70000000,0,0x70000000);
		},
	actions = {
		SetCDeaths(FP,SetTo,0,ScanEffT);
		PreserveTrigger();
		}
}


CAdd(FP,0x6509B0,1)

Trigger { -- +-Switch
	players = {FP},
	conditions = {
		DeathsX(CurrentPlayer,Exactly,0x80000000,0,0x80000000);
		},
	actions = {
		SetDeathsX(CurrentPlayer,Subtract,1,0,0xFF);
		PreserveTrigger();
		}
}


Trigger { -- +-Switch
	players = {FP},
	conditions = {
		DeathsX(CurrentPlayer,Exactly,0,0,0x80000000);
		},
	actions = {
		SetDeathsX(CurrentPlayer,Add,1,0,0xFF);
		PreserveTrigger();
		}
}

Trigger { -- +-SetSwitch
	players = {FP},
	conditions = {
		DeathsX(CurrentPlayer,Exactly,0,0,0xFF);
		DeathsX(CurrentPlayer,Exactly,0x80000000,0,0x80000000);
		},
	actions = {
		MoveCp(Subtract,4);
		SetDeathsX(CurrentPlayer,Add,1*0x10000000,0,0x70000000);
		MoveCp(Add,4);
		SetDeathsX(CurrentPlayer,SetTo,0,0,0x80000000);
		PreserveTrigger();
		}
}

Trigger { -- +-SetSwitch
	players = {FP},
	conditions = {
		DeathsX(CurrentPlayer,AtLeast,60,0,0xFF);
		DeathsX(CurrentPlayer,Exactly,0,0,0x80000000);
		},
	actions = {
		SetDeathsX(CurrentPlayer,SetTo,0x80000000,0,0x80000000);
		SetDeathsX(CurrentPlayer,SetTo,0,0,0x7FFF0000);
		PreserveTrigger();
		}
}


Trigger { -- Angle
	players = {FP},
	conditions = {
		},
	actions = {
		SetDeathsX(CurrentPlayer,Add,3*256,0,0xFF00);
		PreserveTrigger();
		}
}


Trigger { -- Angle
	players = {FP},
	conditions = {
		DeathsX(CurrentPlayer,AtLeast,72*256,0,0xFF00);
		},
	actions = {
		SetDeathsX(CurrentPlayer,SetTo,0*256,0,0xFF00);
		PreserveTrigger();
		}
}


Call_Gun_TempSave()

CIfX(FP,{TMemoryX(BackupCP,Exactly,0x80000000,0x80000000)})
CAdd(FP,Gun_R,Gun_V)
CDoActions(FP,{TSetMemoryX(BackupCP,Add,_Mul(Gun_V,0x10000),0x7FFF0000)})
CElseX()
CSub(FP,Gun_R,Gun_V)
CDoActions(FP,{TSetMemoryX(BackupCP,Subtract,_Mul(Gun_V,0x10000),0x7FFF0000)})
CIfXEnd()
--1830

CTrigger(FP,{
TMemoryX(_Sub(BackupCP,1),Exactly,0x70000000,0x70000000)},
{SetCDeaths(FP,SetTo,0,ScanEffT)},1)

NIf(FP,CDeaths(FP,AtMost,0,ScanEffT))
CMov(FP,Gun_W,0)
NWhile(FP,CVar(FP,Gun_W[2],AtMost,4),SetCVar(FP,Gun_W[2],Add,1))

f_Lengthdir(FP,_Div(Gun_R,7),_Add(Gun_A,_Mul(Gun_W,72)),Gun_X,Gun_Y)
CDiv(FP,Gun_Y,2)
Call_Gun_LocPos()

Nif(FP,{
TMemoryX(_Sub(BackupCP,1),AtLeast,5*0x1000,0xF000),
TMemoryX(_Sub(BackupCP,1),AtMost,6*0x1000,0xF000)})
CDoActions(FP,{
	
		SetMemoryX(0x666458, SetTo, 391,0xFFFF);
		TSetMemoryX(0x669FAC, SetTo, _Mul(Gun_UID,16777216),0xFF000000);
CreateUnit(1,33,1,FP)
})
CTrigger(FP,{
TMemoryX(_Sub(BackupCP,1),Exactly,0x70000000,0x70000000),
CDeaths(FP,AtLeast,3,GMode)},
{
SetMemory(0x66F050, SetTo, 160),
TCreateUnit(15,Gun_UID3,1,FP),
SetMemory(0x66F050, SetTo, 87),

SetMemory(0x58DC60 + 0x14*0,Subtract,128),
SetMemory(0x58DC68 + 0x14*0,Add,128),
SetMemory(0x58DC64 + 0x14*0,Subtract,128),
SetMemory(0x58DC6C + 0x14*0,Add,128),
SetMemory(0x6509B0,SetTo,7),RunAIScriptAt("Set Unit Order To: Junk Yard Dog",1)},1)


NIfEnd()

Nif(FP,{
TMemoryX(_Sub(BackupCP,1),Exactly,7*0x1000,0xF000)})
DoActions(FP,{
		SetMemoryX(0x666458, SetTo, 391,0xFFFF);
		SetMemoryX(0x669FAC, SetTo, 9*16777216,0xFF000000);
CreateUnit(1,33,1,FP)
})


f_Lengthdir(FP,_Div(Gun_R,7),_Add(_Add(Gun_A,36),_Mul(Gun_W,72)),Gun_X,Gun_Y)
CDiv(FP,Gun_Y,2)
Call_Gun_LocPos()
DoActions(FP,{
		SetMemoryX(0x666458, SetTo, 391,0xFFFF);
		SetMemoryX(0x669FAC, SetTo, 17*16777216,0xFF000000);
CreateUnit(1,33,1,FP)
})
NIfEnd()
NWhileEnd()
NIfEnd()

--]]
NIf(FP,{
TMemoryX(_Sub(BackupCP,1),Exactly,0x70000000,0x70000000),
CDeaths(FP,AtLeast,2,GMode)})
CTrigger(FP,{
TMemoryX(_Sub(BackupCP,1),AtLeast,5*0x1000,0xF000),
TMemoryX(_Sub(BackupCP,1),AtMost,6*0x1000,0xF000)},
{
TSetMemory(0x58DC60 + 0x14*0,SetTo,Gun_TempPosX),
TSetMemory(0x58DC68 + 0x14*0,SetTo,Gun_TempPosX),
TSetMemory(0x58DC64 + 0x14*0,SetTo,Gun_TempPosY),
TSetMemory(0x58DC6C + 0x14*0,SetTo,Gun_TempPosY),
TCreateUnit(1,Gun_UID2,1,FP)},1)

NWhile(FP,CVar(FP,Gun_R[2],AtLeast,15),SetCVar(FP,Gun_R[2],Subtract,140))
CMov(FP,Gun_W,0)
NWhile(FP,CVar(FP,Gun_W[2],AtMost,4),SetCVar(FP,Gun_W[2],Add,1))
f_Lengthdir(FP,_Div(Gun_R,7),_Add(Gun_A,_Mul(Gun_W,72)),Gun_X,Gun_Y)
CDiv(FP,Gun_Y,2)
Call_Gun_LocPos()
Nif(FP,{
TMemoryX(_Sub(BackupCP,1),AtLeast,5*0x1000,0xF000),
TMemoryX(_Sub(BackupCP,1),AtMost,6*0x1000,0xF000)})
CDoActions(FP,{
		SetMemoryX(0x666458, SetTo, 391,0xFFFF);
		TSetMemoryX(0x669FAC, SetTo, _Mul(Gun_UID,16777216),0xFF000000);
CreateUnit(1,33,1,FP)
})
NIfEnd()
Nif(FP,{
TMemoryX(_Sub(BackupCP,1),Exactly,7*0x1000,0xF000)})
DoActions(FP,{
		SetMemoryX(0x666458, SetTo, 391,0xFFFF);
		SetMemoryX(0x669FAC, SetTo, 9*16777216,0xFF000000);
CreateUnit(1,33,1,FP)
})
f_Lengthdir(FP,_Div(Gun_R,7),_Add(_Add(Gun_A,36),_Mul(Gun_W,72)),Gun_X,Gun_Y)
CDiv(FP,Gun_Y,2)
Call_Gun_LocPos()
DoActions(FP,{
		SetMemoryX(0x666458, SetTo, 391,0xFFFF);
		SetMemoryX(0x669FAC, SetTo, 17*16777216,0xFF000000);
CreateUnit(1,33,1,FP)
})
NIfEnd()

NWhileEnd()
NWhileEnd()



NIfEnd()
Call_LoadCp()
CSub(FP,0x6509B0,1)
NIf(FP,DeathsX(CurrentPlayer,Exactly,0x70000000,0,0x70000000))
Call_SaveCp()
Trigger { -- Suspend
	players = {FP},
	conditions = {
		Label(0);
		DeathsX(CurrentPlayer,Exactly,5*0x1000,0,0xF000);
		},
	actions = {
		SetDeaths(CurrentPlayer,SetTo,0,0);
		MoveCp(Add,4);
		SetDeaths(CurrentPlayer,SetTo,0,0);
		MoveCp(Subtract,4);
		SetMemory(0x6509B0,SetTo,0);
		PlayWAV("staredit\\wav\\H-020.wav");
		PlayWAV("staredit\\wav\\H-020.wav");
		PlayWAV("staredit\\wav\\H-020.wav");
		SetMemory(0x6509B0,SetTo,1);
		PlayWAV("staredit\\wav\\H-020.wav");
		PlayWAV("staredit\\wav\\H-020.wav");
		PlayWAV("staredit\\wav\\H-020.wav");
		SetMemory(0x6509B0,SetTo,2);
		PlayWAV("staredit\\wav\\H-020.wav");
		PlayWAV("staredit\\wav\\H-020.wav");
		PlayWAV("staredit\\wav\\H-020.wav");
		SetMemory(0x6509B0,SetTo,3);
		PlayWAV("staredit\\wav\\H-020.wav");
		PlayWAV("staredit\\wav\\H-020.wav");
		PlayWAV("staredit\\wav\\H-020.wav");
		SetMemory(0x6509B0,SetTo,4);
		PlayWAV("staredit\\wav\\H-020.wav");
		PlayWAV("staredit\\wav\\H-020.wav");
		PlayWAV("staredit\\wav\\H-020.wav");
		SetMemory(0x6509B0,SetTo,5);
		PlayWAV("staredit\\wav\\H-020.wav");
		PlayWAV("staredit\\wav\\H-020.wav");
		PlayWAV("staredit\\wav\\H-020.wav");
		SetMemory(0x6509B0,SetTo,128);
		PlayWAV("staredit\\wav\\H-020.wav");
		PlayWAV("staredit\\wav\\H-020.wav");
		PlayWAV("staredit\\wav\\H-020.wav");
		SetMemory(0x6509B0,SetTo,129);
		PlayWAV("staredit\\wav\\H-020.wav");
		PlayWAV("staredit\\wav\\H-020.wav");
		PlayWAV("staredit\\wav\\H-020.wav");
		SetMemory(0x6509B0,SetTo,130);
		PlayWAV("staredit\\wav\\H-020.wav");
		PlayWAV("staredit\\wav\\H-020.wav");
		PlayWAV("staredit\\wav\\H-020.wav");
		SetMemory(0x6509B0,SetTo,131);
		PlayWAV("staredit\\wav\\H-020.wav");
		PlayWAV("staredit\\wav\\H-020.wav");
		PlayWAV("staredit\\wav\\H-020.wav");
		SetMemory(0x6509B0,SetTo,FP);
		SetCDeaths(FP,Add,1,Py_Cond);
		PreserveTrigger();
		}
}
Call_LoadCp()
Trigger { -- Suspend
	players = {FP},
	conditions = {
		Label(0);
		DeathsX(CurrentPlayer,Exactly,6*0x1000,0,0xF000);
		},
	actions = {
		SetDeaths(CurrentPlayer,SetTo,0,0);
		MoveCp(Add,4);
		SetDeaths(CurrentPlayer,SetTo,0,0);
		MoveCp(Subtract,4);
		SetMemory(0x6509B0,SetTo,0);
		PlayWAV("staredit\\wav\\H-020.wav");
		PlayWAV("staredit\\wav\\H-020.wav");
		PlayWAV("staredit\\wav\\H-020.wav");
		SetMemory(0x6509B0,SetTo,1);
		PlayWAV("staredit\\wav\\H-020.wav");
		PlayWAV("staredit\\wav\\H-020.wav");
		PlayWAV("staredit\\wav\\H-020.wav");
		SetMemory(0x6509B0,SetTo,2);
		PlayWAV("staredit\\wav\\H-020.wav");
		PlayWAV("staredit\\wav\\H-020.wav");
		PlayWAV("staredit\\wav\\H-020.wav");
		SetMemory(0x6509B0,SetTo,3);
		PlayWAV("staredit\\wav\\H-020.wav");
		PlayWAV("staredit\\wav\\H-020.wav");
		PlayWAV("staredit\\wav\\H-020.wav");
		SetMemory(0x6509B0,SetTo,4);
		PlayWAV("staredit\\wav\\H-020.wav");
		PlayWAV("staredit\\wav\\H-020.wav");
		PlayWAV("staredit\\wav\\H-020.wav");
		SetMemory(0x6509B0,SetTo,5);
		PlayWAV("staredit\\wav\\H-020.wav");
		PlayWAV("staredit\\wav\\H-020.wav");
		PlayWAV("staredit\\wav\\H-020.wav");
		SetMemory(0x6509B0,SetTo,128);
		PlayWAV("staredit\\wav\\H-020.wav");
		PlayWAV("staredit\\wav\\H-020.wav");
		PlayWAV("staredit\\wav\\H-020.wav");
		SetMemory(0x6509B0,SetTo,129);
		PlayWAV("staredit\\wav\\H-020.wav");
		PlayWAV("staredit\\wav\\H-020.wav");
		PlayWAV("staredit\\wav\\H-020.wav");
		SetMemory(0x6509B0,SetTo,130);
		PlayWAV("staredit\\wav\\H-020.wav");
		PlayWAV("staredit\\wav\\H-020.wav");
		PlayWAV("staredit\\wav\\H-020.wav");
		SetMemory(0x6509B0,SetTo,131);
		PlayWAV("staredit\\wav\\H-020.wav");
		PlayWAV("staredit\\wav\\H-020.wav");
		PlayWAV("staredit\\wav\\H-020.wav");
		SetMemory(0x6509B0,SetTo,FP);
		SetCDeaths(FP,Add,1,Sup_Cond);
		PreserveTrigger();
		}
}
Call_LoadCp()
Trigger { -- Suspend
	players = {FP},
	conditions = {
		Label(0);
		DeathsX(CurrentPlayer,Exactly,7*0x1000,0,0xF000);
		},
	actions = {
		SetDeaths(CurrentPlayer,SetTo,0,0);
		MoveCp(Add,4);
		SetDeaths(CurrentPlayer,SetTo,0,0);
		MoveCp(Subtract,4);
		SetMemory(0x6509B0,SetTo,0);
		PlayWAV("staredit\\wav\\seeya.ogg");
		PlayWAV("staredit\\wav\\seeya.ogg");
		PlayWAV("staredit\\wav\\seeya.ogg");
		SetMemory(0x6509B0,SetTo,1);
		PlayWAV("staredit\\wav\\seeya.ogg");
		PlayWAV("staredit\\wav\\seeya.ogg");
		PlayWAV("staredit\\wav\\seeya.ogg");
		SetMemory(0x6509B0,SetTo,2);
		PlayWAV("staredit\\wav\\seeya.ogg");
		PlayWAV("staredit\\wav\\seeya.ogg");
		PlayWAV("staredit\\wav\\seeya.ogg");
		SetMemory(0x6509B0,SetTo,3);
		PlayWAV("staredit\\wav\\seeya.ogg");
		PlayWAV("staredit\\wav\\seeya.ogg");
		PlayWAV("staredit\\wav\\seeya.ogg");
		SetMemory(0x6509B0,SetTo,4);
		PlayWAV("staredit\\wav\\seeya.ogg");
		PlayWAV("staredit\\wav\\seeya.ogg");
		PlayWAV("staredit\\wav\\seeya.ogg");
		SetMemory(0x6509B0,SetTo,5);
		PlayWAV("staredit\\wav\\seeya.ogg");
		PlayWAV("staredit\\wav\\seeya.ogg");
		PlayWAV("staredit\\wav\\seeya.ogg");
		SetMemory(0x6509B0,SetTo,128);
		PlayWAV("staredit\\wav\\seeya.ogg");
		PlayWAV("staredit\\wav\\seeya.ogg");
		PlayWAV("staredit\\wav\\seeya.ogg");
		SetMemory(0x6509B0,SetTo,129);
		PlayWAV("staredit\\wav\\seeya.ogg");
		PlayWAV("staredit\\wav\\seeya.ogg");
		PlayWAV("staredit\\wav\\seeya.ogg");
		SetMemory(0x6509B0,SetTo,130);
		PlayWAV("staredit\\wav\\seeya.ogg");
		PlayWAV("staredit\\wav\\seeya.ogg");
		PlayWAV("staredit\\wav\\seeya.ogg");
		SetMemory(0x6509B0,SetTo,131);
		PlayWAV("staredit\\wav\\seeya.ogg");
		PlayWAV("staredit\\wav\\seeya.ogg");
		PlayWAV("staredit\\wav\\seeya.ogg");
		SetMemory(0x6509B0,SetTo,FP);
		SetCDeaths(FP,Add,1,FormCon);
		Order("Men",Force2,64,Attack,2);
		KillUnitAt(1,125,47,Force1);
		PreserveTrigger();
		}
}
Call_LoadCp()
NIfEnd()
NIfEnd()

NIf(FP,DeathsX(CurrentPlayer,Exactly,8*0x1000,0,0xF000)) -- BdIndex 8
NIf(FP,{DeathsX(CurrentPlayer,AtMost,0,0,0x80000000)})
Call_SaveCp()
	GName = "거대 고치 \x18Overmind Cocoon \x04을"
	GPoint = 300000
	Mode = 0
	GunText = "\n\n\n\n\n\n\n\n\n\x13\x08！ ！ ！ \x04적의 "..GName.." 파괴하였다!\x17 + "..GPoint.." P t s\x08 ！ ！ ！\n\n"
	Trigger {
	players = {FP},
		conditions = {
		Label(0);
			},
	actions = {
		KillUnitAt(All,"Sunken Colony",1,Force2);
		KillUnitAt(All,"Spore Colony",1,Force2);
		SetDeathsX(CurrentPlayer,SetTo,1*0x80000000,0,0x80000000);
		SetMemory(0x6509B0, SetTo, 0);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 1);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 2);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 3);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 4);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 5);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 128);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 129);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 130);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 131);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, FP);
		SetScore(Force1,Add,GPoint,Kills);
		SetCDeaths(FP,SetTo,4,BGMType);
		PreserveTrigger();
		},
	}
Call_LoadCp()
NIfEnd()

Trigger { -- TIMER
	players = {FP},
	conditions = {
		Label(0);
		Deaths(CurrentPlayer,AtLeast,1,0);
		},
	actions = {
		MoveCp(Add,4);
		SetDeathsX(CurrentPlayer,Add,1,0,0xFFFF);
		MoveCp(Subtract,4);
		PreserveTrigger();
		}
}
CAdd(FP,0x6509B0,1)
DoActions(FP,{
SetMemory(0x58DC60 + 0x14*0,Subtract,32*8),
SetMemory(0x58DC68 + 0x14*0,Add,32*8),
SetMemory(0x58DC64 + 0x14*0,Subtract,32*8),
SetMemory(0x58DC6C + 0x14*0,Add,32*8),
})

for i = 1, 3 do
Trigger { -- 
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,Exactly,0,CocoonGunCon);
		DeathsX(CurrentPlayer,AtLeast,10,0,0xFFFF);
},
	actions = {
		SetDeathsX(CurrentPlayer,SetTo,0,0,0xFFFF);
		SetCDeaths(FP,Add,1,CocoonLaunch);
		CreateUnit(1,84,1,FP);
		PreserveTrigger();
		}
}

Trigger { -- 
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,Exactly,i,GMode);
		Bring(11, AtLeast,(200*i)+1,"Men",30);
},
	actions = {
		SetCDeaths(FP,Add,1,CocoonGunCon);
		Order(80,Force2,64,Move,30);
		Order(21,Force2,64,Move,30);
		}
}
end

Trigger { -- 
	players = {FP},
	conditions = {
		DeathsX(CurrentPlayer,AtMost,480,0,0xFFFF);
		},
	actions = {
		SetMemoryX(0x666458, SetTo, 391,0xFFFF);
		SetMemoryX(0x669BC4, SetTo, 3*16777216,0xFF000000);
		CreateUnit(1,33,26,FP);
		CreateUnit(1,33,27,FP);
		CreateUnit(1,33,28,FP);
		CreateUnit(1,33,29,FP);
		Order(80,11,26,Move,26);
		Order(80,11,27,Move,27);
		Order(80,11,28,Move,28);
		Order(80,11,29,Move,29);
		Order(21,11,26,Move,26);
		Order(21,11,27,Move,27);
		Order(21,11,28,Move,28);
		Order(21,11,29,Move,29);
		PreserveTrigger();
		}
}
Loc_Extend = {}
Cocoon_JYD = {}
Set_Inv = {}
for i = 0, 3 do
table.insert(Loc_Extend,SetMemory(0x58DC60 + 0x14*(25+i),Subtract,32*8))
table.insert(Loc_Extend,SetMemory(0x58DC68 + 0x14*(25+i),Add,32*8))
table.insert(Loc_Extend,SetMemory(0x58DC64 + 0x14*(25+i),Subtract,32*8))
table.insert(Loc_Extend,SetMemory(0x58DC6C + 0x14*(25+i),Add,32*8))
table.insert(Cocoon_JYD,RunAIScriptAt("Set Unit Order To: Junk Yard Dog",26+i))

end
table.insert(Set_Inv,SetInvincibility(Disable,80,Force2,64))
table.insert(Set_Inv,SetInvincibility(Disable,21,Force2,64))
Trigger { -- 
	players = {FP},
	conditions = {
		},
	actions = {
		Loc_Extend
		}
}
Trigger { -- 
	players = {FP},
	conditions = {
		DeathsX(CurrentPlayer,Exactly,580,0,0xFFFF);
		},
	actions = {
		Set_Inv
		}
}
Trigger { -- 
	players = {FP},
	conditions = {
		Label(0);
		DeathsX(CurrentPlayer,Exactly,479,0,0xFFFF);
		},
	actions = {
		SetCDeaths(FP,Add,1000,TGiveforCoCoon);
		}
}
Call_SaveCP()

NIf(FP,DeathsX(CurrentPlayer,Exactly,481+(10*0),0,0xFFFF))
DoActions(FP,{
	SetMemory(0x6509B0,SetTo,6),
	SetAllianceStatus(force1,Ally);
	SetMemory(0x6509B0,SetTo,7),
	SetAllianceStatus(force1,Ally);
})
Call_LoadCP()
NIfEnd()
for i = 0, 9 do
NIf(FP,DeathsX(CurrentPlayer,Exactly,481+(10*i),0,0xFFFF))
DoActions(FP,{
		SetMemory(0x6509B0,SetTo,6),
		Cocoon_JYD,
		SetMemory(0x6509B0,SetTo,7),
		Cocoon_JYD})
Call_LoadCP()
NIfEnd()
end
NIf(FP,DeathsX(CurrentPlayer,Exactly,481+(10*9),0,0xFFFF))
DoActions(FP,{
	SetMemory(0x6509B0,SetTo,6),
	SetAllianceStatus(force1,Enemy);
	SetMemory(0x6509B0,SetTo,7),
	SetAllianceStatus(force1,Enemy);
})
Call_LoadCP()
NIfEnd()

NIf(FP,{DeathsX(CurrentPlayer,AtLeast,482,0,0xFFFF),DeathsX(CurrentPlayer,AtMost,579,0,0xFFFF),CVar(FP,CurrentChunk[2],AtMost,63)})

CAdd(FP,CurrentChunk,1)
CDiv(FP,CCY,CurrentChunk,8)
CMod(FP,CCX,CurrentChunk,8)
CDoActions(FP,{
TSetMemory(0x58DC60 + 0x14*47,SetTo,_Mul(CCX,512)),
TSetMemory(0x58DC68 + 0x14*47,SetTo,_Mul(_Add(CCX,1),512)),
TSetMemory(0x58DC64 + 0x14*47,SetTo,_Mul(CCY,512)),
TSetMemory(0x58DC6C + 0x14*47,SetTo,_Mul(_Add(CCY,1),512)),
})
NIf(FP,CVar(FP,CurrentChunk[2],AtMost,62))
UnitReadX(FP,Force1,"Men",48,V(0x400+63))
CMov(FP,VArr(CocoonVarr,CurrentChunk),V(0x400+63))
NIfEnd()


NIfEnd()

NIf(FP,{DeathsX(CurrentPlayer,AtLeast,580,0,0xFFFF)})



CMov(FP,ChunkChecksum,1)
NWhile(FP,CVar(FP,ChunkChecksum[2],AtLeast,1))
CMov(FP,ChunkChecksum,0)

for i = 0, 62 do
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CVar(FP,0x400+i,AtLeast,1);
		--CVAar(VArr(LocChunkVArr,i),AtLeast,1);
	},
	actions = {
		--SetCVAar(VArr(LocChunkVArr,i),Subtract,1);
		SetCVar(FP,0x400+i,Subtract,1);
		SetCVar(FP,CurrentChunk[2],SetTo,i);
		SetCVar(FP,ChunkChecksum[2],Add,1);
		PreserveTrigger();
	}
}
end
NWhileEnd()
CDiv(FP,CCY,CurrentChunk,8)
CMod(FP,CCX,CurrentChunk,8)

CDoActions(FP,{
TSetMemory(0x58DC60 + 0x14*0,SetTo,_Mul(CCX,512)),
TSetMemory(0x58DC68 + 0x14*0,SetTo,_Mul(_Add(CCX,1),512)),
TSetMemory(0x58DC64 + 0x14*0,SetTo,_Mul(CCY,512)),
TSetMemory(0x58DC6C + 0x14*0,SetTo,_Mul(_Add(CCY,1),512)),
Order(80,force2,64,Attack,1),
Order(21,force2,64,Attack,1),
})
Trigger { -- Suspend
	players = {FP},
	conditions = {
		Label(0)
	},
	actions = {
		MoveCp(Subtract,4);
		SetDeaths(CurrentPlayer,SetTo,0,0);
		MoveCp(Add,4);
		SetDeaths(CurrentPlayer,SetTo,0,0);
		SetCDeaths(FP,Add,1,SPGunCond);
		SetCDeaths(FP,Add,1,OverCocooncomp);
		PreserveTrigger();
		}
}
NIfEnd()
CSub(FP,0x6509B0,1)
NIfEnd()

NIf(FP,DeathsX(CurrentPlayer,Exactly,9*0x1000,0,0xF000)) -- BdIndex 9
NIf(FP,{DeathsX(CurrentPlayer,AtMost,0,0,0x80000000)})
Call_SaveCp()
	GName = "사원 \x18Xel'Naga \x04를"
	GPoint = 250000
	Mode = 0
	GunText = "\n\n\n\n\n\n\n\n\n\x13\x08！ ！ ！ \x04적의 "..GName.." 파괴하였다!\x17 + "..GPoint.." P t s\x08 ！ ！ ！\n\n"
	Trigger {
	players = {FP},
		conditions = {
		Label(0);
			},
	actions = {
		SetDeathsX(CurrentPlayer,SetTo,1*0x80000000,0,0x80000000);
		SetMemory(0x6509B0, SetTo, 0);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 1);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 2);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 3);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 4);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 5);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 128);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 129);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 130);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 131);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, FP);
		SetScore(Force1,Add,GPoint,Kills);
		SetCDeaths(FP,SetTo,4,BGMType);
		PreserveTrigger();
		},
	}
Call_LoadCp()
NIfEnd()

Trigger { -- TIMER
	players = {FP},
	conditions = {
		Label(0);
		Deaths(CurrentPlayer,AtLeast,1,0);},
	actions = {
		MoveCp(Add,4);
		SetDeathsX(CurrentPlayer,Add,1*256,0,0xFF00);
		MoveCp(Subtract,4);
		PreserveTrigger();
		}
}
CAdd(FP,0x6509B0,1)
for i =0, 4 do
Trigger { -- 
	players = {FP},
	conditions = {
		Label(0);
		DeathsX(CurrentPlayer,AtLeast,(i*8)*256,0,0xFF00);
		DeathsX(CurrentPlayer,Exactly,i,0,0xFF);
},
	actions = {
		SetDeathsX(CurrentPlayer,SetTo,0,0,0xFF00);
		SetDeathsX(CurrentPlayer,Add,1,0,0xFF);
		
		PreserveTrigger();
		}
}
end

Call_Gun_TempSave()

f_Lengthdir(FP,_Mul(Gun_V,32*3),_Mul(Gun_A,_Div(_Mov(360),_Mul(Gun_V,8))),Gun_X,Gun_Y)
CDiv(FP,Gun_Y,2)
Call_Gun_LocPos()
DoActions(FP,{
SetMemory(0x6CA010, SetTo, 0),
CreateUnit(1,29,1,FP),
})

CIfX(FP,CVar(FP,HondonMode[2],AtMost,0))
CDoActions(FP,{
	SetMemory(0x6CA010, SetTo, 640)})
CelseX()
CDoActions(FP,{
	SetMemory(0x6CA010, SetTo, 12000)})
CIfXEnd()


Call_LoadCp()
for i = 1, 3 do
Trigger { -- Suspend
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,Exactly,i,GMode);
		DeathsX(CurrentPlayer,AtLeast,((8*i)+7)*256,0,0xFF00);
		DeathsX(CurrentPlayer,AtLeast,i+1,0,0xFF);
		},
	actions = {
		MoveCp(Subtract,4);
		SetDeaths(CurrentPlayer,SetTo,0,0);
		MoveCp(Add,4);
		SetDeaths(CurrentPlayer,SetTo,0,0);
		SetCDeaths(FP,Add,1,SPGunCond);
		PreserveTrigger();
		}
}
end
CSub(FP,0x6509B0,1)

NIfEnd()

NIf(FP,DeathsX(CurrentPlayer,Exactly,10*0x1000,0,0xF000)) -- BdIndex 10
NIf(FP,{DeathsX(CurrentPlayer,AtMost,0,0,0x80000000)})
Call_SaveCp()
	GName = "완전체 \x18DaGGoTh \x04를"
	GPoint = 400000
	Mode = 0
	GunText = "\n\n\n\n\n\n\n\n\n\x13\x08！ ！ ！ \x04적의 "..GName.." 파괴하였다!\x17 + "..GPoint.." P t s\x08 ！ ！ ！\n\n"
	Trigger {
	players = {FP},
		conditions = {
		Label(0);
			},
	actions = {
		SetDeathsX(CurrentPlayer,SetTo,1*0x80000000,0,0x80000000);
		SetMemory(0x6509B0, SetTo, 0);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 1);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 2);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 3);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 4);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 5);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 128);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 129);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 130);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 131);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, FP);
		SetScore(Force1,Add,GPoint,Kills);
		SetCDeaths(FP,SetTo,4,BGMType);
		PreserveTrigger();
		},
	}
Call_LoadCp()
NIfEnd()

Trigger { -- TIMER
	players = {FP},
	conditions = {
		Label(0);
		Deaths(CurrentPlayer,AtLeast,1,0);},
	actions = {
		MoveCp(Add,4);
		SetDeathsX(CurrentPlayer,Add,1,0,0xFF);
		MoveCp(Subtract,4);
		PreserveTrigger();
		}
}
CAdd(FP,0x6509B0,1)

Call_Gun_TempSave()

CMov(FP,Gun_W,0)
NWhile(FP,CVar(FP,Gun_W[2],AtMost,3),SetCVar(FP,Gun_W[2],Add,1))
f_Lengthdir(FP,_Mul(Gun_V,64),_Add(_Mul(Gun_W,90),_Mul(_Mod(_Read(0x58D6F8),60),6)),Gun_X,Gun_Y)
Call_Gun_LocPos()

NIfX(FP,{
Memory(0x58DC60 + 0x14*0,AtMost,4096),
Memory(0x58DC68 + 0x14*0,AtMost,4096),
Memory(0x58DC64 + 0x14*0,AtMost,4096),
Memory(0x58DC6C + 0x14*0,AtMost,4096)})




Trigger { -- 
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,Exactly,1,GMode);
},
	actions = {
		SetCVar(FP,Gun_W2[2],SetTo,1);
		PreserveTrigger();
		}
}

Trigger { -- 
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,Exactly,2,GMode);
},
	actions = {
		SetCVar(FP,Gun_W2[2],SetTo,2);
		PreserveTrigger();
		}
}

Trigger { -- 
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,Exactly,3,GMode);
},
	actions = {
		SetCVar(FP,Gun_W2[2],SetTo,3);
		PreserveTrigger();
		}
}

NWhile(FP,CVar(FP,Gun_W2[2],AtLeast,1),SetCVar(FP,Gun_W2[2],Subtract,1))
NIfX(FP,{TMemoryX(_Mem(Gun_Level),Exactly,1)})
CDoActions(FP,{TCreateUnit(1,VArr(UArr1,_Mod(_Rand(),16)), 1, _Add((_Mod(_Rand(),2)),6))})
NElseX()
CDoActions(FP,{TCreateUnit(1,VArr(UArr2,_Mod(_Rand(),16)), 1, _Add((_Mod(_Rand(),2)),6))})
NIfXEnd()
NWhileEnd()
CMov(FP,B10_Cond,1)
NIfXEnd()
NWhileEnd()
Call_LoadCP()
Trigger { -- Suspend
	players = {FP},
	conditions = {
		Label(0);
		CVar(FP,B10_Cond[2],AtMost,0);
		},
	actions = {
		MoveCp(Subtract,4);
		SetDeaths(CurrentPlayer,SetTo,0,0);
		MoveCp(Add,4);
		SetDeaths(CurrentPlayer,SetTo,0,0);
		SetCDeaths(FP,Add,1,SPGunCond);
		PreserveTrigger();
		}
}
CMov(FP,B10_Cond,0)
Call_LoadCP()

CSub(FP,0x6509B0,1)

NIfEnd()

NIf(FP,DeathsX(CurrentPlayer,Exactly,11*0x1000,0,0xF000)) -- BdIndex 11

DisPosX = 4000
DisPosY = 2240
DisPos = {DisPosX,DisPosY}
CAdd(FP,0x6509B0,1)
NIf(FP,DeathsX(CurrentPlayer,AtMost,0,0,0xFFFF))
Call_SaveCP()
CMov(FP,Gun_W,90)

DoActions(FP,{
SetMemory(0x58DC60 + 0x14*0,SetTo,DisPosX),
SetMemory(0x58DC68 + 0x14*0,SetTo,DisPosX),
SetMemory(0x58DC64 + 0x14*0,SetTo,DisPosY),
SetMemory(0x58DC6C + 0x14*0,SetTo,DisPosY),
})
NIf(FP,DeathsX(CurrentPlayer,Exactly,0*16777216,0,0xFF000000))
DoActionsX(FP,{SetCVar(FP,UnitIDVOvr[2],SetTo,55),CereZergShape})
DoActionsX(FP,{SetCVar(FP,UnitIDVOvr[2],SetTo,53),CereZergShape})
for i = 1, 3 do
NIf(FP,CDeaths(FP,Exactly,i,GMode))
DoActionsX(FP,{SetCVar(FP,UnitIDVOvr[2],SetTo,8),CereDiff[i]})
DoActionsX(FP,{SetCVar(FP,UnitIDVOvr[2],SetTo,17),CereDiff[i]})
NIfEnd()
end
NIfEnd()
NIf(FP,DeathsX(CurrentPlayer,Exactly,1*16777216,0,0xFF000000))

DoActionsX(FP,{SetCVar(FP,UnitIDVOvr[2],SetTo,56),CereZergShape})
DoActionsX(FP,{SetCVar(FP,UnitIDVOvr[2],SetTo,48),CereZergShape})
for i = 1, 3 do
NIf(FP,CDeaths(FP,Exactly,i,GMode))
DoActionsX(FP,{SetCVar(FP,UnitIDVOvr[2],SetTo,86),CereDiff[i]})
DoActionsX(FP,{SetCVar(FP,UnitIDVOvr[2],SetTo,78),CereDiff[i]})
NIfEnd()
end
NIfEnd()
NIf(FP,DeathsX(CurrentPlayer,Exactly,2*16777216,0,0xFF000000))
DoActionsX(FP,{SetCVar(FP,UnitIDVOvr[2],SetTo,57),CereZergShape})
DoActionsX(FP,{SetCVar(FP,UnitIDVOvr[2],SetTo,51),CereZergShape})
for i = 1, 3 do
NIf(FP,CDeaths(FP,Exactly,i,GMode))
DoActionsX(FP,{SetCVar(FP,UnitIDVOvr[2],SetTo,98),CereDiff[i]})
DoActionsX(FP,{SetCVar(FP,UnitIDVOvr[2],SetTo,81),CereDiff[i]})
NIfEnd()
end
NIfEnd()



NWhile(FP,CVar(FP,Gun_W[2],AtMost,270),{TSetCVar(FP,Gun_W[2],Add,_Mul(B11_Level,5))})
f_Lengthdir(FP,250,Gun_W,Gun_X,Gun_Y)
CDoActions(FP,{
TSetMemory(0x58DC60 + 0x14*0,SetTo,_Add(Gun_X, DisPosX)),
TSetMemory(0x58DC68 + 0x14*0,SetTo,_Add(Gun_X,DisPosX)),
TSetMemory(0x58DC64 + 0x14*0,SetTo,_Add(Gun_Y,DisPosY)),
TSetMemory(0x58DC6C + 0x14*0,SetTo,_Add(Gun_Y,DisPosY)),
SetMemory(0x6CA010, SetTo, 64),
CreateUnit(1,29,1,FP),
SetMemory(0x6CA010, SetTo, 640),
})
TriggerX(FP,{CVar(FP,HondonMode[2],AtLeast,1)},{SetMemory(0x6CA010, SetTo, 12000)},{preserved})
NWhileEnd()

DoActions(FP,{
SetMemory(0x58DC60 + 0x14*0,SetTo,DisPosX-500),
SetMemory(0x58DC68 + 0x14*0,SetTo,DisPosX+500),
SetMemory(0x58DC64 + 0x14*0,SetTo,DisPosY-500),
SetMemory(0x58DC6C + 0x14*0,SetTo,DisPosY+500),
Order("Men",Force2,1,Attack,1),
})

Call_LoadCp()
DoActions(FP,{
		SetDeathsX(CurrentPlayer,Add,1*16777216,0,0xFF000000),
		SetDeathsX(CurrentPlayer,SetTo,500,0,0xFFFF)})
NIfEnd()



Trigger { -- Suspend
	players = {FP},
	conditions = {
		Label(0);
		DeathsX(CurrentPlayer,AtLeast,3*16777216,0,0xFF000000);
		},
	actions = {
		MoveCp(Subtract,4);
		SetDeaths(CurrentPlayer,SetTo,0,0);
		MoveCp(Add,4);
		SetDeaths(CurrentPlayer,SetTo,0,0);
		SetCDeaths(FP,Add,1,SPGunCond);
		PreserveTrigger();
		}
}


CSub(FP,0x6509B0,1)

Trigger { -- TIMER
	players = {FP},
	conditions = {
		Label(0);
		Deaths(CurrentPlayer,AtLeast,1,0);},
	actions = {
		MoveCp(Add,4);
		SetDeathsX(CurrentPlayer,Subtract,1,0,0xFFFF);
		MoveCp(Subtract,4);
		PreserveTrigger();
		}
}

NIf(FP,{DeathsX(CurrentPlayer,AtMost,0,0,0x80000000),Deaths(CurrentPlayer,AtLeast,1,0)})
Call_SaveCp()
	GName = "정신체 \x18Cerebrate \x04를"
	GPoint = 300000
	Mode = 0
	GunText = "\n\n\n\n\n\n\n\n\n\x13\x08！ ！ ！ \x04적의 "..GName.." 파괴하였다!\x17 + "..GPoint.." P t s\x08 ！ ！ ！\n\n"
	Trigger {
	players = {FP},
		conditions = {
		Label(0);
			},
	actions = {
		SetDeathsX(CurrentPlayer,SetTo,1*0x80000000,0,0x80000000);
		SetMemory(0x6509B0, SetTo, 0);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 1);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 2);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 3);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 4);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 5);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 128);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 129);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 130);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 131);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, FP);
		SetScore(Force1,Add,GPoint,Kills);
		SetCDeaths(FP,SetTo,4,BGMType);
		PreserveTrigger();
		},
	}
Call_LoadCp()
NIfEnd()

NIfEnd()
NIf(FP,DeathsX(CurrentPlayer,Exactly,12*0x1000,0,0xF000)) -- BdIndex 양식
Trigger { -- TIMER
	players = {FP},
	conditions = {Deaths(CurrentPlayer,AtLeast,1,0);},
	actions = {
		MoveCp(Add,1*4);
		SetDeathsX(CurrentPlayer,Subtract,1,0,0xFFFF);
		MoveCp(Subtract,1*4);
		PreserveTrigger();
		}
}
CAdd(FP,0x6509B0,1)

NIf(FP,{DeathsX(CurrentPlayer,AtMost,0,0,0xFFFF),DeathsX(CurrentPlayer,AtMost,0,0,0xFF000000)})
DoActions(FP,{
SetMemory(0x58DC60 + 0x14*0,SetTo,2112),
SetMemory(0x58DC68 + 0x14*0,SetTo,2144),
SetMemory(0x58DC64 + 0x14*0,SetTo,3072),
SetMemory(0x58DC6C + 0x14*0,SetTo,3104)
})

DoActionsX(FP,{SetCVar(FP,UnitIDVOvr[2],SetTo,21),SetNext("X",0x201C,0),SetNext(0x201D,"X",1)})
DoActionsX(FP,{SetCVar(FP,UnitIDVOvr[2],SetTo,15),SetNext("X",0x201C,0),SetNext(0x201D,"X",1)})
DoActionsX(FP,{SetCVar(FP,UnitIDVOvr[2],SetTo,53),SetNext("X",0x201C,0),SetNext(0x201D,"X",1)})
DoActionsX(FP,{SetCVar(FP,UnitIDVOvr[2],SetTo,48),SetNext("X",0x201C,0),SetNext(0x201D,"X",1)})
DoActions(FP,{
SetMemory(0x58DC60 + 0x14*0,Add,32),
SetMemory(0x58DC68 + 0x14*0,Add,32),
})
DoActionsX(FP,{SetCVar(FP,UnitIDVOvr[2],SetTo,55),SetNext("X",0x201C,0),SetNext(0x201D,"X",1)})
DoActions(FP,{
SetMemory(0x58DC60 + 0x14*0,Subtract,32*5),
SetMemory(0x58DC64 + 0x14*0,Subtract,32*4),
SetMemory(0x58DC68 + 0x14*0,Add,35*32),
SetMemory(0x58DC6C + 0x14*0,Add,18*32),
Order("Men",Force2,1,Attack,2)
})
DoActions(FP,{SetDeathsX(CurrentPlayer,Add,1*16777216,0,0xFF000000),SetDeathsX(CurrentPlayer,SetTo,480,0,0xFFFF)})
NIfEnd()
NIf(FP,{DeathsX(CurrentPlayer,AtMost,0,0,0xFFFF),DeathsX(CurrentPlayer,Exactly,1*16777216,0,0xFF000000)})
DoActions(FP,{
SetMemory(0x58DC60 + 0x14*0,SetTo,2112),
SetMemory(0x58DC68 + 0x14*0,SetTo,2144),
SetMemory(0x58DC64 + 0x14*0,SetTo,3072),
SetMemory(0x58DC6C + 0x14*0,SetTo,3104)
})
DoActionsX(FP,{SetCVar(FP,UnitIDVOvr[2],SetTo,80),SetNext("X",0x201C,0),SetNext(0x201D,"X",1)})
DoActionsX(FP,{SetCVar(FP,UnitIDVOvr[2],SetTo,87),SetNext("X",0x201C,0),SetNext(0x201D,"X",1)})
DoActionsX(FP,{SetCVar(FP,UnitIDVOvr[2],SetTo,51),SetNext("X",0x201C,0),SetNext(0x201D,"X",1)})
DoActionsX(FP,{SetCVar(FP,UnitIDVOvr[2],SetTo,48),SetNext("X",0x201C,0),SetNext(0x201D,"X",1)})
DoActions(FP,{
SetMemory(0x58DC60 + 0x14*0,Add,32),
SetMemory(0x58DC68 + 0x14*0,Add,32),
})
DoActionsX(FP,{SetCVar(FP,UnitIDVOvr[2],SetTo,56),SetNext("X",0x201C,0),SetNext(0x201D,"X",1)})
DoActions(FP,{
SetMemory(0x58DC60 + 0x14*0,Subtract,32*5),
SetMemory(0x58DC64 + 0x14*0,Subtract,32*4),
SetMemory(0x58DC68 + 0x14*0,Add,35*32),
SetMemory(0x58DC6C + 0x14*0,Add,18*32),
Order("Men",Force2,1,Attack,2)
})
DoActions(FP,{SetDeathsX(CurrentPlayer,Add,1*16777216,0,0xFF000000),SetDeathsX(CurrentPlayer,SetTo,480,0,0xFFFF)})
NIfEnd()
NIf(FP,{DeathsX(CurrentPlayer,AtMost,0,0,0xFFFF),DeathsX(CurrentPlayer,Exactly,2*16777216,0,0xFF000000)})
DoActions(FP,{
SetMemory(0x58DC60 + 0x14*0,SetTo,2112),
SetMemory(0x58DC68 + 0x14*0,SetTo,2144),
SetMemory(0x58DC64 + 0x14*0,SetTo,3072),
SetMemory(0x58DC6C + 0x14*0,SetTo,3104)
})
DoActionsX(FP,{SetCVar(FP,UnitIDVOvr[2],SetTo,28),SetNext("X",0x201C,0),SetNext(0x201D,"X",1)})
DoActionsX(FP,{SetCVar(FP,UnitIDVOvr[2],SetTo,17),SetNext("X",0x201C,0),SetNext(0x201D,"X",1)})
DoActionsX(FP,{SetCVar(FP,UnitIDVOvr[2],SetTo,51),SetNext("X",0x201C,0),SetNext(0x201D,"X",1)})
DoActionsX(FP,{SetCVar(FP,UnitIDVOvr[2],SetTo,48),SetNext("X",0x201C,0),SetNext(0x201D,"X",1)})
DoActions(FP,{
SetMemory(0x58DC60 + 0x14*0,Add,32),
SetMemory(0x58DC68 + 0x14*0,Add,32),
})
DoActionsX(FP,{SetCVar(FP,UnitIDVOvr[2],SetTo,57),SetNext("X",0x201C,0),SetNext(0x201D,"X",1)})
DoActionsX(FP,{
SetMemory(0x58DC60 + 0x14*0,Subtract,32*5),
SetMemory(0x58DC64 + 0x14*0,Subtract,32*4),
SetMemory(0x58DC68 + 0x14*0,Add,35*32),
SetMemory(0x58DC6C + 0x14*0,Add,18*32),
Order("Men",Force2,1,Attack,2),
		SetCDeaths(FP,Add,1,SPGunCond)
})
DoActions(FP,{SetDeaths(CurrentPlayer,SetTo,0,0),MoveCp(Subtract,1*4),SetDeaths(CurrentPlayer,SetTo,0,0),MoveCp(Add,1*4)})
NIfEnd()


CSub(FP,0x6509B0,1)
NIf(FP,{DeathsX(CurrentPlayer,AtMost,0,0,0x80000000),Deaths(CurrentPlayer,AtLeast,1,0)})
Call_SaveCp()
	GName = "초월체 \x18OverMind \x04를"
	GPoint = 300000
	Mode = 0
	GunText = "\n\n\n\n\n\n\n\n\n\x13\x08！ ！ ！ \x04적의 "..GName.." 파괴하였다!\x17 + "..GPoint.." P t s\x08 ！ ！ ！\n\n"
	Trigger {
	players = {FP},
		conditions = {
		Label(0);
			},
	actions = {
		SetDeathsX(CurrentPlayer,SetTo,1*0x80000000,0,0x80000000);
		SetMemory(0x6509B0, SetTo, 0);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 1);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 2);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 3);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 4);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 5);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 128);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 129);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 130);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 131);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, FP);
		SetScore(Force1,Add,GPoint,Kills);
		SetCDeaths(FP,SetTo,4,BGMType);
		PreserveTrigger();
		},
	}
Call_LoadCp()
NIfEnd()
NIfEnd()

NIf(FP,DeathsX(CurrentPlayer,Exactly,13*0x1000,0,0xF000)) -- BdIndex 양식

Trigger { -- TIMER
	players = {FP},
	conditions = {Deaths(CurrentPlayer,AtLeast,1,0);},
	actions = {
		MoveCp(Add,1*4);
		SetDeathsX(CurrentPlayer,Subtract,1,0,0xFFFF);
		MoveCp(Subtract,1*4);
		PreserveTrigger();
		}
}
CAdd(FP,0x6509B0,1)

NIf(FP,{DeathsX(CurrentPlayer,AtMost,0,0,0xFFFF)})
CSPlotAct(CS_RatioXY(CSMakeStar(4,180,75,45,7*7,5*5),1,0.5),FP,25,0,nil,1,32,32,nil,FP,{Label(0),CDeaths(FP,Exactly,1,GMode)},nil,1)
CSPlotAct(CS_RatioXY(CSMakeStar(4,180,75,45,7*7,0),1,0.5),FP,25,0,nil,1,32,32,nil,FP,{Label(0),CDeaths(FP,Exactly,2,GMode)},nil,1)
CSPlotAct(CS_RatioXY(CSMakeStar(4,180,75,45,9*9,0),1,0.5),FP,25,0,nil,1,32,32,nil,FP,{Label(0),CDeaths(FP,Exactly,3,GMode)},nil,1)

DoActions(FP,{SetDeathsX(CurrentPlayer,Add,1*16777216,0,0xFF000000),SetDeathsX(CurrentPlayer,SetTo,480,0,0xFFFF)})
NIfEnd()

Trigger {
	players = {FP},
	conditions = {
		Label(0);
		DeathsX(CurrentPlayer,Exactly,3*16777216,0,0xFF000000);
	},
	actions = {SetDeaths(CurrentPlayer,SetTo,0,0);
		MoveCp(Subtract,1*4);
		SetDeaths(CurrentPlayer,SetTo,0,0);
		MoveCp(Add,1*4);
		SetCDeaths(FP,Add,1,B_Chry_cond);
		PreserveTrigger();
	}
}

CSub(FP,0x6509B0,1)
NIf(FP,{DeathsX(CurrentPlayer,AtMost,0,0,0x80000000),Deaths(CurrentPlayer,AtLeast,1,0)})
Call_SaveCp()
	GName = "빅! 한 \x18Large Chrysalis \x04를"
	GPoint = 100000
	Mode = 0
	GunText = "\n\n\n\n\n\n\n\n\n\x13\x08！ ！ ！ \x04적의 "..GName.." 파괴하였다!\x17 + "..GPoint.." P t s\x08 ！ ！ ！\n\n"
	Trigger {
	players = {FP},
		conditions = {
		Label(0);
			},
	actions = {
		SetDeathsX(CurrentPlayer,SetTo,1*0x80000000,0,0x80000000);
		SetMemory(0x6509B0, SetTo, 0);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 1);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 2);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 3);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 4);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 5);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 128);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 129);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 130);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 131);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, FP);
		SetScore(Force1,Add,GPoint,Kills);
		SetCDeaths(FP,SetTo,3,BGMType);
		PreserveTrigger();
		},
	}
Call_LoadCp()
NIfEnd()
NIfEnd()

--[[

NIf(FP,DeathsX(CurrentPlayer,Exactly,index*0x1000,0,0xF000)) -- BdIndex 양식
NIf(FP,{DeathsX(CurrentPlayer,AtMost,0,0,0x80000000)})
Call_SaveCp()
	GName = "정신체 \x18Cerebrate \x04를"
	GPoint = 300000
	Mode = 0
	GunText = "\n\n\n\n\n\n\n\n\n\x13\x08！ ！ ！ \x04적의 "..GName.." 파괴하였다!\x17 + "..GPoint.." P t s\x08 ！ ！ ！\n\n"
	Trigger {
	players = {FP},
		conditions = {
		Label(0);
			},
	actions = {
		SetDeathsX(CurrentPlayer,SetTo,1*0x80000000,0,0x80000000);
		SetMemory(0x6509B0, SetTo, 0);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 1);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 2);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 3);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 4);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 5);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 128);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 129);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 130);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, 131);
		DisplayText(GunText,4);
		SetMemory(0x6509B0, SetTo, FP);
		SetScore(Force1,Add,GPoint,Kills);
		SetCDeaths(FP,SetTo,4,BGMType);
		PreserveTrigger();
		},
	}
Call_LoadCp()
NIfEnd()
CAdd(FP,0x6509B0,1)

CSub(FP,0x6509B0,1)
NIfEnd()
--]]



NIfEnd()
DoActions(FP,MoveCp(Add,2*4))
DoWhileEnd({Memory(0x6509B0,AtMost,EPD(MemoryPtr)+200)})
NJumpEnd(FP,WhileLaunch[2])
NIfEnd()
SetRecoverCp()
RecoverCp(FP)



-- 시체 상시검사 단락
CJump(FP,0x103) -- if NonGameStart
CunitCtrig_Part1(FP)
MoveCp("X",25*4)
function Call_GunPosSave(BdID,GunIndex)
NIf(FP,DeathsX(CurrentPlayer,Exactly,BdID,0,0xFF))
DoActionsX(FP,{SetCVar(FP,BdIndex[2],SetTo,GunIndex),SetNext("X",0x3004,0),SetNext(0x3005,"X",1)})
NIfEnd()
end
Call_GunPosSave(132,0)
Call_GunPosSave(133,1)
Call_GunPosSave(216,2)
Call_GunPosSave(190,3)
Call_GunPosSave(147,4)
Call_GunPosSave(156,5)
Call_GunPosSave(109,6)
Call_GunPosSave(173,7)
Call_GunPosSave(201,8)
Call_GunPosSave(175,9)
Call_GunPosSave(152,10)
Call_GunPosSave(151,11)
Call_GunPosSave(148,12)
Call_GunPosSave(150,13)
CIf(FP,DeathsX(CurrentPlayer,Exactly,20,0,0xFF))
DoActions(FP,MoveCp(Subtract,6*4))
for j = 1, 6 do
Call_SaveCp()
Trigger { -- No comment (6496767D)
	players = {FP},
	conditions = {
		Label(0);
		DeathsX(CurrentPlayer,Exactly,j-1,0,0xFF);
	},
	actions = {
		SetMemory(0x6509B0, SetTo, 0);
		DisplayText("\x0D\x0D\x0D"..Color[j].."HM".._0D,4);
		PlayWAV("staredit\\wav\\die_se.ogg");
		SetMemory(0x6509B0, SetTo, 1);
		DisplayText("\x0D\x0D\x0D"..Color[j].."HM".._0D,4);
		PlayWAV("staredit\\wav\\die_se.ogg");
		SetMemory(0x6509B0, SetTo, 2);
		DisplayText("\x0D\x0D\x0D"..Color[j].."HM".._0D,4);
		PlayWAV("staredit\\wav\\die_se.ogg");
		SetMemory(0x6509B0, SetTo, 3);
		DisplayText("\x0D\x0D\x0D"..Color[j].."HM".._0D,4);
		PlayWAV("staredit\\wav\\die_se.ogg");
		SetMemory(0x6509B0, SetTo, 4);
		DisplayText("\x0D\x0D\x0D"..Color[j].."HM".._0D,4);
		PlayWAV("staredit\\wav\\die_se.ogg");
		SetMemory(0x6509B0, SetTo, 5);
		DisplayText("\x0D\x0D\x0D"..Color[j].."HM".._0D,4);
		PlayWAV("staredit\\wav\\die_se.ogg");
		SetMemory(0x6509B0, SetTo, 128);
		DisplayText("\x0D\x0D\x0D"..Color[j].."HM".._0D,4);
		PlayWAV("staredit\\wav\\die_se.ogg");
		SetMemory(0x6509B0, SetTo, 129);
		DisplayText("\x0D\x0D\x0D"..Color[j].."HM".._0D,4);
		PlayWAV("staredit\\wav\\die_se.ogg");
		SetMemory(0x6509B0, SetTo, 130);
		DisplayText("\x0D\x0D\x0D"..Color[j].."HM".._0D,4);
		PlayWAV("staredit\\wav\\die_se.ogg");
		SetMemory(0x6509B0, SetTo, 131);
		DisplayText("\x0D\x0D\x0D"..Color[j].."HM".._0D,4);
		PlayWAV("staredit\\wav\\die_se.ogg");
		SetMemory(0x6509B0, SetTo, FP);
		SetDeaths(j-1,Subtract,1,20);
		SetCDeaths(FP,Add,1,HMDeaths+(j-1)*65536);
		PreserveTrigger();
		},
	}
	Call_LoadCp()
end
DoActions(FP,MoveCp(Add,6*4))
CIfEnd()
CIf(FP,DeathsX(CurrentPlayer,Exactly,16,0,0xFF))
DoActions(FP,MoveCp(Subtract,6*4))
for j = 1, 6 do
Call_SaveCp()
Trigger { -- No comment (6496767D)
	players = {FP},
	conditions = {
		Label(0);
		DeathsX(CurrentPlayer,Exactly,j-1,0,0xFF);
	},
	actions = {
		SetMemory(0x6509B0, SetTo, 0);
		DisplayText("\x0D\x0D\x0D"..Color[j].."RM".._0D,4);
		PlayWAV("staredit\\wav\\die_se.ogg");
		SetMemory(0x6509B0, SetTo, 1);
		DisplayText("\x0D\x0D\x0D"..Color[j].."RM".._0D,4);
		PlayWAV("staredit\\wav\\die_se.ogg");
		SetMemory(0x6509B0, SetTo, 2);
		DisplayText("\x0D\x0D\x0D"..Color[j].."RM".._0D,4);
		PlayWAV("staredit\\wav\\die_se.ogg");
		SetMemory(0x6509B0, SetTo, 3);
		DisplayText("\x0D\x0D\x0D"..Color[j].."RM".._0D,4);
		PlayWAV("staredit\\wav\\die_se.ogg");
		SetMemory(0x6509B0, SetTo, 4);
		DisplayText("\x0D\x0D\x0D"..Color[j].."RM".._0D,4);
		PlayWAV("staredit\\wav\\die_se.ogg");
		SetMemory(0x6509B0, SetTo, 5);
		DisplayText("\x0D\x0D\x0D"..Color[j].."RM".._0D,4);
		PlayWAV("staredit\\wav\\die_se.ogg");
		SetMemory(0x6509B0, SetTo, 128);
		DisplayText("\x0D\x0D\x0D"..Color[j].."RM".._0D,4);
		PlayWAV("staredit\\wav\\die_se.ogg");
		SetMemory(0x6509B0, SetTo, 129);
		DisplayText("\x0D\x0D\x0D"..Color[j].."RM".._0D,4);
		PlayWAV("staredit\\wav\\die_se.ogg");
		SetMemory(0x6509B0, SetTo, 130);
		DisplayText("\x0D\x0D\x0D"..Color[j].."RM".._0D,4);
		PlayWAV("staredit\\wav\\die_se.ogg");
		SetMemory(0x6509B0, SetTo, 131);
		DisplayText("\x0D\x0D\x0D"..Color[j].."RM".._0D,4);
		PlayWAV("staredit\\wav\\die_se.ogg");
		SetMemory(0x6509B0, SetTo, FP);
		SetDeaths(j-1,Subtract,1,27);
		SetScore(j-1,Add,3,Custom);
		PreserveTrigger();
		},
	}
	Call_LoadCp()
end
DoActions(FP,MoveCp(Add,6*4))
CIfEnd()
CIf(FP,DeathsX(CurrentPlayer,Exactly,100,0,0xFF))
DoActions(FP,MoveCp(Subtract,6*4))
for j = 1, 6 do
Call_SaveCp()
Trigger { -- No comment (6496767D)
	players = {FP},
	conditions = {
		Label(0);
		DeathsX(CurrentPlayer,Exactly,j-1,0,0xFF);
	},
	actions = {
		SetMemory(0x6509B0, SetTo, 0);
		DisplayText("\x0D\x0D\x0D"..Color[j].."LM".._0D,4);
		PlayWAV("staredit\\wav\\die_se.ogg");
		SetMemory(0x6509B0, SetTo, 1);
		DisplayText("\x0D\x0D\x0D"..Color[j].."LM".._0D,4);
		PlayWAV("staredit\\wav\\die_se.ogg");
		SetMemory(0x6509B0, SetTo, 2);
		DisplayText("\x0D\x0D\x0D"..Color[j].."LM".._0D,4);
		PlayWAV("staredit\\wav\\die_se.ogg");
		SetMemory(0x6509B0, SetTo, 3);
		DisplayText("\x0D\x0D\x0D"..Color[j].."LM".._0D,4);
		PlayWAV("staredit\\wav\\die_se.ogg");
		SetMemory(0x6509B0, SetTo, 4);
		DisplayText("\x0D\x0D\x0D"..Color[j].."LM".._0D,4);
		PlayWAV("staredit\\wav\\die_se.ogg");
		SetMemory(0x6509B0, SetTo, 5);
		DisplayText("\x0D\x0D\x0D"..Color[j].."LM".._0D,4);
		PlayWAV("staredit\\wav\\die_se.ogg");
		SetMemory(0x6509B0, SetTo, 128);
		DisplayText("\x0D\x0D\x0D"..Color[j].."LM".._0D,4);
		PlayWAV("staredit\\wav\\die_se.ogg");
		SetMemory(0x6509B0, SetTo, 129);
		DisplayText("\x0D\x0D\x0D"..Color[j].."LM".._0D,4);
		PlayWAV("staredit\\wav\\die_se.ogg");
		SetMemory(0x6509B0, SetTo, 130);
		DisplayText("\x0D\x0D\x0D"..Color[j].."LM".._0D,4);
		PlayWAV("staredit\\wav\\die_se.ogg");
		SetMemory(0x6509B0, SetTo, 131);
		DisplayText("\x0D\x0D\x0D"..Color[j].."LM".._0D,4);
		PlayWAV("staredit\\wav\\die_se.ogg");
		SetMemory(0x6509B0, SetTo, FP);
		SetDeaths(j-1,Subtract,1,100);
		SetScore(j-1,Add,1,Custom);
		PreserveTrigger();
		},
	}
	Call_LoadCp()
end
DoActions(FP,MoveCp(Add,6*4))
CIfEnd()
DoActions(FP,MoveCp(Subtract,16*4))
NIf(FP,DeathsX(CurrentPlayer,AtLeast,1*65536,0,0xFF0000))
DoActions(FP,MoveCp(Add,16*4))
------------

for i = 1, #HeroIndexArr do
NIf(FP,DeathsX(CurrentPlayer,Exactly,HeroIndexArr[i],0,0xFF))
DoActionsX(FP,{SetNext("X",0x3002,0),SetNext(0x3003,"X",1)})
NIfEnd()
end
NIf(FP,DeathsX(CurrentPlayer,Exactly,162,0,0xFF))
DoActionsX(FP,{SetNext("X",0x3002,0),SetNext(0x3003,"X",1)})
NIfEnd()
NIf(FP,DeathsX(CurrentPlayer,Exactly,176,0,0xFF))
DoActionsX(FP,{SetNext("X",0x3002,0),SetNext(0x3003,"X",1)})
NIfEnd()
NIf(FP,DeathsX(CurrentPlayer,Exactly,177,0,0xFF))
DoActionsX(FP,{SetNext("X",0x3002,0),SetNext(0x3003,"X",1)})
NIfEnd()
NIf(FP,DeathsX(CurrentPlayer,Exactly,178,0,0xFF))
DoActionsX(FP,{SetNext("X",0x3002,0),SetNext(0x3003,"X",1)})
NIfEnd()

DoActions(FP,MoveCp(Subtract,16*4))
NIfEnd()
DoActions(FP,MoveCp(Add,16*4))

DoActions(FP,{MoveCp(Add,15*4),SetDeathsX(CurrentPlayer,SetTo,0*16777216,0,0xFF000000),MoveCp(Subtract,31*4),SetDeathsX(CurrentPlayer,SetTo,0,0,0xFF0000)})
ClearCalc()
CunitCtrig_Part2()
CunitCtrig_Part3X()
for i = 0, 1699 do -- Part4X 용 Cunit Loop (x1700)
CunitCtrig_Part4X(i,{
DeathsX(EPD(0x628298-0x150*i+(40*4)),AtLeast,1*16777216,0,0xFF000000),
DeathsX(EPD(0x628298-0x150*i+(19*4)),Exactly,0*256,0,0xFF00),
},
{MoveCp(Add,25*4)})
end
CunitCtrig_End()



CIf(FP,CVar(FP,HondonMode[2],AtLeast,1))
CunitCtrig_Part1(FP)

NJumpX(FP,0x100,DeathsX(CurrentPlayer,Exactly,67,0,0xFF))
NJumpX(FP,0x100,DeathsX(CurrentPlayer,Exactly,88,0,0xFF))
NJumpX(FP,0x100,DeathsX(CurrentPlayer,Exactly,80,0,0xFF))
NJumpX(FP,0x100,DeathsX(CurrentPlayer,Exactly,63,0,0xFF))
NJumpX(FP,0x100,DeathsX(CurrentPlayer,Exactly,71,0,0xFF))
NJumpX(FP,0x100,DeathsX(CurrentPlayer,Exactly,86,0,0xFF))
ClearCalc()
NJumpXEnd(FP,0x100)

DoActions(FP,MoveCp(Subtract,12*4))
Trigger {
	players = {FP},
	conditions = {
	},
	actions = {
		SetDeaths(CurrentPlayer,SetTo,12000,0);
		MoveCp(Add,5*4);
		SetDeathsX(CurrentPlayer,SetTo,4000,0,0xFFFF);
		MoveCp(Subtract,10*4);
		SetDeathsX(CurrentPlayer,SetTo,70*65536,0,0xFF0000);
		MoveCp(Add,5*4);
		PreserveTrigger();
	}
}

ClearCalc()

CunitCtrig_Part2()
CunitCtrig_Part3X()
for i = 0, 1699 do -- Part4X 용 Cunit Loop (x1700)
CunitCtrig_Part4X(i,{
	Deaths(EPD(0x628298-0x150*i+(13*4)),AtMost,11999,0),
	DeathsX(EPD(0x628298-0x150*i+(19*4)),AtLeast,1*256,0,0xFF00),
	DeathsX(EPD(0x628298-0x150*i+(19*4)),AtLeast,6,0,0xFF),
	
},
{
	MoveCp(Add,25*4)})
end
CunitCtrig_End()
CIfEnd()


CIf(FP,CDeaths(FP,AtLeast,1,LimitX)) -- TestMode

f_Memcpy(FP,0x58f700,MemoryPtr,4*12)
CIf(FP,CDeaths(FP,AtLeast,1,TestMode))
Trigger {
	players = {FP},
	conditions = {
		Command(P1,AtLeast,1,32);
	},
	actions = {
		CreateUnit(20,100,35,P1);
		PreserveTrigger();
	}
}

Trigger {
	players = {FP},
	conditions = {
		Label(0);
		Deaths(P1,AtLeast,1,201);
		
	},
	actions = {
		--SetDeaths(FP,SetTo,1,200);
		ModifyUnitEnergy(All,"Any unit",Force2,"Anywhere",0);
		RemoveUnit("Zerg Lair",Force2);
		RemoveUnit("Hive",Force2);
		RemoveUnit("Mature Crysalis",Force2);
		RemoveUnit("Stasis Cell",Force2);
		RemoveUnit("Xel'Naga Temple",Force2);
		RemoveUnit("Small Chrysalis",Force2);
		--SetCDeaths(FP,SetTo,6000,GunBossAct);
		--SetCDeaths(FP,SetTo,1,FormCon);
	}
	}
CIfEnd()
--[[
for i = 0, 1699 do -- 오토스팀
Trigger {
	players = {FP},
	conditions = {
		DeathsX(EPD(0x628298-0x150*i+(19*4)),AtMost,4,0,0xFF),
		DeathsX(EPD(0x628298-0x150*i+(69*4)),AtMost,0,0,0xFF00),
	},
	actions = {
		SetDeathsX(EPD(0x628298-0x150*i+(69*4)),SetTo,255*256,0,0xFF00);
		PreserveTrigger();
	}
}
end
]]
CIfEnd()
CJumpEnd(FP,0x103) -- if NonGameStart End
SetRecoverCp()
RecoverCp(FP)
CIfOnce(AllPlayers,{CDeaths(FP,AtLeast,1,ModeO)}) -- onPluginStart

TriggerX(FP,{CDeaths(FP,AtMost,6,BGMMode)},{
	SetMemoryB(0x57F27C + (0 * 228) + 54,SetTo,0),
	SetMemoryB(0x57F27C + (1 * 228) + 54,SetTo,0),
	SetMemoryB(0x57F27C + (2 * 228) + 54,SetTo,0),
	SetMemoryB(0x57F27C + (3 * 228) + 54,SetTo,0),
	SetMemoryB(0x57F27C + (4 * 228) + 54,SetTo,0),
	SetMemoryB(0x57F27C + (5 * 228) + 54,SetTo,0)
})

TriggerX(FP,{CDeaths(FP,Exactly,7,BGMMode)},{SetSwitch("Switch 101",Set)})
for i = 0, 5 do
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CVar(FP,HiddenPts[2],AtMost,0);

		},
	actions = {
		SetMemory(0x582144 + (i*4),SetTo,2000);
		SetMemory(0x5821A4 + (i*4),SetTo,2000);
		}
		}
	end

Trigger { -- 컴퓨터 플레이어 색상 설정
	players = {FP},
	conditions = {
		Always();
	},
	actions = {
SetMemoryX(0x581DA4,SetTo,59*65536,0xFF0000), --P7 컬러
	SetMemoryX(0x581DDC,SetTo,59*1,0xFF); --P7 미니맵 
SetMemoryX(0x581DAC,SetTo,166*65536,0xFF0000), --P8컬러
SetMemoryX(0x581DDC,SetTo,166*256,0xFF00); --P8 미니맵
		--[[
		SetMemoryX(0x581DDC,SetTo,0*1,0xFF); --P7 미니맵 
		SetMemoryX(0x581DDC,SetTo,254*256,0xFF00); --P8 미니맵
		SetMemoryX(0x581DA4,SetTo,0*65536,0xFF0000), --P7 컬러
		SetMemoryX(0x581DAC,SetTo,254*65536,0xFF0000), --P8컬러
]]
		
},
}
CIf(FP,CDeaths(FP,AtLeast,7,HiddenMode))
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CVar(FP,HiddenPts[2],Exactly,0);
		CVar(FP,HiddenHP[2],Exactly,0);
		CVar(FP,HiddenAtk[2],Exactly,0);
		CVar(FP,HiddenPtsM[2],Exactly,0);
		CVar(FP,HiddenHPM[2],Exactly,0);
		CVar(FP,HiddenAtkM[2],Exactly,0);
		CVar(FP,HondonMode[2],Exactly,0);
		
	},
	actions = {
		SetCDeaths(FP,SetTo,0,HiddenMode);
	}
}

for i = 1, 5 do
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CVar(FP,HiddenPts[2],Exactly,i);
	},
	actions = {
		SetCVar(FP,HPointVar[2],SetTo,15+(12*i));
	}
}
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CVar(FP,HiddenPtsM[2],Exactly,i);
	},
	actions = {
		SetCVar(FP,HPointVar[2],SetTo,15-(i*3));
	}
}
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CVar(FP,HiddenHP[2],Exactly,i);
	},
	actions = {
		SetMemory(0x662390, Add, i*8000*256);
	}
}
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CVar(FP,HiddenAtk[2],Exactly,i);
	},
	actions = {		
		SetMemoryX(0x656F98, Add, i*32*65536,0xFFFF0000);--기본공
		SetMemoryX(0x657760, Add, i*5*65536,0xFFFF0000);--계수
		SetMemoryX(0x656F9C, Add, i*72,0xFFFF);
		SetMemoryX(0x657764, Add, i*4,0xFFFF);
		SetMemoryX(0x656EB0, Add, i*32*65536,0xFFFF0000);--
		SetMemoryX(0x657678, Add, i*3*65536,0xFFFF0000);--
	}
}

Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CVar(FP,HiddenAtkM[2],Exactly,i);
	},
	actions = {
		SetCVar(FP,AtkUpMax[2],SetTo,50+(200-(40*i)));
		
		SetMemoryB(0x58D088+(0*46)+7,SetTo,50+(200-(40*i)));
		SetMemoryB(0x58D088+(1*46)+7,SetTo,50+(200-(40*i)));
		SetMemoryB(0x58D088+(2*46)+7,SetTo,50+(200-(40*i)));
		SetMemoryB(0x58D088+(3*46)+7,SetTo,50+(200-(40*i)));
		SetMemoryB(0x58D088+(4*46)+7,SetTo,50+(200-(40*i)));
		SetMemoryB(0x58D088+(5*46)+7,SetTo,50+(200-(40*i)));
	}
}

end
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtLeast,7,HiddenMode);
		CVar(FP,HondonMode[2],AtMost,0);
	},
	actions = {
		SetMemoryX(0x581DDC,SetTo,0*1,0xFF); --P7 미니맵 
		SetMemoryX(0x581DDC,SetTo,128*256,0xFF00); --P8 미니맵
		SetMemoryX(0x581DA4,SetTo,0*65536,0xFF0000), --P7 컬러
		SetMemoryX(0x581DAC,SetTo,128*65536,0xFF0000), --P8컬러
	}
}

CIf(FP,CVar(FP,HondonMode[2],AtLeast,1))

Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtLeast,7,HiddenMode);
		CVar(FP,HondonMode[2],AtLeast,1);
	},
	actions = {
		SetMemoryX(0x581DDC,SetTo,14*1,0xFF); --P7 미니맵 
		SetMemoryX(0x581DDC,SetTo,254*256,0xFF00); --P8 미니맵
		SetMemoryX(0x581DA4,SetTo,14*65536,0xFF0000), --P7 컬러
		SetMemoryX(0x581DAC,SetTo,254*65536,0xFF0000), --P8컬러
	}
}

table.insert( HondonPatchArr,SetMemoryX(0x6566E4, SetTo, 65536*2,0xFF0000))
table.insert( HondonPatchArr,SetMemory(0x656A88, SetTo, 0))
table.insert( HondonPatchArr,SetMemoryX(0x656714, SetTo, 3,0xFF))
table.insert( HondonPatchArr,SetMemoryX(0x656EE8, SetTo, 530,0xFFFF))
table.insert( HondonPatchArr,SetMemoryX(0x656FD4, SetTo, 1,0xFF))
table.insert( HondonPatchArr,SetMemoryX(0x656894, SetTo, 256,0xFFFF))
table.insert( HondonPatchArr,SetMemoryX(0x6570D4, SetTo, 256,0xFFFF))
table.insert( HondonPatchArr,SetMemoryX(0x65778C, SetTo, 256,0xFFFF))
table.insert( HondonPatchArr,SetMemoryX(0x65692C, SetTo, 256,0xFFFF))
table.insert( HondonPatchArr,SetMemoryX(0x65716C, SetTo, 256,0xFFFF))
table.insert( HondonPatchArr,SetMemoryX(0x657824, SetTo, 256,0xFFFF))

DoActions2(FP,HondonPatchArr)


CIfEnd()

CIfEnd()

NWhile(FP,{Bring(FP,AtLeast,1,217,64)})

DoActions(FP,{MoveLocation(1,217,FP,64),GiveUnits(1,217,FP,1,8),RemoveUnit(217,8),
CreateUnit(1,48,1,6),
CreateUnit(1,51,1,7),
CreateUnit(1,53,1,6),
CreateUnit(1,54,1,7),
CreateUnit(1,104,1,6),
})
NWhileEnd()


CMov(FP,0x6509B0,EPD(RepUnitPtr))
CWhile(FP,Deaths(CurrentPlayer,AtLeast,1,0))

Call_SaveCp()

f_Read(FP,BackupCP,CPosX,"X",0xFFF)
f_Read(FP,BackupCP,CPosY,"X",0xFFF000)
CDiv(FP,CPosY,0x1000)
f_Read(FP,BackupCP,RepHeroIndex,"X",0xFF000000)
CDoActions(FP,{
SetMemory(0x58DC60 + 0x14*0,SetTo,0),
SetMemory(0x58DC68 + 0x14*0,SetTo,0),
SetMemory(0x58DC64 + 0x14*0,SetTo,0),
SetMemory(0x58DC6C + 0x14*0,SetTo,0),
TSetMemory(0x58DC60 + 0x14*0,SetTo,_Sub(CPosX,18)),
TSetMemory(0x58DC68 + 0x14*0,SetTo,_Add(CPosX,18)),
TSetMemory(0x58DC64 + 0x14*0,SetTo,_Sub(CPosY,18)),
TSetMemory(0x58DC6C + 0x14*0,SetTo,_Add(CPosY,18)),
TCreateunit(1,_Div(RepHeroIndex,0x1000000),1,_Add(_Mod(_Rand(),2),6))
})
Call_LoadCp()
CAdd(FP,0x6509B0,1)
CWhileEnd()
CMov(FP,0x6509B0,FP)

for i = 1,3 do
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,Exactly,i,GMode);
	},
	actions = {
		SetCVar(FP,B11_Level[2],SetTo,4-i);
	}
}
end
DoActionsX(FP,{SetCVar(FP,CanC[2],SetTo,2)})
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,Exactly,1,GMode);
	},
	actions = {
		SetMemoryX(0x660EC8, SetTo, 5000,0xFFFF);
		SetMemoryX(0x664814, SetTo, 255,0xFF);
		SetCDeaths(FP,Add,3,BossKill);
		SetCDeaths(FP,Add,2,SPGunCond);
		SetCVar(FP,CanC[2],Add,2);
	}
}
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,Exactly,3,GMode);
	},
	actions = {
		SetMemoryX(0x660E20, SetTo, 0,0xFFFF);
		SetMemoryX(0x6647C0, SetTo, 0,0xFF);
	}
}
Ex1 = {}
Ex2 = {}
Ex3 = {}
for i = 0, 5 do
table.insert(Ex1,EasyEx1P+(ExRate*i))
table.insert(Ex2,HDEx1P+(ExRate*i))
table.insert(Ex3,BurEx1P+(ExRate*i))
end

for i=1, 6 do -- 이지난이도
DoActions(FP,{SetSwitch("Switch 2",Random),SetSwitch("Switch 3",Random),SetSwitch("Switch 4",Random),SetSwitch("Switch 5",Random)})
MOText = "\x13\x04마린키우기 \x03G\x0Fa\x10L\x0Fa\x03X\x0Fy\x04.2\n\x13\x0EEASY \x04MODE\n\x13\x04\x08"..i.."인 \x04플레이 중입니다.\n\x13\x0E시작 환전률 : "..(Ex1[i]/10).."%\n\x13\x07==================\n\x13\x04Special Thanks to\n\x13\x04CheezeNacho, Ninfia, Balex, Marine_TOPCLASS\n\x13Hybrid)_GOD60, snrnfkrh"
Trigger { -- 미션 오브젝트 이지n인
	players = {Force1},
	conditions = {
		Label(0);
		CDeaths(FP,Exactly,1,GMode);
		Bring(AllPlayers,Exactly,i,111,"Anywhere");
	},
	actions = {
		SetMissionObjectives(MOText);
		SetCVar(FP,ExchangeRate[2],SetTo,Ex1[i]);
		SetCVar(FP,ExrateBackup[2],SetTo,Ex1[i]);
	},
	}
end
for i=1, 6 do -- 하드 난이도
MOText = "\x13\x04마린키우기 \x03G\x0Fa\x10L\x0Fa\x03X\x0Fy\x04.2\n\x13\x08HARD \x04MODE\n\x13\x04\x08"..i.."인 \x04플레이 중입니다.\n\x13\x0E시작 환전률 : "..(Ex2[i]/10).."%\n\x13\x07==================\n\x13\x04Special Thanks to\n\x13\x04CheezeNacho, Ninfia, Balex, Marine_TOPCLASS\n\x13Hybrid)_GOD60, snrnfkrh"
Trigger { -- 미션 오브젝트 이지n인
	players = {Force1},
	conditions = {
		Label(0);
		CDeaths(FP,Exactly,2,GMode);
		Bring(AllPlayers,Exactly,i,111,"Anywhere");
	},
	actions = {
		SetMissionObjectives(MOText);
		SetCVar(FP,ExchangeRate[2],SetTo,Ex2[i]);
		SetCVar(FP,ExrateBackup[2],SetTo,Ex2[i]);
	},
	}
end
for i=1, 6 do -- 버스트 난이도
MOText = "\x13\x04마린키우기 \x03G\x0Fa\x10L\x0Fa\x03X\x0Fy\x04.2\n\x13\x1FBURST \x04MODE\n\x13\x04\x08"..i.."인 \x04플레이 중입니다.\n\x13\x0E시작 환전률 : "..(Ex3[i]/10).."%\n\x13\x07==================\n\x13\x04Special Thanks to\n\x13\x04CheezeNacho, Ninfia, Balex, Marine_TOPCLASS\n\x13Hybrid)_GOD60, snrnfkrh"
Trigger { -- 미션 오브젝트 이지n인
	players = {Force1},
	conditions = {
		Label(0);
		CDeaths(FP,Exactly,3,GMode);
		Bring(AllPlayers,Exactly,i,111,"Anywhere");
	},
	actions = {
		SetMissionObjectives(MOText);
		SetCVar(FP,ExchangeRate[2],SetTo,Ex3[i]);
		SetCVar(FP,ExrateBackup[2],SetTo,Ex3[i]);
	},
	}
end

Trigger { -- 배속방지
	players = {FP},
	conditions = {
		Memory(0x51CE84,AtLeast,1001);
	},
	actions = {
		SetMemory(0x6509B0,SetTo,0);
		DisplayText("\x13\x1B방 제목에서 배속 옵션을 제거해 주십시오.",4);
		Victory();
		SetMemory(0x6509B0,SetTo,1);
		DisplayText("\x13\x1B방 제목에서 배속 옵션을 제거해 주십시오.",4);
		Victory();
		SetMemory(0x6509B0,SetTo,2);
		DisplayText("\x13\x1B방 제목에서 배속 옵션을 제거해 주십시오.",4);
		Victory();
		SetMemory(0x6509B0,SetTo,3);
		DisplayText("\x13\x1B방 제목에서 배속 옵션을 제거해 주십시오.",4);
		Victory();
		SetMemory(0x6509B0,SetTo,4);
		DisplayText("\x13\x1B방 제목에서 배속 옵션을 제거해 주십시오.",4);
		Victory();
		SetMemory(0x6509B0,SetTo,5);
		DisplayText("\x13\x1B방 제목에서 배속 옵션을 제거해 주십시오.",4);
		Victory();
		SetMemory(0x6509B0,SetTo,FP);
	}
	}
Trigger { -- 게임오버
	players = {Force1},
	conditions = {
		MemoryX(0x57EEE8 + 36*6,Exactly,0,0xFF);
	},
	actions = {
		PlayWAV("sound\\Misc\\TPwrDown.wav");
		DisplayText("\x13\x1B컴퓨터 슬롯 변경이 감지되었습니다. 다시 시작해주세요.",4);
		Defeat();
	}
	}
Trigger { -- 게임오버
	players = {Force1},
	conditions = {
		MemoryX(0x57EEE8 + 36*7,Exactly,0,0xFF);
	},
	actions = {
		PlayWAV("sound\\Misc\\TPwrDown.wav");
		DisplayText("\x13\x1B컴퓨터 슬롯 변경이 감지되었습니다. 다시 시작해주세요.",4);
		Defeat();
	}
	}
Trigger { -- 게임오버
	players = {Force1},
	conditions = {
		MemoryX(0x57EEE8 + 36*6,Exactly,2,0xFF);
	},
	actions = {
		PlayWAV("sound\\Misc\\TPwrDown.wav");
		DisplayText("\x13\x1B컴퓨터 슬롯 변경이 감지되었습니다. 다시 시작해주세요.",4);
		Defeat();
	}
	}
Trigger { -- 게임오버
	players = {Force1},
	conditions = {
		MemoryX(0x57EEE8 + 36*7,Exactly,2,0xFF);
	},
	actions = {
		PlayWAV("sound\\Misc\\TPwrDown.wav");
		DisplayText("\x13\x1B컴퓨터 슬롯 변경이 감지되었습니다. 다시 시작해주세요.",4);
		Defeat();
	}
	}
Trigger { -- 게임오버
	players = {Force1},
	conditions = {
		MemoryX(0x57efc0,AtLeast,1*256,0xFF00);
	},
	actions = {
		PlayWAV("sound\\Misc\\TPwrDown.wav");
		DisplayText("\x13\x1B컴퓨터 종족 변경이 감지되었습니다. 다시 시작해주세요.",4);
		Defeat();
	}
	}
Trigger { -- 게임오버
	players = {Force1},
	conditions = {
		MemoryX(0x57efe4,AtLeast,1*256,0xFF00);
	},
	actions = {
		PlayWAV("sound\\Misc\\TPwrDown.wav");
		DisplayText("\x13\x1B컴퓨터 종족 변경이 감지되었습니다. 다시 시작해주세요.",4);
		Defeat();
	}
	}
Trigger { -- 싱글플 방지
players = {AllPlayers},
conditions = {
Memory(0x57F0B4, Exactly, 0);
},
actions = {
	DisplayText("\x13\x1B멀티플레이 전용 맵입니다. 배틀넷 멀티플레이로 시작해주세요.",4);
	Victory();
},
}
Trigger { -- 
players = {Force2},
conditions = {
},
actions = {
	RunAIScriptAt("Expansion Zerg Campaign Insane","AIZone");
	SetResources(CurrentPlayer,SetTo,0x10000000,OreAndGas);
	
},
}
Trigger { -- 저그인구수세팅
players = {FP},
conditions = {
},
actions = {
	SetMemory(0x582144+(6*4),SetTo,2000);
	SetMemory(0x5821A4+(6*4),SetTo,2000);
	SetMemory(0x582144+(7*4),SetTo,2000);
	SetMemory(0x5821A4+(7*4),SetTo,2000);
	
	
},
}
Trigger {
	players = {FP},
	conditions = {
	},
	actions = {
		GiveUnits(All,132,P8,4,0);
		GiveUnits(All,132,P8,5,0);
		GiveUnits(All,133,P8,4,0);
		GiveUnits(All,133,P8,5,0);
		GiveUnits(All,132,P8,6,1);
		GiveUnits(All,133,P8,6,1);
		GiveUnits(All,132,P8,7,2);
		GiveUnits(All,133,P8,7,2);
		GiveUnits(All,132,P8,8,3);
		GiveUnits(All,133,P8,8,3);
		GiveUnits(All,132,P8,9,4);
		GiveUnits(All,133,P8,9,4);
		GiveUnits(All,132,P8,10,5);
		GiveUnits(All,133,P8,10,5);
		GiveUnits(All,132,P8,11,6);
		GiveUnits(All,133,P8,11,6);
		GiveUnits(All,132,P8,12,7);
		GiveUnits(All,133,P8,12,7);
		GiveUnits(All,132,P8,13,8);
		GiveUnits(All,133,P8,13,8);
		GiveUnits(All,132,P8,14,9);
		GiveUnits(All,133,P8,14,9);
		GiveUnits(All,132,P8,15,10);
		GiveUnits(All,133,P8,15,10);
		GiveUnits(All,132,P7,15,11);
		GiveUnits(All,133,P7,15,11);
		RemoveUnit("Larva",Force2);
	}
	}


-- CunitCtrig1 Start -- RecoverCPV = BackupCP
CunitCtrig_Part1(FP)
MoveCp("X",25*4)
function CUnit_PlacedUnitHP(Index,Amount)
Trigger {
	players = {FP},
	conditions = {
		DeathsX(CurrentPlayer,Exactly,Index,0,0xFF);
	},
	actions = {
		MoveCp(Subtract,23*4);
		SetDeaths(CurrentPlayer,SetTo,Amount*256,0);
		MoveCp(Add,23*4);
		PreserveTrigger();
	}
}
end

CUnit_PlacedUnitHP(3,400000)
CUnit_PlacedUnitHP(23,500000)
CUnit_PlacedUnitHP(74,666666)
CUnit_PlacedUnitHP(29,200000)
CUnit_PlacedUnitHP(15,20211)
CUnit_PlacedUnitHP(77,20211)
CUnit_PlacedUnitHP(78,20211)
CUnit_PlacedUnitHP(21,20211)
CUnit_PlacedUnitHP(80,20211)
CUnit_PlacedUnitHP(52,50000)
CUnit_PlacedUnitHP(25,20211)
CUnit_PlacedUnitHP(17,20211)
CUnit_PlacedUnitHP(76,20211)
CUnit_PlacedUnitHP(86,20211)
CUnit_PlacedUnitHP(98,100000)
CUnit_PlacedUnitHP(10,100000)
CUnit_PlacedUnitHP(32,300000)
CUnit_PlacedUnitHP(19,100000)
CUnit_PlacedUnitHP(65,100000)
CUnit_PlacedUnitHP(66,100000)
CUnit_PlacedUnitHP(28,20211)
CUnit_PlacedUnitHP(75,20211)


CIfX(FP,TTOR({
DeathsX(CurrentPlayer,Exactly,216,0,0xFF),
DeathsX(CurrentPlayer,Exactly,190,0,0xFF),
DeathsX(CurrentPlayer,Exactly,147,0,0xFF),
DeathsX(CurrentPlayer,Exactly,156,0,0xFF),
DeathsX(CurrentPlayer,Exactly,109,0,0xFF),
DeathsX(CurrentPlayer,Exactly,173,0,0xFF),
DeathsX(CurrentPlayer,Exactly,201,0,0xFF),
DeathsX(CurrentPlayer,Exactly,175,0,0xFF),
DeathsX(CurrentPlayer,Exactly,152,0,0xFF),
DeathsX(CurrentPlayer,Exactly,151,0,0xFF),
}))
DoActions(FP,{
MoveCp(Add,0xDC-0x64),
SetDeathsX(CurrentPlayer,SetTo,0xB00,0,0xB00),
MoveCp(Subtract,0xDC-0x94),
SetDeathsX(CurrentPlayer,SetTo,0,0,0xFF0000),
MoveCp(Add,0xE4-0x94),
SetDeathsX(CurrentPlayer,SetTo,0,0,0xFFFFFFFF),
MoveCp(Subtract,0xE4-0x64)})
CIfXEnd()



NJump(FP,0x17,DeathsX(CurrentPlayer,Exactly,132,0,0xFF))
NJump(FP,0x18,DeathsX(CurrentPlayer,Exactly,133,0,0xFF))
NJump(FP,0x19,DeathsX(CurrentPlayer,Exactly,216,0,0xFF))
NJump(FP,0x1A,DeathsX(CurrentPlayer,Exactly,152,0,0xFF))

DoActions(FP,MoveCp(Subtract,6*4))
BreakCalc(DeathsX(CurrentPlayer,AtMost,0,0,0xFF00))
DoActions(FP,MoveCp(Add,6*4))
OrCondForHeroArr = {}
for i = 1, #HeroIndexArr do
table.insert(OrCondForHeroArr,DeathsX(CurrentPlayer,Exactly,HeroIndexArr[i],0,0xFF))
end
table.insert(OrCondForHeroArr,DeathsX(CurrentPlayer,Exactly,162,0,0xFF))
table.insert(OrCondForHeroArr,DeathsX(CurrentPlayer,Exactly,176,0,0xFF))
table.insert(OrCondForHeroArr,DeathsX(CurrentPlayer,Exactly,177,0,0xFF))
table.insert(OrCondForHeroArr,DeathsX(CurrentPlayer,Exactly,178,0,0xFF))
CIf(FP,TTOR(OrCondForHeroArr))
DoActions(FP,{MoveCp(Subtract,16*4),SetDeathsX(CurrentPlayer,SetTo,1*65536,0,0xff0000)})
CIfEnd()

CunitCtrig_Part2()
NJumpEnd(FP,0x17)
NJumpEnd(FP,0x18)
DoActions(FP,MoveCp(Subtract,6*4))
for i=0, 11 do
Trigger {
	players = {FP},
	conditions = {
		DeathsX(CurrentPlayer,Exactly,i,0,0xFF);
	},
	actions = {
		MoveCp(Subtract,10*4);
		SetDeathsX(CurrentPlayer,SetTo,i*0x10000,0,0xFF0000);
		MoveCp(Add,10*4);
		PreserveTrigger();
	}
	}
end
ClearCalc()
NJumpEnd(FP,0x19)
DoActions(FP,MoveCp(Subtract,6*4))
Trigger {
	players = {FP},
	conditions = {
		DeathsX(CurrentPlayer,Exactly,7,0,0xFF);
	},
	actions = {
		MoveCp(Subtract,10*4);
		SetDeathsX(CurrentPlayer,SetTo,1*0x10000,0,0xFF0000);
		MoveCp(Add,10*4);
		PreserveTrigger();
	}
	}
ClearCalc()
NJumpEnd(FP,0x1A)
DoActions(FP,MoveCp(Subtract,6*4))
Trigger {
	players = {FP},
	conditions = {
		DeathsX(CurrentPlayer,Exactly,7,0,0xFF);
	},
	actions = {
		MoveCp(Subtract,10*4);
		SetDeathsX(CurrentPlayer,SetTo,1*0x10000,0,0xFF0000);
		MoveCp(Add,10*4);
		PreserveTrigger();
	}
	}
ClearCalc()

MoveCp("X",0x0)
CunitCtrig_Part3X()
for i = 0, 1699 do -- Part4X 용 Cunit Loop (x1700)
CunitCtrig_Part4X(i,{},
{MoveCp(Add,25*4)})
end
CunitCtrig_End()
DoActions(FP,{GiveUnits(All,132,AllPlayers,"Anywhere",6),GiveUnits(All,133,AllPlayers,"Anywhere",7)})
GiveTable ={}
for i = 0, 11 do
table.insert(GiveTable,GiveUnits(All,132,i,"Anywhere",6))
table.insert(GiveTable,GiveUnits(All,133,i,"Anywhere",7))
end
DoActions2(FP,GiveTable,1)
SetRecoverCp()
RecoverCp(FP)
CIfEnd() -- OnpluginStartEnd
CIf(AllPlayers,{Switch("Switch 201",Set)}) -- GameStart
DoActions2(FP,ButtonSetPatch2,1)

Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,Exactly,1,GMode);
	},
	actions = {
		
		SetMemory(0x662350 + (23*4), SetTo, (50000*256));
		SetMemory(0x662350 + (74*4), SetTo, (50000*256));
		SetMemory(0x662350 + (68*4), SetTo, (50000*256));
		SetMemory(0x662350 + (61*4), SetTo, (50000*256));
		SetMemory(0x662350 + (32*4), SetTo, (30000*256));
		SetMemory(0x662350 + (29*4), SetTo, (30000*256));
		PreserveTrigger();
	}
}
for i = 0, 5 do
Trigger {
	players = {i},
	conditions = {
		Label(0);
		CDeaths(FP,AtLeast,2,HMDeaths+i*65536);
	},
	actions = {
		SetCDeaths(FP,Subtract,2,HMDeaths+i*65536);
		SetScore(CurrentPlayer,Add,1,Custom);
		PreserveTrigger();
	}
}
end


CIf(FP,CDeaths(FP,AtLeast,2,GMode))
CMov(FP,ExchangeRateT,ExchangeRate)
CIf(FP,CVar(FP,ExchangeRateT[2],AtLeast,0x80000000))
CNeg(FP,ExchangeRateT)
Trigger {
	players = {FP},
	conditions = {
		Label(0);
	},
	actions = {
		SetCDeaths(FP,Add,1,ExchangeRateTMinusFlag);
	}
}
CIfEnd()
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtLeast,1,ExchangeRateTMinusFlag);
	},
	actions = {
		SetMemoryX(0x6415BC,SetTo,0x2D*0x100,0xFF00);
		PreserveTrigger();
	}
}
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtLeast,10,BonusP);
	},
	actions = {
		SetCVar(FP,PaneltyPoint[2],Subtract,1);
		SetCDeaths(FP,Subtract,10,BonusP);
		PreserveTrigger();
	}
}

Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CVar(FP,PaneltyPoint[2],AtLeast,1000);
		CDeaths(FP,Exactly,2,GMode);
	},
	actions = {
		SetMemory(0x6509B0,SetTo,0);
		PlayWAV("sound\\Bullet\\TNsFir00.wav");
		PlayWAV("sound\\Bullet\\TNsFir00.wav");
		PlayWAV("sound\\Bullet\\TNsFir00.wav");
		SetMemory(0x6509B0,SetTo,1);
		PlayWAV("sound\\Bullet\\TNsFir00.wav");
		PlayWAV("sound\\Bullet\\TNsFir00.wav");
		PlayWAV("sound\\Bullet\\TNsFir00.wav");
		SetMemory(0x6509B0,SetTo,2);
		PlayWAV("sound\\Bullet\\TNsFir00.wav");
		PlayWAV("sound\\Bullet\\TNsFir00.wav");
		PlayWAV("sound\\Bullet\\TNsFir00.wav");
		SetMemory(0x6509B0,SetTo,3);
		PlayWAV("sound\\Bullet\\TNsFir00.wav");
		PlayWAV("sound\\Bullet\\TNsFir00.wav");
		PlayWAV("sound\\Bullet\\TNsFir00.wav");
		SetMemory(0x6509B0,SetTo,4);
		PlayWAV("sound\\Bullet\\TNsFir00.wav");
		PlayWAV("sound\\Bullet\\TNsFir00.wav");
		PlayWAV("sound\\Bullet\\TNsFir00.wav");
		SetMemory(0x6509B0,SetTo,5);
		PlayWAV("sound\\Bullet\\TNsFir00.wav");
		PlayWAV("sound\\Bullet\\TNsFir00.wav");
		PlayWAV("sound\\Bullet\\TNsFir00.wav");
		SetMemory(0x6509B0,SetTo,128);
		PlayWAV("sound\\Bullet\\TNsFir00.wav");
		PlayWAV("sound\\Bullet\\TNsFir00.wav");
		PlayWAV("sound\\Bullet\\TNsFir00.wav");
		SetMemory(0x6509B0,SetTo,129);
		PlayWAV("sound\\Bullet\\TNsFir00.wav");
		PlayWAV("sound\\Bullet\\TNsFir00.wav");
		PlayWAV("sound\\Bullet\\TNsFir00.wav");
		SetMemory(0x6509B0,SetTo,130);
		PlayWAV("sound\\Bullet\\TNsFir00.wav");
		PlayWAV("sound\\Bullet\\TNsFir00.wav");
		PlayWAV("sound\\Bullet\\TNsFir00.wav");
		SetMemory(0x6509B0,SetTo,131);
		PlayWAV("sound\\Bullet\\TNsFir00.wav");
		PlayWAV("sound\\Bullet\\TNsFir00.wav");
		PlayWAV("sound\\Bullet\\TNsFir00.wav");
		SetMemory(0x6509B0,SetTo,FP);
		SetCVar(FP,PaneltyPoint[2],Subtract,1000);
		SetCVar(FP,ExchangeRate[2],Add,-8);
		PreserveTrigger();
	}
}
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CVar(FP,PaneltyPoint[2],AtLeast,1000);
		CDeaths(FP,Exactly,3,GMode);
	},
	actions = {
		SetMemory(0x6509B0,SetTo,0);
		PlayWAV("sound\\Bullet\\TNsFir00.wav");
		PlayWAV("sound\\Bullet\\TNsFir00.wav");
		PlayWAV("sound\\Bullet\\TNsFir00.wav");
		SetMemory(0x6509B0,SetTo,1);
		PlayWAV("sound\\Bullet\\TNsFir00.wav");
		PlayWAV("sound\\Bullet\\TNsFir00.wav");
		PlayWAV("sound\\Bullet\\TNsFir00.wav");
		SetMemory(0x6509B0,SetTo,2);
		PlayWAV("sound\\Bullet\\TNsFir00.wav");
		PlayWAV("sound\\Bullet\\TNsFir00.wav");
		PlayWAV("sound\\Bullet\\TNsFir00.wav");
		SetMemory(0x6509B0,SetTo,3);
		PlayWAV("sound\\Bullet\\TNsFir00.wav");
		PlayWAV("sound\\Bullet\\TNsFir00.wav");
		PlayWAV("sound\\Bullet\\TNsFir00.wav");
		SetMemory(0x6509B0,SetTo,4);
		PlayWAV("sound\\Bullet\\TNsFir00.wav");
		PlayWAV("sound\\Bullet\\TNsFir00.wav");
		PlayWAV("sound\\Bullet\\TNsFir00.wav");
		SetMemory(0x6509B0,SetTo,5);
		PlayWAV("sound\\Bullet\\TNsFir00.wav");
		PlayWAV("sound\\Bullet\\TNsFir00.wav");
		PlayWAV("sound\\Bullet\\TNsFir00.wav");
		SetMemory(0x6509B0,SetTo,128);
		PlayWAV("sound\\Bullet\\TNsFir00.wav");
		PlayWAV("sound\\Bullet\\TNsFir00.wav");
		PlayWAV("sound\\Bullet\\TNsFir00.wav");
		SetMemory(0x6509B0,SetTo,129);
		PlayWAV("sound\\Bullet\\TNsFir00.wav");
		PlayWAV("sound\\Bullet\\TNsFir00.wav");
		PlayWAV("sound\\Bullet\\TNsFir00.wav");
		SetMemory(0x6509B0,SetTo,130);
		PlayWAV("sound\\Bullet\\TNsFir00.wav");
		PlayWAV("sound\\Bullet\\TNsFir00.wav");
		PlayWAV("sound\\Bullet\\TNsFir00.wav");
		SetMemory(0x6509B0,SetTo,131);
		PlayWAV("sound\\Bullet\\TNsFir00.wav");
		PlayWAV("sound\\Bullet\\TNsFir00.wav");
		PlayWAV("sound\\Bullet\\TNsFir00.wav");
		SetMemory(0x6509B0,SetTo,FP);
		SetCVar(FP,PaneltyPoint[2],Subtract,1000);
		SetCVar(FP,ExchangeRate[2],Add,-15);
		PreserveTrigger();
	}
}
CMov(FP,PaneltyPointT,PaneltyPoint)
DoActions(FP,{
		SetMemory(0x641598, SetTo, 0x8E80E307);
		SetMemory(0x64159C, SetTo, 0x6E550820);
		SetMemory(0x6415A0, SetTo, 0x20737469);
		SetMemory(0x6415A4, SetTo, 0x0D03203A);
		SetMemory(0x6415A8, SetTo, 0x30303030);
		SetMemory(0x6415AC, SetTo, 0x202D0420);
		SetMemory(0x6415B0, SetTo, 0x63784518);
		SetMemory(0x6415B4, SetTo, 0x676E6168);
		SetMemory(0x6415B8, SetTo, 0x203A2065);
		SetMemory(0x6415BC, SetTo, 0x300D0D03);
		SetMemory(0x6415C0, SetTo, 0x25302E30);
		SetMemory(0x6415C4, SetTo, 0x202D0420);
		SetMemory(0x6415C8, SetTo, 0x30303030);
		SetMemory(0x6415CC, SetTo, 0x3030312F);
		SetMemory(0x6415D0, SetTo, 0xE3072030);
		SetMemory(0x6415D4, SetTo, 0x00008F80);
})
for i = 3, 0, -1 do
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CVar(FP,PaneltyPointT[2],AtLeast,(2^i)*1000);
		
	},
	actions = {
		SetMemory(0x6415C8,SetTo,(2^i)*1,2^i*1);
		SetCVar(FP,PaneltyPointT[2],Subtract,(2^i)*1000);
		PreserveTrigger();
	}
}
end

for i = 3, 0, -1 do
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CVar(FP,PaneltyPointT[2],AtLeast,(2^i)*100);
		
	},
	actions = {
		SetMemoryX(0x6415C8,SetTo,(2^i)*256,2^i*256);
		SetCVar(FP,PaneltyPointT[2],Subtract,(2^i)*100);
		PreserveTrigger();
	}
}
end
for i = 3, 0, -1 do
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CVar(FP,PaneltyPointT[2],AtLeast,(2^i)*10);
		
	},
	actions = {
		SetMemoryX(0x6415C8,SetTo,(2^i)*65536,2^i*65536);
		SetCVar(FP,PaneltyPointT[2],Subtract,(2^i)*10);
		PreserveTrigger();
	}
}
end
for i = 3, 0, -1 do
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CVar(FP,PaneltyPointT[2],AtLeast,(2^i)*1);
		
	},
	actions = {
		SetMemoryX(0x6415C8,SetTo,(2^i)*16777216,2^i*16777216);
		SetCVar(FP,PaneltyPointT[2],Subtract,(2^i)*1);
		PreserveTrigger();
	}
}
end

for i = 3, 0, -1 do
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CVar(FP,ExchangeRateT[2],AtLeast,(2^i)*100);
		
	},
	actions = {
		SetMemoryX(0x6415BC,SetTo,(2^i)*16777216,2^i*16777216);
		SetCVar(FP,ExchangeRateT[2],Subtract,(2^i)*100);
		PreserveTrigger();
	}
}
end
for i = 3, 0, -1 do
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CVar(FP,ExchangeRateT[2],AtLeast,(2^i)*10);
		
	},
	actions = {
		SetMemoryX(0x6415C0,SetTo,(2^i)*1,2^i*1);
		SetCVar(FP,ExchangeRateT[2],Subtract,(2^i)*10);
		PreserveTrigger();
	}
}
end
for i = 3, 0, -1 do
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CVar(FP,ExchangeRateT[2],AtLeast,(2^i)*1);
		
	},
	actions = {
		SetMemoryX(0x6415C0,SetTo,(2^i)*65536,2^i*65536);
		SetCVar(FP,ExchangeRateT[2],Subtract,(2^i)*1);
		PreserveTrigger();
	}
}
end




CIfEnd()
CIf(FP,CDeaths(FP,Exactly,1,GMode))
DoActions(FP,{
		SetMemory(0x641598, SetTo, 0x8E80E307);
		SetMemory(0x64159C, SetTo, 0x6E550820);
		SetMemory(0x6415A0, SetTo, 0x20737469);
		SetMemory(0x6415A4, SetTo, 0x0D03203A);
		SetMemory(0x6415A8, SetTo, 0x30303030);
		SetMemory(0x6415AC, SetTo, 0x80E30720);
		SetMemory(0x6415B0, SetTo, 0x0000008F);
})


CIfEnd()


for i = 3, 0, -1 do
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CVar(FP,count[2],AtLeast,(2^i)*1000);
		
	},
	actions = {
		SetMemoryX(0x6415A8,SetTo,(2^i)*1,2^i*1);
		SetCVar(FP,count[2],Subtract,(2^i)*1000);
		PreserveTrigger();
	}
}
end
for i = 3, 0, -1 do
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CVar(FP,count[2],AtLeast,(2^i)*100);
		
	},
	actions = {
		SetMemoryX(0x6415A8,SetTo,(2^i)*256,2^i*256);
		SetCVar(FP,count[2],Subtract,(2^i)*100);
		PreserveTrigger();
	}
}
end
for i = 3, 0, -1 do
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CVar(FP,count[2],AtLeast,(2^i)*10);
		
	},
	actions = {
		SetMemoryX(0x6415A8,SetTo,(2^i)*65536,2^i*65536);
		SetCVar(FP,count[2],Subtract,(2^i)*10);
		PreserveTrigger();
	}
}
end
for i = 3, 0, -1 do
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CVar(FP,count[2],AtLeast,(2^i)*1);
		
	},
	actions = {
		SetMemoryX(0x6415A8,SetTo,(2^i)*16777216,2^i*16777216);
		SetCVar(FP,count[2],Subtract,(2^i)*1);
		PreserveTrigger();
	}
}
end

CIf(FP,CDeaths(FP,AtLeast,1,TestMode))

--DoActions(FP,ModifyUnitHitPoints(All,"Men",force1,64,100))
Trigger {
	players = {FP},
	conditions = {
		Deaths(P1,AtLeast,1,214);
	},
	actions = {
		KillUnit("Men",Force2);
		KillUnit("Sunken Colony",Force2);
		KillUnit("Creep Colony",Force2);
		KillUnit("Spore Colony",Force2);
		PreserveTrigger();
	}
	}

CIfEnd()
CIf(FP,Command(AllPlayers,AtLeast,1,"Dark Swarm"))
DoActions(FP,{MoveLocation(1,"Dark Swarm",AllPlayers,"Anywhere"),CreateUnit(1,84,1,FP),CreateUnit(1,21,1,P7),CreateUnit(1,80,1,P8)})

CreateUnitPolygonSafe2Gun(FP,Always(),19,0,32,64,30,6,1,P8,{1,51})
DoActions(FP,RemoveUnitAt(1,"Dark Swarm",1,AllPlayers))
DoActions(FP,{KillUnit(84,FP),KillUnit(72,FP)})
CIfEnd()

-- 193번 오브젝트(프로토스 마커, 파일런 깨면 나오는거) 존재시 처리
CIf(FP,Command(AllPlayers,AtLeast,1,193))
DoActions(FP,{
SetMemory(0x58DC60 + 0x14*0,SetTo,0),
SetMemory(0x58DC68 + 0x14*0,SetTo,32),
SetMemory(0x58DC64 + 0x14*0,SetTo,0),
SetMemory(0x58DC6C + 0x14*0,SetTo,32),
})
CWhile(FP,Bring(FP,AtLeast,1,193,64))
DoActions(FP,{
MoveLocation(1,193,FP,"Anywhere"),
CreateUnit(1,84,1,FP),
GiveUnits(All,193,FP,"Anywhere",6)})

CWhileEnd()
DoActions(FP,{GiveUnits(All,193,6,"Anywhere",FP),Order(193,AllPlayers,"Anywhere",Move,2),SetSwitch("Switch 10",Random),SetSwitch("Switch 11",Random)})
DoActions(FP,{
		SetMemory(0x662350 + (74*4), SetTo, (150000*256)/3);
})

CreateUnitPolygonSafeWithPropertiesGun(FP,Bring(FP,AtLeast,1,193,2),13,1,32,128,30,4,1,P8,{1,74,1,88,1,65,1,66},{hitpoint = 50})
DoActions(FP,{
		SetMemory(0x662350 + (74*4), SetTo, (150000*256));
})
CreateUnitStarSafeGun(FP,Bring(FP,AtLeast,1,193,2),31,1,32,128,126,5,108,1,FP,{1,84})
Trigger {
	players = {FP},
		conditions = {
			Bring(FP,AtLeast,1,193,2);
			},
	actions = {
		SetDeaths(FP,Add,1,156);
		KillUnitAt(1,193,2,AllPlayers);
		PreserveTrigger();
		},
	}
wav = "staredit\\wav\\zealot1.ogg"
Trigger {
	players = {FP},
	conditions = {
		Bring(AllPlayers,AtLeast,1,193,2);
		Switch("Switch 10",Cleared);
		Switch("Switch 11",Cleared);
	},
	actions = {
		SetMemory(0x6509B0,SetTo,0);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,1);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,2);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,3);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,4);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,5);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,128);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,129);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,130);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,131);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,FP);
		PreserveTrigger();
		},
	}

wav = "staredit\\wav\\zealot2.ogg"
Trigger {
	players = {FP},
	conditions = {
		Bring(AllPlayers,AtLeast,1,193,2);
		Switch("Switch 10",Set);
		Switch("Switch 11",Cleared);
	},
	actions = {
		SetMemory(0x6509B0,SetTo,0);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,1);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,2);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,3);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,4);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,5);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,128);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,129);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,130);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,131);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,FP);
		PreserveTrigger();
		},
	}

wav = "staredit\\wav\\zealot3.ogg"
Trigger {
	players = {FP},
	conditions = {
		Bring(AllPlayers,AtLeast,1,193,2);
		Switch("Switch 10",Cleared);
		Switch("Switch 11",Set);
	},
	actions = {
		SetMemory(0x6509B0,SetTo,0);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,1);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,2);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,3);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,4);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,5);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,128);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,129);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,130);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,131);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,FP);
		PreserveTrigger();
		},
	}

wav = "staredit\\wav\\zealot4.ogg"
Trigger {
	players = {FP},
	conditions = {
		Bring(AllPlayers,AtLeast,1,193,2);
		Switch("Switch 10",Set);
		Switch("Switch 11",Set);
	},
	actions = {
		SetMemory(0x6509B0,SetTo,0);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,1);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,2);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,3);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,4);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,5);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,128);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,129);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,130);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,131);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,FP);
		PreserveTrigger();
		},
	}
CIfEnd()

CIf(FP,Command(AllPlayers,AtLeast,1,192))
DoActions(FP,{
SetMemory(0x58DC60 + 0x14*0,SetTo,0),
SetMemory(0x58DC68 + 0x14*0,SetTo,0),
SetMemory(0x58DC64 + 0x14*0,SetTo,0),
SetMemory(0x58DC6C + 0x14*0,SetTo,0),
})
CWhile(FP,Bring(FP,AtLeast,1,192,64))
DoActions(FP,{
MoveLocation(1,192,FP,"Anywhere"),
CreateUnit(1,9,1,FP),
GiveUnits(All,192,FP,"Anywhere",6)})
CWhileEnd()
DoActions(FP,{GiveUnits(All,192,6,"Anywhere",FP),Order(192,AllPlayers,"Anywhere",Move,2),SetSwitch("Switch 10",Random),SetSwitch("Switch 11",Random)})
DoActions(FP,{
		SetMemory(0x662350 + (23*4), SetTo, (150000*256)/3);
		SetMemory(0x662350 + (32*4), SetTo, (60000*256)/2);
})
CreateUnitPolygonSafeWithPropertiesGun(FP,Bring(FP,AtLeast,1,192,2),13,1,32,128,30,4,1,P8,{1,23,1,29,1,3,1,32},{hitpoint = 50})
CreateUnitPolygonSafe2Gun(FP,Bring(FP,AtLeast,1,192,2),13,1,32,128,30,4,1,P8,{1,23,1,29,1,3,1,32})
DoActions(FP,{
		SetMemory(0x662350 + (23*4), SetTo, (150000*256));
		SetMemory(0x662350 + (32*4), SetTo, (60000*256));
})
CreateUnitStarSafeGun(FP,Bring(AllPlayers,AtLeast,1,192,2),31,1,32,128,126,5,108,1,FP,{1,84})
Trigger {
	players = {FP},
		conditions = {
			Bring(FP,AtLeast,1,192,2);
			},
	actions = {
		SetDeaths(FP,Add,1,153);
		KillUnitAt(1,192,2,AllPlayers);
		PreserveTrigger();
		},
	}
wav = "sound\\Zerg\\BUGGUY\\ZBGPss00.wav"
Trigger {
	players = {FP},
	conditions = {
		Bring(AllPlayers,AtLeast,1,192,2);
		Switch("Switch 10",Cleared);
		Switch("Switch 11",Cleared);
	},
	actions = {
		SetMemory(0x6509B0,SetTo,0);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,1);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,2);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,3);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,4);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,5);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,128);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,129);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,130);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,131);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,FP);
		PreserveTrigger();
		},
	}

wav = "sound\\Zerg\\BUGGUY\\ZBGPss01.wav"
Trigger {
	players = {FP},
	conditions = {
		Bring(AllPlayers,AtLeast,1,192,2);
		Switch("Switch 10",Set);
		Switch("Switch 11",Cleared);
	},
	actions = {
		SetMemory(0x6509B0,SetTo,0);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,1);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,2);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,3);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,4);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,5);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,128);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,129);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,130);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,131);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,FP);
		PreserveTrigger();
		},
	}

wav = "sound\\Zerg\\BUGGUY\\ZBGPss02.wav"
Trigger {
	players = {FP},
	conditions = {
		Bring(AllPlayers,AtLeast,1,192,2);
		Switch("Switch 10",Cleared);
		Switch("Switch 11",Set);
	},
	actions = {
		SetMemory(0x6509B0,SetTo,0);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,1);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,2);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,3);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,4);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,5);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,128);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,129);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,130);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,131);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,FP);
		PreserveTrigger();
		},
	}

wav = "sound\\Zerg\\BUGGUY\\ZBGPss03.wav"
Trigger {
	players = {FP},
	conditions = {
		Bring(AllPlayers,AtLeast,1,192,2);
		Switch("Switch 10",Set);
		Switch("Switch 11",Set);
	},
	actions = {
		SetMemory(0x6509B0,SetTo,0);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,1);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,2);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,3);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,4);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,5);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,128);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,129);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,130);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,131);
		PlayWAV(wav);
		PlayWAV(wav);
		PlayWAV(wav);
		SetMemory(0x6509B0,SetTo,FP);
		PreserveTrigger();
		},
	}
CIfEnd()

function BKillPoint(BossCon,BIndex,BPoint,BName)
local BClear = "\n\n\n\n\n\n\n\n\n\n\n\x13\x07※※※※※※※※※※※※\x08 N O T I C E\x07 ※※※※※※※※※※※※\n\n\n\x13\x04적의 \x08수호자 "..BName.." \x04가 쓰러졌습니다.\n\x13\x10+\x17 "..BPoint.." P t s \n\n\x13\x07※※※※※※※※※※※※\x08 N O T I C E\x07 ※※※※※※※※※※※※"
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CVar(FP,Cell_R[2],Exactly,0);
		CDeaths(FP,AtLeast,2,GMode);
		BossCon;
		CommandLeastAt(BIndex,64);
	},
	actions = {
		SetScore(Force1,Add,BPoint,Kills);
		SetMemory(0x6509B0, SetTo, 0);
		DisplayText(BClear,4);
		PlayWAV("staredit\\wav\\BossKill.ogg");
		PlayWAV("staredit\\wav\\BossKill.ogg");
		PlayWAV("staredit\\wav\\BossKill.ogg");
		PlayWAV("staredit\\wav\\BossKill.ogg");
		SetMemory(0x6509B0, SetTo, 1);
		DisplayText(BClear,4);
		PlayWAV("staredit\\wav\\BossKill.ogg");
		PlayWAV("staredit\\wav\\BossKill.ogg");
		PlayWAV("staredit\\wav\\BossKill.ogg");
		PlayWAV("staredit\\wav\\BossKill.ogg");
		SetMemory(0x6509B0, SetTo, 2);
		DisplayText(BClear,4);
		PlayWAV("staredit\\wav\\BossKill.ogg");
		PlayWAV("staredit\\wav\\BossKill.ogg");
		PlayWAV("staredit\\wav\\BossKill.ogg");
		PlayWAV("staredit\\wav\\BossKill.ogg");
		SetMemory(0x6509B0, SetTo, 3);
		DisplayText(BClear,4);
		PlayWAV("staredit\\wav\\BossKill.ogg");
		PlayWAV("staredit\\wav\\BossKill.ogg");
		PlayWAV("staredit\\wav\\BossKill.ogg");
		PlayWAV("staredit\\wav\\BossKill.ogg");
		SetMemory(0x6509B0, SetTo, 4);
		DisplayText(BClear,4);
		PlayWAV("staredit\\wav\\BossKill.ogg");
		PlayWAV("staredit\\wav\\BossKill.ogg");
		PlayWAV("staredit\\wav\\BossKill.ogg");
		PlayWAV("staredit\\wav\\BossKill.ogg");
		SetMemory(0x6509B0, SetTo, 5);
		DisplayText(BClear,4);
		PlayWAV("staredit\\wav\\BossKill.ogg");
		PlayWAV("staredit\\wav\\BossKill.ogg");
		PlayWAV("staredit\\wav\\BossKill.ogg");
		PlayWAV("staredit\\wav\\BossKill.ogg");
		SetMemory(0x6509B0, SetTo, FP);
		SetCDeaths(FP,Add,1,BossKill);

	},
}
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CVar(FP,Cell_R[2],Exactly,0);
		CommandLeastAt(BIndex,64);
		BossCon
	},
	actions = {		
		SetMemory(0x6509B0, SetTo, 128);
		DisplayText(BClear,4);
		PlayWAV("staredit\\wav\\BossKill.ogg");
		PlayWAV("staredit\\wav\\BossKill.ogg");
		PlayWAV("staredit\\wav\\BossKill.ogg");
		PlayWAV("staredit\\wav\\BossKill.ogg");
		SetMemory(0x6509B0, SetTo, 129);
		DisplayText(BClear,4);
		PlayWAV("staredit\\wav\\BossKill.ogg");
		PlayWAV("staredit\\wav\\BossKill.ogg");
		PlayWAV("staredit\\wav\\BossKill.ogg");
		PlayWAV("staredit\\wav\\BossKill.ogg");
		SetMemory(0x6509B0, SetTo, 130);
		DisplayText(BClear,4);
		PlayWAV("staredit\\wav\\BossKill.ogg");
		PlayWAV("staredit\\wav\\BossKill.ogg");
		PlayWAV("staredit\\wav\\BossKill.ogg");
		PlayWAV("staredit\\wav\\BossKill.ogg");
		SetMemory(0x6509B0, SetTo, 131);
		DisplayText(BClear,4);
		PlayWAV("staredit\\wav\\BossKill.ogg");
		PlayWAV("staredit\\wav\\BossKill.ogg");
		PlayWAV("staredit\\wav\\BossKill.ogg");
		PlayWAV("staredit\\wav\\BossKill.ogg");
		SetMemory(0x6509B0, SetTo, FP);
	},
}
end


for i=0, 2 do
Trigger {
	players = {P7},
	conditions = {
		--Deaths(FP,AtMost,0,200);
		CommandLeastAt(168,34+i);
	},
	actions = {
		SetDeathsX(FP,Add,1,168,0xFF);
		SetDeathsX(FP,SetTo,(2^i)*0x10000,168,(2^i)*(0x10000));
	}
}
end
	GName = "수호자의 감옥 \x18Stasis Cell \x04을"
	GPoint = 300000
	Mode = 0
	GunText = "\n\n\n\n\n\n\n\n\n\x13\x08！ ！ ！ \x04적 "..GName.." 파괴하였다!\x17 + "..GPoint.." P t s\x08 ！ ！ ！\n\n"
	Trigger {
	players = {FP},
		conditions = {
		Label(0);
		DeathsX(FP,AtLeast,1,168,0xFF);
		CVar(FP,Cell_R[2],Exactly,0);
			},
		
	actions = {
		SetMemory(0x6509B0, SetTo, 0);
		DisplayText(GunText,4);
		PlayWAV("staredit\\wav\\BGM_Skip.ogg");
		PlayWAV("staredit\\wav\\BGM_Skip.ogg");
		PlayWAV("staredit\\wav\\BGM_Skip.ogg");
		SetMemory(0x6509B0, SetTo, 1);
		DisplayText(GunText,4);
		PlayWAV("staredit\\wav\\BGM_Skip.ogg");
		PlayWAV("staredit\\wav\\BGM_Skip.ogg");
		PlayWAV("staredit\\wav\\BGM_Skip.ogg");
		SetMemory(0x6509B0, SetTo, 2);
		DisplayText(GunText,4);
		PlayWAV("staredit\\wav\\BGM_Skip.ogg");
		PlayWAV("staredit\\wav\\BGM_Skip.ogg");
		PlayWAV("staredit\\wav\\BGM_Skip.ogg");
		SetMemory(0x6509B0, SetTo, 3);
		DisplayText(GunText,4);
		PlayWAV("staredit\\wav\\BGM_Skip.ogg");
		PlayWAV("staredit\\wav\\BGM_Skip.ogg");
		PlayWAV("staredit\\wav\\BGM_Skip.ogg");
		SetMemory(0x6509B0, SetTo, 4);
		DisplayText(GunText,4);
		PlayWAV("staredit\\wav\\BGM_Skip.ogg");
		PlayWAV("staredit\\wav\\BGM_Skip.ogg");
		PlayWAV("staredit\\wav\\BGM_Skip.ogg");
		SetMemory(0x6509B0, SetTo, 5);
		DisplayText(GunText,4);
		PlayWAV("staredit\\wav\\BGM_Skip.ogg");
		PlayWAV("staredit\\wav\\BGM_Skip.ogg");
		PlayWAV("staredit\\wav\\BGM_Skip.ogg");
		SetMemory(0x6509B0, SetTo, 128);
		DisplayText(GunText,4);
		PlayWAV("staredit\\wav\\BGM_Skip.ogg");
		PlayWAV("staredit\\wav\\BGM_Skip.ogg");
		PlayWAV("staredit\\wav\\BGM_Skip.ogg");
		SetMemory(0x6509B0, SetTo, 129);
		DisplayText(GunText,4);
		PlayWAV("staredit\\wav\\BGM_Skip.ogg");
		PlayWAV("staredit\\wav\\BGM_Skip.ogg");
		PlayWAV("staredit\\wav\\BGM_Skip.ogg");
		SetMemory(0x6509B0, SetTo, 130);
		DisplayText(GunText,4);
		PlayWAV("staredit\\wav\\BGM_Skip.ogg");
		PlayWAV("staredit\\wav\\BGM_Skip.ogg");
		PlayWAV("staredit\\wav\\BGM_Skip.ogg");
		SetMemory(0x6509B0, SetTo, 131);
		DisplayText(GunText,4);
		PlayWAV("staredit\\wav\\BGM_Skip.ogg");
		PlayWAV("staredit\\wav\\BGM_Skip.ogg");
		PlayWAV("staredit\\wav\\BGM_Skip.ogg");
		SetMemory(0x6509B0, SetTo, FP);
		SetScore(Force1,Add,GPoint,Kills);
		SetCVar(FP,Cell_R[2],SetTo,3172);
		SetDeathsX(FP,Subtract,1,168,0xFF);
		SetDeathsX(8,Add,1,168,0xFF);
		SetCDeaths(FP,SetTo,300,DBossGen);
		PreserveTrigger();
		},
	}
NIf(FP,CVar(FP,Cell_R[2],Exactly,0))
CIfOnce(FP,{Memory(0x628438,AtLeast,1),CDeaths(FP,AtLeast,2,GMode),DeathsX(FP,Exactly,(2^0)*0x10000,168,(2^0)*(0x10000))})
CRead(FP,Nextptrs,0x628438,"X",0xFFFFFF,1)
CMov(FP,TBossHPPtr,Nextptrs,2)
DoActions(FP,{CreateUnit(1,5,34,FP),SetMemoryX(0x664080+(25*4),SetTo,4,4)})
UnitReadX(FP,Force2,"Buildings",64,B1_Calc)
CIf(FP,CDeaths(FP,Exactly,2,GMode))
CMul(FP,B1_Calc,100)
CIfEnd()
CIf(FP,CDeaths(FP,Exactly,3,GMode))
CMul(FP,B1_Calc,400)
CIfEnd()

Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CVar(FP,B1_Calc[2],AtLeast,65535);
	},
	actions = {
		SetCVar(FP,B1_Calc[2],SetTo,65535);
	}
}

CDoActions(FP,{TSetMemory(_Add(Nextptrs,2),SetTo,3000000*256),TSetMemory(_Mem(TBossHP),SetTo,3000000*256),TSetMemory(0x656EC4, SetTo, _Mul(B1_Calc,65536),0xFFFF0000)})


BText = "\n\n\n\n\n\n\n\n\n\n\n\x13\x07※※※※※※※※※※※※\x08 N O T I C E\x07 ※※※※※※※※※※※※\n\n\n\x13\x04적의 \x08수호자 \x11Ｃ\x04ａｌｃｕｌａｔｏ\x08Ｒ \x04가 깨어났습니다.\n\n\n\x13\x07※※※※※※※※※※※※\x08 N O T I C E\x07 ※※※※※※※※※※※※"
	Trigger {
	players = {FP},
		conditions = {
		Label(0);
			},
	actions = {
		SetMemory(0x6509B0, SetTo, 0);
		DisplayText(BText,4);
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		SetMemory(0x6509B0, SetTo, 1);
		DisplayText(BText,4);
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		SetMemory(0x6509B0, SetTo, 2);
		DisplayText(BText,4);
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		SetMemory(0x6509B0, SetTo, 3);
		DisplayText(BText,4);
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		SetMemory(0x6509B0, SetTo, 4);
		DisplayText(BText,4);
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		SetMemory(0x6509B0, SetTo, 5);
		DisplayText(BText,4);
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		SetMemory(0x6509B0, SetTo, 128);
		DisplayText(BText,4);
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		SetMemory(0x6509B0, SetTo, 129);
		DisplayText(BText,4);
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		SetMemory(0x6509B0, SetTo, 130);
		DisplayText(BText,4);
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		SetMemory(0x6509B0, SetTo, 131);
		DisplayText(BText,4);
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		SetMemory(0x6509B0, SetTo, FP);
		PreserveTrigger();
		},
	}

CIfEnd()
CIfOnce(FP,{Memory(0x628438,AtLeast,1),CDeaths(FP,AtLeast,2,GMode),DeathsX(FP,Exactly,(2^1)*0x10000,168,(2^1)*(0x10000))})
CRead(FP,Nextptrs,0x628438,"X",0xFFFFFF,1)
CMov(FP,DBossPlaguePatch,Nextptrs,70)
DoActions(FP,CreateUnit(1,11,35,FP))
CDoActions(FP,{TSetMemory(_Add(Nextptrs,2),SetTo,5000000*256)})
BText = "\n\n\n\n\n\n\n\n\n\n\n\x13\x07※※※※※※※※※※※※\x08 N O T I C E\x07 ※※※※※※※※※※※※\n\n\n\x13\x04적의 \x08수호자 \x11Ｄ\x0Eｒｏｐ\x08Ｄ\x04ｅａｄ \x04가 깨어났습니다.\n\n\n\x13\x07※※※※※※※※※※※※\x08 N O T I C E\x07 ※※※※※※※※※※※※"
	Trigger {
	players = {FP},
		conditions = {
		Label(0);
			},
	actions = {
		SetMemory(0x6509B0, SetTo, 0);
		DisplayText(BText,4);
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		SetMemory(0x6509B0, SetTo, 1);
		DisplayText(BText,4);
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		SetMemory(0x6509B0, SetTo, 2);
		DisplayText(BText,4);
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		SetMemory(0x6509B0, SetTo, 3);
		DisplayText(BText,4);
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		SetMemory(0x6509B0, SetTo, 4);
		DisplayText(BText,4);
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		SetMemory(0x6509B0, SetTo, 5);
		DisplayText(BText,4);
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		SetMemory(0x6509B0, SetTo, 128);
		DisplayText(BText,4);
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		SetMemory(0x6509B0, SetTo, 129);
		DisplayText(BText,4);
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		SetMemory(0x6509B0, SetTo, 130);
		DisplayText(BText,4);
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		SetMemory(0x6509B0, SetTo, 131);
		DisplayText(BText,4);
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		SetMemory(0x6509B0, SetTo, FP);
		PreserveTrigger();
		},
	}

CIfEnd()
CIfOnce(FP,{Memory(0x628438,AtLeast,1),CDeaths(FP,AtLeast,2,GMode),CDeaths(FP,AtLeast,6000,GunBossAct),CDeaths(FP,AtLeast,2,FormCon)})
CRead(FP,Nextptrs,0x628438,"X",0xFFFFFF,1)
DoActions(FP,CreateUnit(1,82,36,FP))
CMov(FP,Boss1_H,Nextptrs,2)
CDoActions(FP,{TSetMemory(_Add(Nextptrs,2),SetTo,6000000*256),TSetDeaths(_Add(Nextptrs,13),SetTo,0,0),TSetDeathsX(_Add(Nextptrs,18),SetTo,0,0,0xFFFF)})
BText = "\n\n\n\n\n\n\n\n\n\n\n\x13\x07※※※※※※※※※※※※\x08 N O T I C E\x07 ※※※※※※※※※※※※\n\n\n\x13\x04적의 \x08수호자 \x08Ｇ\x11ａｒ\x18Ｇ\x10ａｎ\x1FＴ\x17ｕ\x0FＡ \x04가 깨어났습니다.\n\n\n\x13\x07※※※※※※※※※※※※\x08 N O T I C E\x07 ※※※※※※※※※※※※"
	Trigger {
	players = {FP},
		conditions = {
		Label(0);
			},
	actions = {
		SetMemory(0x6509B0, SetTo, 0);
		DisplayText(BText,4);
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		SetMemory(0x6509B0, SetTo, 1);
		DisplayText(BText,4);
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		SetMemory(0x6509B0, SetTo, 2);
		DisplayText(BText,4);
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		SetMemory(0x6509B0, SetTo, 3);
		DisplayText(BText,4);
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		SetMemory(0x6509B0, SetTo, 4);
		DisplayText(BText,4);
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		SetMemory(0x6509B0, SetTo, 5);
		DisplayText(BText,4);
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		SetMemory(0x6509B0, SetTo, 128);
		DisplayText(BText,4);
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		SetMemory(0x6509B0, SetTo, 129);
		DisplayText(BText,4);
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		SetMemory(0x6509B0, SetTo, 130);
		DisplayText(BText,4);
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		SetMemory(0x6509B0, SetTo, 131);
		DisplayText(BText,4);
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		PlayWAV("sound\\Terran\\MARINE\\TMaPss06.WAV");
		SetMemory(0x6509B0, SetTo, FP);
		PreserveTrigger();
		},
	}

CIfEnd()

BKillPoint({DeathsX(FP,Exactly,(2^0)*0x10000,168,(2^0)*(0x10000))},5,1000000,"\x11Ｃ\x04ａｌｃｕｌａｔｏ\x08Ｒ")
BKillPoint({DeathsX(FP,Exactly,(2^1)*0x10000,168,(2^1)*(0x10000)),CDeaths(FP,AtMost,0,DBossGen)},11,1000000,"\x11Ｄ\x0Eｒｏｐ\x08Ｄ\x04ｅａｄ")
NIfEnd()


BKillPoint({CDeaths(FP,AtLeast,6000,GunBossAct),CDeaths(FP,AtLeast,2,FormCon)},82,2000000,"\x08Ｇ\x11ａｒ\x18Ｇ\x10ａｎ\x1FＴ\x17ｕ\x0FＡ")
NIf(FP,Command(FP,AtLeast,1,5))

NIf(FP,{TTMemory(TBossHPPtr,NotSame,TBossHP)})
CRead(FP,TBossHPTemp,TBossHPPtr)
CAdd(FP,TBossSkill,_Sub(TBossHP,TBossHPTemp))
CDoActions(FP,{TSetMemory(_Mem(TBossHP),SetTo,TBossHPTemp)})
NIfEnd()

NWhile(FP,{CVar(FP,TBossSkill[2],AtLeast,10000*256)},{SetCVar(FP,TBossSkill[2],Subtract,10000*256),SetCVar(FP,TB_A[2],Add,10)})
f_Lengthdir(FP,250,TB_A,TB_X,TB_Y)

CDoActions(FP,{
SetMemory(0x58DC60 + 0x14*0,SetTo,0),
SetMemory(0x58DC68 + 0x14*0,SetTo,32),
SetMemory(0x58DC64 + 0x14*0,SetTo,0),
SetMemory(0x58DC6C + 0x14*0,SetTo,32),
MoveLocation(1,5,FP,64),
TSetMemory(0x58DC60 + 0x14*0,Add,TB_X),
TSetMemory(0x58DC68 + 0x14*0,Add,TB_X),
TSetMemory(0x58DC64 + 0x14*0,Add,TB_Y),
TSetMemory(0x58DC6C + 0x14*0,Add,TB_Y),CreateUnit(1,69,1,FP),CreateUnit(1,84,1,FP),
})

NIf(FP,CDeaths(FP,AtLeast,3,GMode))
f_Lengthdir(FP,250+64,TB_A,TB_X,TB_Y)

CDoActions(FP,{
SetMemory(0x58DC60 + 0x14*0,SetTo,0),
SetMemory(0x58DC68 + 0x14*0,SetTo,32),
SetMemory(0x58DC64 + 0x14*0,SetTo,0),
SetMemory(0x58DC6C + 0x14*0,SetTo,32),
MoveLocation(1,5,FP,64),
TSetMemory(0x58DC60 + 0x14*0,Add,TB_X),
TSetMemory(0x58DC68 + 0x14*0,Add,TB_X),
TSetMemory(0x58DC64 + 0x14*0,Add,TB_Y),
TSetMemory(0x58DC6C + 0x14*0,Add,TB_Y),CreateUnit(1,69,1,FP),CreateUnit(1,84,1,FP),
})
f_Lengthdir(FP,250+128,TB_A,TB_X,TB_Y)

CDoActions(FP,{
SetMemory(0x58DC60 + 0x14*0,SetTo,0),
SetMemory(0x58DC68 + 0x14*0,SetTo,32),
SetMemory(0x58DC64 + 0x14*0,SetTo,0),
SetMemory(0x58DC6C + 0x14*0,SetTo,32),
MoveLocation(1,5,FP,64),
TSetMemory(0x58DC60 + 0x14*0,Add,TB_X),
TSetMemory(0x58DC68 + 0x14*0,Add,TB_X),
TSetMemory(0x58DC64 + 0x14*0,Add,TB_Y),
TSetMemory(0x58DC6C + 0x14*0,Add,TB_Y),CreateUnit(1,69,1,FP),CreateUnit(1,84,1,FP),
})
NIfEnd()

NWhileEnd()
NIfEnd()

NIf(FP,Command(FP,AtLeast,1,11))
CTrigger(FP,CVar(FP,DBossPlaguePatch[2],AtLeast,1),{TSetMemoryX(DBossPlaguePatch,SetTo,0,0xFF0000)},1)
DoActions(FP,SetSwitch("Switch 1",Random))
Trigger {
	players = {FP},
	conditions = {
		Switch("Switch 1",Set);
	},
	actions = {
		SetMemoryB(0x6636B8+204, SetTo, 60); -- 무기변경
		PreserveTrigger();
		
	}
}
Trigger {
	players = {FP},
	conditions = {
		Switch("Switch 1",Cleared);
	},
	actions = {
		SetMemoryB(0x6636B8+204, SetTo, 84); -- 무기변경
		PreserveTrigger();
		
	}
}
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,Exactly,2,GMode);
	},
	actions = {
		SetMemoryX(0x656F58,SetTo,2222,0xFFFF);
	}
}
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,Exactly,3,GMode);
	},
	actions = {
		SetMemoryX(0x656F58,SetTo,3333,0xFFFF);
	}
}

f_Lengthdir(FP,DBossR,DBossA,DBossX,DBossY)
DoActions(FP,{
SetMemory(0x58DC60 + 0x14*0,SetTo,0),
SetMemory(0x58DC68 + 0x14*0,SetTo,32),
SetMemory(0x58DC64 + 0x14*0,SetTo,0),
SetMemory(0x58DC6C + 0x14*0,SetTo,32),
MoveLocation(1,11,FP,64),
})
CreateBulletPosCalc(204,20,DBossA,DBossX,DBossY)

f_Lengthdir(FP,DBossR,_Add(DBossA,180),DBossX,DBossY)
DoActions(FP,{
SetMemory(0x58DC60 + 0x14*0,SetTo,0),
SetMemory(0x58DC68 + 0x14*0,SetTo,32),
SetMemory(0x58DC64 + 0x14*0,SetTo,0),
SetMemory(0x58DC6C + 0x14*0,SetTo,32),
MoveLocation(1,11,FP,64),
})
CreateBulletPosCalc(204,20,DBossA,DBossX,DBossY)
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CVar(FP,DBossR[2],AtMost,0);
	},
	actions = {
		SetCVar(FP,DBossD[2],SetTo,0);
		SetCVar(FP,DBossU[2],SetTo,1);
		PreserveTrigger();
	}
}
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CVar(FP,DBossR[2],AtLeast,500);
	},
	actions = {
		SetCVar(FP,DBossD[2],SetTo,1);
		SetCVar(FP,DBossU[2],SetTo,0);
		PreserveTrigger();
	}
}

Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CVar(FP,DBossU[2],AtLeast,1);
	},
	actions = {
		SetCVar(FP,DBossR[2],Add,15);
		PreserveTrigger();
	}
}
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CVar(FP,DBossD[2],AtLeast,1);
	},
	actions = {
		SetCVar(FP,DBossR[2],Subtract,15);
		PreserveTrigger();
	}
}
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CVar(FP,DBossA[2],AtLeast,180);
		
	},
	actions = {
		SetCVar(FP,DBossA[2],Subtract,180);
		PreserveTrigger();
	}
}

CAdd(FP,DBossA,6)
NIfEnd()
NIf(FP,Command(FP,AtLeast,1,82))
CTrigger(FP,{
CDeaths(FP,Exactly,2,GMode),
TMemory(Boss1_H,AtMost,6000000*256)},
{TSetMemory(Boss1_H, Add, _Sub(_Mov(1500*256),_Mul(HiddenAtkM,300*256)))},1)
CTrigger(FP,{
CDeaths(FP,Exactly,3,GMode),
TMemory(Boss1_H,AtMost,8000000*256)},
{TSetMemory(Boss1_H, Add, _Sub(_Mov(3500*256),_Mul(HiddenAtkM,700*256)))},1)


Trigger {
	players = {FP},
		conditions = {
		Label(0);
		Bring(Force1, AtLeast, 1, "Men", 36)
			},
	actions = {
		SetCVar(FP,B1_U[2],Add,1);
		SetCVar(FP,B1_D[2],SetTo,0);
		PreserveTrigger();
		},
	}
Trigger {
	players = {FP},
		conditions = {
		Label(0);
		Bring(Force1, Exactly, 0, "Men", 36)
			},
	actions = {
		SetCVar(FP,B1_D[2],Add,1);
		SetCVar(FP,B1_U[2],SetTo,0);
		PreserveTrigger();
		},
	}
CMov(FP,B1_E,B1_C)

NIf(FP,CVar(FP,B1_F[2],Exactly,30),SetCVar(FP,B1_F[2],SetTo,0))
-- 이하 모두 수정 요망
DoActions(FP,{
--SetMemoryW(0x656EB0 + (124*2), SetTo, 7), -- 공격력
SetMemoryB(0x6636B8+204, SetTo, 124), -- 무기변경
--SetMemoryB(0x6566F8+124, SetTo, 3), -- 스플설정
--SetMemoryW(0x656888 + (2*124), SetTo, 384), -- 스플
--SetMemoryW(0x6570C8 + (2*124), SetTo, 384), -- 스플
--SetMemoryW(0x657780 + (2*124), SetTo, 384), -- 스플
})
NWhile(FP,CVar(FP,B1_E[2],AtLeast,1),SetCVar(FP,B1_E[2],Subtract,1))

CMod(FP,B1_X,_Rand(),640)
CMod(FP,B1_Y,_Rand(),576)
CMod(FP,B1_A,_Rand(),256)
CAdd(FP,B1_X,384)
CAdd(FP,B1_Y,224)
CreateBullet(204,20,B1_A,B1_X,B1_Y)


NWhileEnd()

NIfEnd()

CAdd(FP,B1_F,1)


NIf(FP,{CVar(FP,B1_U[2],Exactly,30),CDeaths(FP,Exactly,2,GMode)},SetCVar(FP,B1_U[2],SetTo,0))

Trigger {
	players = {FP},
		conditions = {
		Label(0);
		CVar(FP,B1_C[2],AtMost,128);
			},
	actions = {
		SetMemoryB(0x669E28 + 557,SetTo,17);
		SetMemoryB(0x669E28 + 558,SetTo,17);
		SetMemoryB(0x669E28 + 559,SetTo,17);
		SetCVar(FP,B1_C[2],Add,1);
		CreateUnitWithProperties(1, 84, 36, FP, { hallucinated = true });
		KillUnit(84,FP);
		PreserveTrigger();
		},
	}
NIfEnd()
NIf(FP,{CVar(FP,B1_U[2],Exactly,21),CDeaths(FP,Exactly,3,GMode)},SetCVar(FP,B1_U[2],SetTo,0))
Trigger {
	players = {FP},
		conditions = {
		Label(0);
		CVar(FP,B1_C[2],AtMost,128);
			},
	actions = {
		SetMemoryB(0x669E28 + 557,SetTo,17);
		SetMemoryB(0x669E28 + 558,SetTo,17);
		SetMemoryB(0x669E28 + 559,SetTo,17);
		SetCVar(FP,B1_C[2],Add,1);
		CreateUnitWithProperties(1, 84, 36, FP, {hallucinated=true});
		KillUnit(84,FP);
		PreserveTrigger();
		},
	}
NIfEnd()

NIf(FP,{CVar(FP,B1_D[2],Exactly,24*2)},SetCVar(FP,B1_D[2],SetTo,0))

Trigger {
	players = {FP},
		conditions = {
		Label(0);
		CVar(FP,B1_C[2],AtLeast,1);
			},
	actions = {
		SetMemoryB(0x669E28 + 557,SetTo,10);
		SetMemoryB(0x669E28 + 558,SetTo,10);
		SetMemoryB(0x669E28 + 559,SetTo,10);
		SetCVar(FP,B1_C[2],Subtract,1);
		CreateUnitWithProperties(1, 84, 36, FP, {hallucinated=true});
		KillUnit(84,FP);
		PreserveTrigger();
		},
	}
NIfEnd()
NIfEnd()



NIf(FP,CVar(FP,Cell_R[2],AtLeast,1))
CMov(FP,Gun_TempPosX,1024)
CMov(FP,Gun_TempPosY,2400)
CMov(FP,Gun_W,0)
NWhile(FP,CVar(FP,Gun_W[2],AtMost,4),SetCVar(FP,Gun_W[2],Add,1))
f_Lengthdir(FP,_Sub(Cell_R,100),_Add(_Mul(Gun_W,72),Cell_A),Gun_X,Gun_Y)
Call_Gun_LocPos()
DoActions(FP,{
		SetMemoryX(0x666458, SetTo, 391,0xFFFF);
		SetMemoryX(0x669FAC, SetTo, 13*16777216,0xFF000000);
CreateUnit(1,33,1,FP)
})
NIf(FP,{CDeaths(FP,AtLeast,2,GMode),CDeaths(FP,AtLeast,1,GunBossAct),CDeaths(FP,Exactly,0,GunBossT),CVar(FP,Cell_R[2],AtLeast,100)})

GunBossUIDArr = {80,86,102,98,88}

Trigger {
	players = {FP},
	conditions = {
	},
	actions = {
		SetMemory(0x6509B0,SetTo,0);
		RunAIScript("Turn ON Shared Vision for Player 8");
		SetMemory(0x6509B0,SetTo,1);
		RunAIScript("Turn ON Shared Vision for Player 8");
		SetMemory(0x6509B0,SetTo,2);
		RunAIScript("Turn ON Shared Vision for Player 8");
		SetMemory(0x6509B0,SetTo,3);
		RunAIScript("Turn ON Shared Vision for Player 8");
		SetMemory(0x6509B0,SetTo,4);
		RunAIScript("Turn ON Shared Vision for Player 8");
		SetMemory(0x6509B0,SetTo,5);
		RunAIScript("Turn ON Shared Vision for Player 8");
		SetMemory(0x6509B0,SetTo,FP);
	}
}


for i = 1, #GunBossUIDArr do
Trigger {
	players = {FP},
		conditions = {
		Label(0);
		CVar(FP,Gun_W[2],Exactly,i);
			},
	actions = {
		SetCVar(FP,GunBoss_UID[2],SetTo,GunBossUIDArr[i]);
		PreserveTrigger();
		},
	}
end

NIf(FP,{
Memory(0x58DC60 + 0x14*0,AtMost,4096),
Memory(0x58DC68 + 0x14*0,AtMost,4096),
Memory(0x58DC64 + 0x14*0,AtMost,4096),
Memory(0x58DC6C + 0x14*0,AtMost,4096)})
CDoActions(FP,{
TCreateUnit(1,GunBoss_UID,1,FP),
TGiveUnits(All,GunBoss_UID,FP,"Anywhere",11),
TSetInvincibility(Enable,GunBoss_UID,11,64)

})

NIfEnd()
NIfEnd()
NWhileEnd()
CAdd(FP,Cell_A,10)
CSub(FP,Cell_R,15)
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CVar(FP,Cell_A[2],AtLeast,72);
	},
	actions = {
		SetCVar(FP,Cell_A[2],Subtract,72);
		PreserveTrigger();
	}
}





NIfEnd()
NIf(FP,{CDeaths(FP,AtLeast,2,GMode),Deaths(8,Exactly,3,168),CDeaths(FP,AtMost,6000,GunBossAct)})

Shape_Hard = CS_RatioXY(CSMakeStar(4,180,75,45,9*9,7*7),1,0.5)
Shape_Hard2 =CS_RatioXY(CSMakeStar(4,180,75,45,3*3,0),1,0.5)
Shape_Burst =CS_RatioXY(CSMakeStar(4,180,75,45,9*9,5*5),1,0.5)
Shape_Burst2 = CS_RatioXY(CSMakeStar(4,180,75,45,5*5,3*3),1,0.5)
GunBossUIDArr2 = {15,87,89,77,78,79,76,10,52,19}



GunBossPatchArr = {}
GunBossPatchArr2 = {}
for i = 1, #GunBossUIDArr do
Trigger {
	players = {FP},
		conditions = {
		Label(0);
		CDeaths(FP,AtLeast,i*1000,GunBossAct);
			},
	actions = {
		GiveUnits(All,GunBossUIDArr[i],11,"Anywhere",FP);
		SetInvincibility(Disable,GunBossUIDArr[i],FP,64);
		},
	}
end
for i = 1, #GunBossUIDArr2 do
table.insert(GunBossPatchArr,SetMemoryX(0x664080+(GunBossUIDArr2[i]*4),SetTo,4,4))
table.insert(GunBossPatchArr2,SetMemoryX(0x664080+(GunBossUIDArr2[i]*4),SetTo,0,4))
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CVar(FP,Cell_R[2],AtMost,0);
	},
	actions = {
		SetMemory(0x6509B0,SetTo,0);
		RunAIScript("Turn OFF Shared Vision for Player 8");
		SetMemory(0x6509B0,SetTo,1);
		RunAIScript("Turn OFF Shared Vision for Player 8");
		SetMemory(0x6509B0,SetTo,2);
		RunAIScript("Turn OFF Shared Vision for Player 8");
		SetMemory(0x6509B0,SetTo,3);
		RunAIScript("Turn OFF Shared Vision for Player 8");
		SetMemory(0x6509B0,SetTo,4);
		RunAIScript("Turn OFF Shared Vision for Player 8");
		SetMemory(0x6509B0,SetTo,5);
		RunAIScript("Turn OFF Shared Vision for Player 8");
		SetMemory(0x6509B0,SetTo,FP);
	}
}

Trigger {
	players = {FP},
		conditions = {
		Label(0);
		CDeaths(FP,AtLeast,i*500,GunBossAct);
			},
	actions = {
		SetSwitch("Switch 256",Set);
		},
	}
CSPlotAct(Shape_Hard,FP,GunBossUIDArr2[i],25,nil,1,32,32,nil,FP,{Switch("Switch 256",Set),Switch("Switch 255",Cleared)},nil,0)
CSPlotAct(Shape_Burst,FP,GunBossUIDArr2[i],25,nil,1,32,32,nil,FP,{Switch("Switch 256",Set),Switch("Switch 255",Set)},nil,0)
CSPlotAct(Shape_Hard,FP,GunBossUIDArr2[i],26,nil,1,32,32,nil,FP,{Switch("Switch 256",Set),Switch("Switch 255",Cleared)},nil,0)
CSPlotAct(Shape_Burst,FP,GunBossUIDArr2[i],26,nil,1,32,32,nil,FP,{Switch("Switch 256",Set),Switch("Switch 255",Set)},nil,0)
CSPlotAct(Shape_Hard,FP,GunBossUIDArr2[i],27,nil,1,32,32,nil,FP,{Switch("Switch 256",Set),Switch("Switch 255",Cleared)},nil,0)
CSPlotAct(Shape_Burst,FP,GunBossUIDArr2[i],27,nil,1,32,32,nil,FP,{Switch("Switch 256",Set),Switch("Switch 255",Set)},nil,0)
CSPlotAct(Shape_Hard,FP,GunBossUIDArr2[i],28,nil,1,32,32,nil,FP,{Switch("Switch 256",Set),Switch("Switch 255",Cleared)},nil,0)
CSPlotAct(Shape_Burst,FP,GunBossUIDArr2[i],28,nil,1,32,32,nil,FP,{Switch("Switch 256",Set),Switch("Switch 255",Set)},nil,0)
Trigger {
	players = {FP},
		conditions = {
		Label(0);
		CDeaths(FP,AtLeast,i*500,GunBossAct);
			},
	actions = {
		RunAIScriptAt("Set Unit Order To: Junk Yard Dog",64);
		SetSwitch("Switch 256",Clear);
		},
	}

end

Trigger {
	players = {FP},
		conditions = {
		Label(0);
		CVar(FP,Cell_R[2],AtMost,0);
			},
	actions = {
		SetCDeaths(FP,Add,1,GunBossAct);
		SetCDeaths(FP,Add,1,GunBossT2);
		SetCDeaths(FP,Add,1,GunBossT3);
		PreserveTrigger();
		},
	}

Trigger {
	players = {FP},
		conditions = {
		Label(0);
		
		CDeaths(FP,Exactly,2,GMode);
		CDeaths(FP,AtLeast,250,GunBossT2);
			},
	actions = {
		SetCDeaths(FP,SetTo,0,GunBossT2);
		SetCDeaths(FP,SetTo,1,CocoonLaunch);
		PreserveTrigger();
		},
	}

Trigger {
	players = {FP},
		conditions = {
		Label(0);
		
		CDeaths(FP,AtLeast,200,GunBossT3);
			},
	actions = {
		SetCDeaths(FP,SetTo,0,GunBossT3);
		SetSwitch("Switch 256",Set);
		PreserveTrigger();
		},
	}


CSPlotAct(Shape_Hard2,FP,69,25,nil,1,32,32,nil,FP,{Switch("Switch 256",Set),Switch("Switch 255",Cleared)},nil,1)
CSPlotAct(Shape_Hard2,FP,69,26,nil,1,32,32,nil,FP,{Switch("Switch 256",Set),Switch("Switch 255",Cleared)},nil,1)
CSPlotAct(Shape_Hard2,FP,69,27,nil,1,32,32,nil,FP,{Switch("Switch 256",Set),Switch("Switch 255",Cleared)},nil,1)
CSPlotAct(Shape_Hard2,FP,69,28,nil,1,32,32,nil,FP,{Switch("Switch 256",Set),Switch("Switch 255",Cleared)},nil,1)
CSPlotAct(Shape_Hard2,FP,27,25,nil,1,32,32,nil,FP,{Switch("Switch 256",Set),Switch("Switch 255",Cleared)},nil,1)
CSPlotAct(Shape_Hard2,FP,27,26,nil,1,32,32,nil,FP,{Switch("Switch 256",Set),Switch("Switch 255",Cleared)},nil,1)
CSPlotAct(Shape_Hard2,FP,27,27,nil,1,32,32,nil,FP,{Switch("Switch 256",Set),Switch("Switch 255",Cleared)},nil,1)
CSPlotAct(Shape_Hard2,FP,27,28,nil,1,32,32,nil,FP,{Switch("Switch 256",Set),Switch("Switch 255",Cleared)},nil,1)
CSPlotAct(Shape_Burst2,FP,69,25,nil,1,32,32,nil,FP,{Switch("Switch 256",Set),Switch("Switch 255",Set)},nil,1)
CSPlotAct(Shape_Burst2,FP,69,26,nil,1,32,32,nil,FP,{Switch("Switch 256",Set),Switch("Switch 255",Set)},nil,1)
CSPlotAct(Shape_Burst2,FP,69,27,nil,1,32,32,nil,FP,{Switch("Switch 256",Set),Switch("Switch 255",Set)},nil,1)
CSPlotAct(Shape_Burst2,FP,69,28,nil,1,32,32,nil,FP,{Switch("Switch 256",Set),Switch("Switch 255",Set)},nil,1)
CSPlotAct(Shape_Burst2,FP,27,25,nil,1,32,32,nil,FP,{Switch("Switch 256",Set),Switch("Switch 255",Set)},nil,1)
CSPlotAct(Shape_Burst2,FP,27,26,nil,1,32,32,nil,FP,{Switch("Switch 256",Set),Switch("Switch 255",Set)},nil,1)
CSPlotAct(Shape_Burst2,FP,27,27,nil,1,32,32,nil,FP,{Switch("Switch 256",Set),Switch("Switch 255",Set)},nil,1)
CSPlotAct(Shape_Burst2,FP,27,28,nil,1,32,32,nil,FP,{Switch("Switch 256",Set),Switch("Switch 255",Set)},nil,1)
Trigger {
	players = {FP},
	conditions = {
		Switch("Switch 256",Set);
	},
	actions = {
		
		RunAIScriptAt("Set Unit Order To: Junk Yard Dog",64);
		PreserveTrigger();
	}
}

DoActions(FP,SetSwitch("Switch 256",Clear))
Trigger {
	players = {FP},
		conditions = {
		Label(0);
		
		CDeaths(FP,Exactly,3,GMode);
		CDeaths(FP,AtLeast,75,GunBossT2);
			},
	actions = {
		SetCDeaths(FP,SetTo,0,GunBossT2);
		SetCDeaths(FP,SetTo,1,CocoonLaunch);
		PreserveTrigger();
		},
	}
Trigger {
	players = {FP},
		conditions = {
		Label(0);
			},
	actions = {
		SetCDeaths(FP,SetTo,5,BGMType);
		SetCDeaths(FP,Add,1,GunBossAct);
		GunBossPatchArr;
		},
	}
Trigger {
	players = {FP},
	conditions = {Label(0);
		CDeaths(FP,Exactly,6000,GunBossAct)
	},
	actions = {GunBossPatchArr2
	}
}

NIfEnd()
AtkUpgradePtrArr = {}
AtkUpgradeMaskRetArr = {}
for i = 0, 5 do
table.insert(AtkUpgradeMaskRetArr,(0x58D2B0+(i*46)+7)%4)
table.insert(AtkUpgradePtrArr,0x58D2B0+(i*46)+7 - AtkUpgradeMaskRetArr[i+1])
end
DefUpgradePtrArr = {}
DefUpgradeMaskRetArr = {}
for i = 0, 5 do
table.insert(DefUpgradeMaskRetArr,(0x58D2B0+(i*46))%4)
table.insert(DefUpgradePtrArr,0x58D2B0+(i*46) - DefUpgradeMaskRetArr[i+1])
end
for i=0, 5 do

CTrigger(FP,{TMemoryX(AtkUpgradePtrArr[i+1],Exactly,_Mul(AtkUpMax,256^AtkUpgradeMaskRetArr[i+1]),255*(256^AtkUpgradeMaskRetArr[i+1]))},{
		SetMemoryB(0x58D088+(46*i)+8,SetTo,0),
		SetMemoryB(0x58D088+(46*i)+9,SetTo,0)})
Trigger {
	players = {i},
	conditions = {
		MemoryB(0x58D2B0+(46*i)+0,Exactly,255);
	},
	actions = {
		SetMemoryB(0x58D088+(46*i)+1,SetTo,0);
		SetMemoryB(0x58D088+(46*i)+2,SetTo,0);
	}
}


end




CMov(FP,TempUpgradeMaskRet,0)
CMov(FP,TempUpgradePtr,0)
CMov(FP,CurrentUpgrade,0)
CMov(FP,CurrentFactor,0)
CMov(FP,UpCount,0)
for i = 0, 5 do
NIf(FP,MemoryB(0x58D2B0+(46*i)+8,Exactly,1))
DoActionsX(FP,{
		SetCVar(FP,TempUpgradePtr[2],SetTo,EPD(AtkUpgradePtrArr[i+1])),
		SetCVar(FP,TempUpgradeMaskRet[2],SetTo,256^AtkUpgradeMaskRetArr[i+1]),
		SetCVar(FP,UpgradeFactor[2],SetTo,AtkFactor),
		SetCVar(FP,UpgradeCP[2],SetTo,i),
		SetCVar(FP,UpgradeMax[2],SetTo,255),
		SetMemoryB(0x58D2B0+(46*i)+8,SetTo,0),
		SetCDeaths(FP,SetTo,1,ifUpisAtk),
		SetNext("X",0x3000,0),
		SetNext(0x3001,"X",1)
})
NIfEnd()
NIf(FP,MemoryB(0x58D2B0+(46*i)+9,Exactly,1))
DoActionsX(FP,{
		SetCVar(FP,TempUpgradePtr[2],SetTo,EPD(AtkUpgradePtrArr[i+1])),
		SetCVar(FP,TempUpgradeMaskRet[2],SetTo,256^AtkUpgradeMaskRetArr[i+1]),
		SetCVar(FP,UpgradeFactor[2],SetTo,AtkFactor),
		SetCVar(FP,UpgradeCP[2],SetTo,i),
		SetCVar(FP,UpgradeMax[2],SetTo,10),
		SetMemoryB(0x58D2B0+(46*i)+9,SetTo,0),
		SetCDeaths(FP,SetTo,1,ifUpisAtk),
		SetNext("X",0x3000,0),
		SetNext(0x3001,"X",1)
})
NIfEnd()


NIf(FP,MemoryB(0x58D2B0+(46*i)+1,Exactly,1))
DoActionsX(FP,{
		SetCVar(FP,TempUpgradePtr[2],SetTo,EPD(DefUpgradePtrArr[i+1])),
		SetCVar(FP,TempUpgradeMaskRet[2],SetTo,256^DefUpgradeMaskRetArr[i+1]),
		SetCVar(FP,UpgradeFactor[2],SetTo,DefFactor),
		SetCVar(FP,UpgradeCP[2],SetTo,i),
		SetCVar(FP,UpgradeMax[2],SetTo,255),
		SetMemoryB(0x58D2B0+(46*i)+1,SetTo,0),
		SetNext("X",0x3000,0),
		SetNext(0x3001,"X",1)
})
NIfEnd()
NIf(FP,MemoryB(0x58D2B0+(46*i)+2,Exactly,1))
DoActionsX(FP,{
		SetCVar(FP,TempUpgradePtr[2],SetTo,EPD(DefUpgradePtrArr[i+1])),
		SetCVar(FP,TempUpgradeMaskRet[2],SetTo,256^DefUpgradeMaskRetArr[i+1]),
		SetCVar(FP,UpgradeFactor[2],SetTo,DefFactor),
		SetCVar(FP,UpgradeCP[2],SetTo,i),
		SetCVar(FP,UpgradeMax[2],SetTo,10),
		SetMemoryB(0x58D2B0+(46*i)+2,SetTo,0),
		SetNext("X",0x3000,0),
		SetNext(0x3001,"X",1)
})
NIfEnd()


end

CIf(FP,Deaths(Force1,AtLeast,1,8))
CMov(FP,0x6509B0,19025)
CWhile(FP,Memory(0x6509B0,AtMost,19025 + (84*1699)))
DoActions(FP,MoveCp(Add,19*4))
for i = 0, 5 do
Trigger {
	players = {FP},
	conditions = {
		DeathsX(CurrentPlayer,Exactly,i,0,0xFF);
		Deaths(i,AtLeast,1,8);
	},
	actions = {
		MoveCp(Add,50*4);
		SetDeathsX(CurrentPlayer,SetTo,255*256,0,0xFF00);
		MoveCp(Subtract,50*4);
		PreserveTrigger();
	}
}

end
DoActions(FP,MoveCp(Subtract,19*4))
CAdd(FP,0x6509B0,84)
CWhileEnd()
CMov(FP,0x6509B0,FP)
DoActions(FP,SetDeaths(Force1,SetTo,0,8))
CIfEnd()


CIf(FP,CDeaths(FP,AtLeast,100,ZombieCheck),SetCDeaths(FP,Subtract,100,ZombieCheck))
CMov(FP,0x6509B0,19025)
CWhile(FP,Memory(0x6509B0,AtMost,19025 + (84*1699)))
DoActions(FP,MoveCp(Add,2*4))

CIf(FP,Deaths(CurrentPlayer,AtMost,0,0))
DoActions(FP,MoveCp(Add,17*4))
Trigger {
	players = {FP},
	conditions = {
		DeathsX(CurrentPlayer,AtLeast,1*256,0,0xFF00);
	},
	actions = {
		MoveCp(Subtract,17*4);
		SetDeaths(CurrentPlayer,Add,256*1,0);
		MoveCp(Add,17*4);
		PreserveTrigger();
	}
}

DoActions(FP,MoveCp(Subtract,17*4))
CIfEnd()
DoActions(FP,MoveCp(Subtract,2*4))
CAdd(FP,0x6509B0,84)
CWhileEnd()
CMov(FP,0x6509B0,FP)
CIfEnd()

Trigger { -- 스캔이펙트 조절트리거
players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtMost,0,ScanEffT);
	},
	actions = {
		SetCDeaths(FP,Add,4,ScanEffT);
		PreserveTrigger();
	},
}


Trigger { -- 스캔이펙트 조절트리거
players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,Exactly,2,GMode);
		CDeaths(FP,AtMost,0,GunBossT);
	},
	actions = {
		SetCDeaths(FP,Add,5,GunBossT);
		PreserveTrigger();
	},
}


Trigger { -- 스캔이펙트 조절트리거
players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,Exactly,3,GMode);
		CDeaths(FP,AtMost,0,GunBossT);
	},
	actions = {
		SetCDeaths(FP,Add,3,GunBossT);
		PreserveTrigger();
	},
}
DoActionsX(FP,{SetCDeaths(FP,Subtract,1,HealT),SetCDeaths(FP,Subtract,1,CanCT),SetCDeaths(FP,Add,1,ZombieCheck),SetCDeaths(FP,Subtract,1,ScanEffT),SetCDeaths(FP,Subtract,1,GunBossT),SetCDeaths(FP,Subtract,1,DBossGen)})

Trigger { -- 동맹상태 고정, 중립마린 제거
	players = {Force1},
	actions = {
		SetAllianceStatus(Force1,Ally);
		SetAllianceStatus(P12,Enemy);
		RunAIScript("Turn ON Shared Vision for Player 1");
		RunAIScript("Turn ON Shared Vision for Player 2");
		RunAIScript("Turn ON Shared Vision for Player 3");
		RunAIScript("Turn ON Shared Vision for Player 4");
		RunAIScript("Turn ON Shared Vision for Player 5");
		KillUnitAt(All,125,47,P12);
		PreserveTrigger();
	},
}
Trigger { -- 힐존트리거
players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtMost,0,HealT);
	},
	actions = {
		SetCDeaths(FP,Add,50,HealT);
		ModifyUnitHitPoints(All,"Men",Force1,2,100);
		ModifyUnitShields(All,"Men",Force1,2,100);
		PreserveTrigger();
	},
}

DifLeaderBoard = {
"\x04 - \x0EEASY \x04Mode",
"\x04 - \x08HARD \x04Mode",
"\x04 - \x11BURST \x04Mode"}
for i = 1, 3 do
CIf(FP,CDeaths(FP,Exactly,i,GMode))
Trigger { -- 킬 포인트 리더보드, 집근처 유닛 오더시키기, 쉴드 회복, 저글링 히드라 어택땅
	players = {FP},
	conditions = {
		Label(0);
		
		CDeaths(FP,AtMost,0,LeaderBoardT);
	},
	actions = {
		LeaderBoardScore(Kills, "\x03G\x0Fa\x10L\x0Fa\x03X\x0Fy \x11Points"..DifLeaderBoard[i]);
		LeaderBoardComputerPlayers(Disable);
		PreserveTrigger();
	},
	}

Trigger { -- 데스 스코어 리더보드
	players = {FP},
	conditions = {
		Label(0);
		
		CDeaths(FP,Exactly,400,LeaderBoardT);
	},
	actions = {
		LeaderBoardScore(Custom, "\x08Deaths..."..DifLeaderBoard[i]);
		LeaderBoardComputerPlayers(Disable);
		--Order("Factories",Force2,"Anywhere",Patrol,5);
		--Order("Men",P8,140,Patrol,5);
		
		Order("Men",Force2,25,Patrol,2);
		Order("Devouring One", Force2, "Anywhere", Attack, 2);
		Order("Devourer", Force2, "Anywhere", Attack, 2);
		Order("Scourge", Force2, "Anywhere", Attack, 2);
		Order("Torrasque", Force2, "Anywhere", Attack, 2);
		Order("Infested Kerrigan", Force2, "Anywhere", Attack, 2);
		Order("Infested Duran", Force2, "Anywhere", Attack, 2);
		Order("Protoss Arbiter", Force2, "Anywhere", Attack, 2);
		Order("Zergling", Force2, "Anywhere", Attack, 2);
		Order("Hydralisk", Force2, "Anywhere", Attack, 2);
		Order("Ultralisk", Force2, "Anywhere", Attack, 2);
		Order("Hunter Killer", Force2, "Anywhere", Attack, 2);
		Order("Kukulza Mutalisk", Force2, "Anywhere", Attack, 2);
		Order("Kukulza Guardian", Force2, "Anywhere", Attack, 2);
		Order("Mutalisk", Force2, "Anywhere", Attack, 2);
		Order("Guardian", Force2, "Anywhere", Attack, 2);
		Order(5, Force2, "Anywhere", Attack, 2);
		Order("Any unit",Force2,45,Attack,2);
		Order("Any unit",Force2,46,Attack,2);
		Order(121, Force2, "Anywhere", Attack, 2);
		PreserveTrigger();
		},
}
Trigger { -- 킬 스코어 리더보드
	players = {FP},
	conditions = {
		Label(0);
		
		CDeaths(FP,Exactly,200,LeaderBoardT);
	},
	actions = {
		LeaderBoardKills("Any unit","\x06Kill \x0FCounts"..DifLeaderBoard[i]);
		LeaderBoardComputerPlayers(Disable);
		ModifyUnitShields(All,"Men",Force2,"Anywhere",100);
		PreserveTrigger();
		},
}
Trigger { -- 리더보드 총괄
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtMost,0,LeaderBoardT);
	},
	actions = {
		SetCDeaths(FP,SetTo,600,LeaderBoardT);
		PreserveTrigger();
	},
	}
CIfEnd()
end
DoActionsX(FP,{
SetCDeaths(FP,Subtract,1,LeaderBoardT)
})
Trigger { -- 메딕트리거
	players = {Force1},
	conditions = {
		Command(CurrentPlayer, AtLeast, 1, 34);
	},
	actions = {
		ModifyUnitHitPoints(All, "Men", CurrentPlayer, "Anywhere", 100);
		ModifyUnitShields(All, "Men", CurrentPlayer, "Anywhere", 100);
		ModifyUnitHitPoints(All, "Buildings", CurrentPlayer, "Anywhere", 100);
		RemoveUnitAt(1,34,"Anywhere",CurrentPlayer);
		PreserveTrigger();
	},
	}
Trigger { -- 메딕트리거
	players = {Force1},
	conditions = {
		Command(CurrentPlayer, AtLeast, 1, 9);
	},
	actions = {
		ModifyUnitHitPoints(All, "Men", CurrentPlayer, "Anywhere", 100);
		ModifyUnitShields(All, "Men", CurrentPlayer, "Anywhere", 100);
		ModifyUnitHitPoints(All, "Buildings", CurrentPlayer, "Anywhere", 100);
		RemoveUnitAt(1,9,"Anywhere",CurrentPlayer);
		PreserveTrigger();
	},
	}
for i = 1, 5 do -- 강퇴기능

Trigger { -- 강퇴토큰
	players = {FP},
	conditions = {
		Label(0);
		Command(Force1,AtLeast,1,BanToken[i]);
	},
	actions = {
		RemoveUnitAt(1,BanToken[i],"Anywhere",Force1);
		SetCDeaths(FP,Add,1,BanCode+(i*65536));
		PreserveTrigger();
		},
	}
Trigger { -- 강퇴
	players = {i},
	conditions = {
		Label(0);
		CDeaths(FP,AtLeast,5,BanCode+(i*65536));
	},
	actions = {
		PlayWAV("sound\\Protoss\\ARCHON\\PArDth00.WAV");
		PlayWAV("sound\\Protoss\\ARCHON\\PArDth00.WAV");
		PlayWAV("sound\\Protoss\\ARCHON\\PArDth00.WAV");
		DisplayText("\x07『 \x04당신은 강되당했습니다.\x07 』",4);
		Defeat();
		},
	}
	end
	
for i = 0,5 do
Trigger { -- 공업완료시 스팀 활성화
	players = {i},
	conditions = {
		Label(0);
		CVar(FP,HiddenATK[2],AtLeast,1);
		MemoryB(0x58D2B0+(46*i)+7,AtLeast,255);
	},
	actions = {
		DisplayText(string.rep("\n", 20),4);
		DisplayText("\x13\x04"..string.rep("―", 56),4);
		DisplayText("\x13\x0FＳＫＩＬＬ　ＵＮＬＯＣＫＥＤ",0);
		DisplayText("\n",4);
		DisplayText("\x13\x03공격력 \x04업그레이드를 완료하였습니다.\n\x13\x04이제부터 \x1B원격 스팀팩\x04을 사용할 수 있습니다.",0);
		DisplayText("\n",4);
		DisplayText("\x13\x0FＳＫＩＬＬ　ＵＮＬＯＣＫＥＤ",0);
		DisplayText("\x13\x04"..string.rep("―", 56),4);
		SetMemoryB(0x57F27C+(228*i)+8,SetTo,1);
		PlayWAV("staredit\\wav\\Unlock.ogg");
		PlayWAV("staredit\\wav\\Unlock.ogg");
		PlayWAV("staredit\\wav\\Unlock.ogg");
	},
}
Trigger { -- 스팀팩
	players = {i},
	conditions = {
		Label(0);
		CVar(FP,HiddenATK[2],AtLeast,1);
		Command(i,AtLeast,1,8);
	},
	actions = {
		SetDeaths(i,Add,1,8);
		RemoveUnitAt(1,8,"Anywhere",i);
		DisplayText("\x07『 \x04원격 \x1B스팀팩\x04기능을 사용합니다.\x07 』",4);
		PreserveTrigger();
	},
}
end
Trigger { -- 조합법 insert키
	players = {Force1},
	conditions = {
		Memory(0x596A44, Exactly, 0x00000100);
	},
	actions = {
		DisplayText("\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\x12\x04간단 조합법\n\x12\x1BH \x04Marine + \x1F"..GMCost.." Ore \x04= \x03G\x0Fa\x10L\x0Fa\x03X\x0Fy \x18M\x16arine\n\x12\x03G\x0Fa\x10L\x0Fa\x03X\x0Fy \x18M\x16arine + \x1F"..NeCost.." Ore = \x11Ｎ\x07Ｅ\x1FＢ\x1CＵ\x17Ｌ\x11Ａ\x04 \n\x12\x04\x11Ｎ\x07Ｅ\x1FＢ\x1CＵ\x17Ｌ\x11Ａ\x04 는 저그 유닛을 효과적으로 제거하지만, 적 영웅 유닛에게 취약함\n\x12\x04방업할 시 \x03G\x0Fa\x10L\x0Fa\x03X\x0Fy \x18M\x16arine \x08HP \x0F증가\n\x12\x04환전 : \x03F12키\n\x12\x04닫기 : \x03Delete",4);
		PreserveTrigger();
		},
	}

Trigger { -- 채팅창 정리 delete키
	players = {Force1},
	conditions = {
		
		Memory(0x596A44, Exactly, 65536);
},
	actions = {
		DisplayText(string.rep("\n", 20),4);
		PreserveTrigger();
		},
	}



Trigger { -- 캔낫시 모든 저그유닛 삭제, 경고1회부여, 정야독
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtMost,0,CanOut);
		CVar(FP,CanC[2],AtLeast,2);
		CDeaths(FP,AtMost,0,CanCT);
		Memory(0x628438,AtMost,0);
	},
	actions = {
		SetMemory(0x6509B0,SetTo,0);
		PlayWAV("sound\\Bullet\\TNsHit00.wav");
		PlayWAV("staredit\\wav\\warn.wav");
		PlayWAV("sound\\Terran\\GOLIATH\\TGoPss01.WAV");
		PlayWAV("sound\\Terran\\GOLIATH\\TGoPss01.WAV");
		SetMemory(0x6509B0,SetTo,1);
		PlayWAV("sound\\Bullet\\TNsHit00.wav");
		PlayWAV("staredit\\wav\\warn.wav");
		PlayWAV("sound\\Terran\\GOLIATH\\TGoPss01.WAV");
		PlayWAV("sound\\Terran\\GOLIATH\\TGoPss01.WAV");
		SetMemory(0x6509B0,SetTo,2);
		PlayWAV("sound\\Bullet\\TNsHit00.wav");
		PlayWAV("staredit\\wav\\warn.wav");
		PlayWAV("sound\\Terran\\GOLIATH\\TGoPss01.WAV");
		PlayWAV("sound\\Terran\\GOLIATH\\TGoPss01.WAV");
		SetMemory(0x6509B0,SetTo,3);
		PlayWAV("sound\\Bullet\\TNsHit00.wav");
		PlayWAV("staredit\\wav\\warn.wav");
		PlayWAV("sound\\Terran\\GOLIATH\\TGoPss01.WAV");
		PlayWAV("sound\\Terran\\GOLIATH\\TGoPss01.WAV");
		SetMemory(0x6509B0,SetTo,4);
		PlayWAV("sound\\Bullet\\TNsHit00.wav");
		PlayWAV("staredit\\wav\\warn.wav");
		PlayWAV("sound\\Terran\\GOLIATH\\TGoPss01.WAV");
		PlayWAV("sound\\Terran\\GOLIATH\\TGoPss01.WAV");
		SetMemory(0x6509B0,SetTo,5);
		PlayWAV("sound\\Bullet\\TNsHit00.wav");
		PlayWAV("staredit\\wav\\warn.wav");
		PlayWAV("sound\\Terran\\GOLIATH\\TGoPss01.WAV");
		PlayWAV("sound\\Terran\\GOLIATH\\TGoPss01.WAV");
		SetMemory(0x6509B0,SetTo,128);
		PlayWAV("sound\\Bullet\\TNsHit00.wav");
		PlayWAV("staredit\\wav\\warn.wav");
		PlayWAV("sound\\Terran\\GOLIATH\\TGoPss01.WAV");
		PlayWAV("sound\\Terran\\GOLIATH\\TGoPss01.WAV");
		SetMemory(0x6509B0,SetTo,129);
		PlayWAV("sound\\Bullet\\TNsHit00.wav");
		PlayWAV("staredit\\wav\\warn.wav");
		PlayWAV("sound\\Terran\\GOLIATH\\TGoPss01.WAV");
		PlayWAV("sound\\Terran\\GOLIATH\\TGoPss01.WAV");
		SetMemory(0x6509B0,SetTo,130);
		PlayWAV("sound\\Bullet\\TNsHit00.wav");
		PlayWAV("staredit\\wav\\warn.wav");
		PlayWAV("sound\\Terran\\GOLIATH\\TGoPss01.WAV");
		PlayWAV("sound\\Terran\\GOLIATH\\TGoPss01.WAV");
		SetMemory(0x6509B0,SetTo,131);
		PlayWAV("sound\\Bullet\\TNsHit00.wav");
		PlayWAV("staredit\\wav\\warn.wav");
		PlayWAV("sound\\Terran\\GOLIATH\\TGoPss01.WAV");
		PlayWAV("sound\\Terran\\GOLIATH\\TGoPss01.WAV");
		SetMemory(0x6509B0,SetTo,6);
		RunAIScriptAt("Set Unit Order To: Junk Yard Dog","Anywhere");
		SetMemory(0x6509B0,SetTo,FP);
		RunAIScriptAt("Set Unit Order To: Junk Yard Dog","Anywhere");
		SetCDeaths(FP,SetTo,24*7,CanCT);
		SetCVar(FP,CanC[2],Subtract,1);
		KillUnit("Factories",Force2);
		PreserveTrigger();
	},
}


Trigger { -- 캔낫 3회초과 환전률 0퍼셋
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtMost,0,CanOut);
		CVar(FP,CanC[2],AtMost,1);
		CDeaths(FP,AtMost,0,CanCT);
		Memory(0x628438,AtMost,0);
	},
	actions = {
		SetMemory(0x6509B0,SetTo,0);
		PlayWAV("sound\\Bullet\\TNsHit00.wav");
		PlayWAV("staredit\\wav\\CanOver.ogg");
		PlayWAV("sound\\Terran\\GOLIATH\\TGoPss05.WAV");
		PlayWAV("sound\\Terran\\GOLIATH\\TGoPss05.WAV");
		SetMemory(0x6509B0,SetTo,1);
		PlayWAV("sound\\Bullet\\TNsHit00.wav");
		PlayWAV("staredit\\wav\\CanOver.ogg");
		PlayWAV("sound\\Terran\\GOLIATH\\TGoPss05.WAV");
		PlayWAV("sound\\Terran\\GOLIATH\\TGoPss05.WAV");
		SetMemory(0x6509B0,SetTo,2);
		PlayWAV("sound\\Bullet\\TNsHit00.wav");
		PlayWAV("staredit\\wav\\CanOver.ogg");
		PlayWAV("sound\\Terran\\GOLIATH\\TGoPss05.WAV");
		PlayWAV("sound\\Terran\\GOLIATH\\TGoPss05.WAV");
		SetMemory(0x6509B0,SetTo,3);
		PlayWAV("sound\\Bullet\\TNsHit00.wav");
		PlayWAV("staredit\\wav\\CanOver.ogg");
		PlayWAV("sound\\Terran\\GOLIATH\\TGoPss05.WAV");
		PlayWAV("sound\\Terran\\GOLIATH\\TGoPss05.WAV");
		SetMemory(0x6509B0,SetTo,4);
		PlayWAV("sound\\Bullet\\TNsHit00.wav");
		PlayWAV("staredit\\wav\\CanOver.ogg");
		PlayWAV("sound\\Terran\\GOLIATH\\TGoPss05.WAV");
		PlayWAV("sound\\Terran\\GOLIATH\\TGoPss05.WAV");
		SetMemory(0x6509B0,SetTo,5);
		PlayWAV("sound\\Bullet\\TNsHit00.wav");
		PlayWAV("staredit\\wav\\CanOver.ogg");
		PlayWAV("sound\\Terran\\GOLIATH\\TGoPss05.WAV");
		PlayWAV("sound\\Terran\\GOLIATH\\TGoPss05.WAV");
		SetMemory(0x6509B0,SetTo,128);
		PlayWAV("sound\\Bullet\\TNsHit00.wav");
		PlayWAV("staredit\\wav\\CanOver.ogg");
		PlayWAV("sound\\Terran\\GOLIATH\\TGoPss05.WAV");
		PlayWAV("sound\\Terran\\GOLIATH\\TGoPss05.WAV");
		SetMemory(0x6509B0,SetTo,129);
		PlayWAV("sound\\Bullet\\TNsHit00.wav");
		PlayWAV("staredit\\wav\\CanOver.ogg");
		PlayWAV("sound\\Terran\\GOLIATH\\TGoPss05.WAV");
		PlayWAV("sound\\Terran\\GOLIATH\\TGoPss05.WAV");
		SetMemory(0x6509B0,SetTo,130);
		PlayWAV("sound\\Bullet\\TNsHit00.wav");
		PlayWAV("staredit\\wav\\CanOver.ogg");
		PlayWAV("sound\\Terran\\GOLIATH\\TGoPss05.WAV");
		PlayWAV("sound\\Terran\\GOLIATH\\TGoPss05.WAV");
		SetMemory(0x6509B0,SetTo,131);
		PlayWAV("sound\\Bullet\\TNsHit00.wav");
		PlayWAV("staredit\\wav\\CanOver.ogg");
		PlayWAV("sound\\Terran\\GOLIATH\\TGoPss05.WAV");
		PlayWAV("sound\\Terran\\GOLIATH\\TGoPss05.WAV");
		SetMemory(0x6509B0,SetTo,FP);
		SetCVar(FP,CanC[2],Subtract,1);
		SetCVar(FP,ExchangeRate[2],SetTo,0);
		KillUnit("Factories",Force2);
		SetCDeaths(FP,Add,1,CanOut);
	},
}
Trigger { -- 캔낫 3회초과 이후 캔낫 트리거
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtLeast,1,CanOut);
		CDeaths(FP,AtMost,0,CanCT);
		Memory(0x628438,AtMost,0);
	},
	actions = {
		SetMemory(0x6509B0,SetTo,0);
		PlayWAV("sound\\Bullet\\TNsHit00.wav");
		PlayWAV("staredit\\wav\\CanOver.ogg");
		SetMemory(0x6509B0,SetTo,1);
		PlayWAV("sound\\Bullet\\TNsHit00.wav");
		PlayWAV("staredit\\wav\\CanOver.ogg");
		SetMemory(0x6509B0,SetTo,2);
		PlayWAV("sound\\Bullet\\TNsHit00.wav");
		PlayWAV("staredit\\wav\\CanOver.ogg");
		SetMemory(0x6509B0,SetTo,3);
		PlayWAV("sound\\Bullet\\TNsHit00.wav");
		PlayWAV("staredit\\wav\\CanOver.ogg");
		SetMemory(0x6509B0,SetTo,4);
		PlayWAV("sound\\Bullet\\TNsHit00.wav");
		PlayWAV("staredit\\wav\\CanOver.ogg");
		SetMemory(0x6509B0,SetTo,5);
		PlayWAV("sound\\Bullet\\TNsHit00.wav");
		PlayWAV("staredit\\wav\\CanOver.ogg");
		SetMemory(0x6509B0,SetTo,128);
		PlayWAV("sound\\Bullet\\TNsHit00.wav");
		PlayWAV("staredit\\wav\\CanOver.ogg");
		SetMemory(0x6509B0,SetTo,129);
		PlayWAV("sound\\Bullet\\TNsHit00.wav");
		PlayWAV("staredit\\wav\\CanOver.ogg");
		SetMemory(0x6509B0,SetTo,130);
		PlayWAV("sound\\Bullet\\TNsHit00.wav");
		PlayWAV("staredit\\wav\\CanOver.ogg");
		SetMemory(0x6509B0,SetTo,131);
		PlayWAV("sound\\Bullet\\TNsHit00.wav");
		PlayWAV("staredit\\wav\\CanOver.ogg");
		SetMemory(0x6509B0,SetTo,6);
		RunAIScriptAt("Set Unit Order To: Junk Yard Dog","Anywhere");
		SetMemory(0x6509B0,SetTo,FP);
		RunAIScriptAt("Set Unit Order To: Junk Yard Dog","Anywhere");
		SetCDeaths(FP,SetTo,24*30,CanCT);
		KillUnit("Factories",Force2);
		SetCVar(FP,CanC[2],Subtract,1);
		PreserveTrigger();
	},
}
Trigger { -- 지속캔낫 감지용
	players = {FP},
	conditions = {
		Label(0);
		Memory(0x628438,AtMost,0);
	},
	actions = {
		SetCVar(FP,CanDefeat[2],Add,5);
		PreserveTrigger();
	}
}
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CVar(FP,CanDefeat[2],AtLeast,2000);
	},
	actions = {
		SetCDeaths(FP,Add,1,GameOver);
	}
}
CanWarn = "\x13\x04――――――――――――――――――――――――――――――――――――――――――――――――――――――\n\x13\x04！！！　\x08ＷＡＲＮＩＮＧ\x04　！！！\n\x14\n\x14\n\x13\x04캔낫을 의도적으로 걸 경우 게임에서 \x08패배\x04합니다.\n\x13\x04\x07저그 인구수\x04가 \x08１０００\x04이상 \x10증가\x04하지 않도록 \x08주의\x04해 주시기 바랍니다.\n\x14\n\x13\x04！！！　\x08ＷＡＲＮＩＮＧ\x04　！！！\n\x13\x04――――――――――――――――――――――――――――――――――――――――――――――――――――――"
Trigger {
	players = {Force1},
	conditions = {
		Label(0);
		CVar(FP,CanDefeat[2],AtLeast,1);
	},
	actions = {
		DisplayText(CanWarn,4);
		PlayWAV("sound\\Terran\\RAYNORM\\URaPss02.WAV");
		PlayWAV("sound\\Terran\\RAYNORM\\URaPss02.WAV");
		PlayWAV("sound\\Terran\\RAYNORM\\URaPss02.WAV");
		PlayWAV("sound\\Terran\\RAYNORM\\URaPss02.WAV");
		
	}
}
Trigger {
	players = {Force1},
	conditions = {
		Label(0);
		CVar(FP,CanDefeat[2],AtLeast,400);
	},
	actions = {
		DisplayText(CanWarn,4);
		PlayWAV("sound\\Terran\\RAYNORM\\URaPss02.WAV");
		PlayWAV("sound\\Terran\\RAYNORM\\URaPss02.WAV");
		PlayWAV("sound\\Terran\\RAYNORM\\URaPss02.WAV");
		PlayWAV("sound\\Terran\\RAYNORM\\URaPss02.WAV");
		
	}
}
Trigger {
	players = {Force1},
	conditions = {
		Label(0);
		CVar(FP,CanDefeat[2],AtLeast,800);
	},
	actions = {
		DisplayText(CanWarn,4);
		PlayWAV("sound\\Terran\\RAYNORM\\URaPss02.WAV");
		PlayWAV("sound\\Terran\\RAYNORM\\URaPss02.WAV");
		PlayWAV("sound\\Terran\\RAYNORM\\URaPss02.WAV");
		PlayWAV("sound\\Terran\\RAYNORM\\URaPss02.WAV");
		
	}
}
Trigger {
	players = {Force1},
	conditions = {
		Label(0);
		CVar(FP,CanDefeat[2],AtLeast,1200);
	},
	actions = {
		DisplayText(CanWarn,4);
		PlayWAV("sound\\Terran\\RAYNORM\\URaPss02.WAV");
		PlayWAV("sound\\Terran\\RAYNORM\\URaPss02.WAV");
		PlayWAV("sound\\Terran\\RAYNORM\\URaPss02.WAV");
		PlayWAV("sound\\Terran\\RAYNORM\\URaPss02.WAV");
		
	}
}
Trigger {
	players = {Force1},
	conditions = {
		Label(0);
		CVar(FP,CanDefeat[2],AtLeast,1600);
	},
	actions = {
		DisplayText(CanWarn,4);
		PlayWAV("sound\\Terran\\RAYNORM\\URaPss02.WAV");
		PlayWAV("sound\\Terran\\RAYNORM\\URaPss02.WAV");
		PlayWAV("sound\\Terran\\RAYNORM\\URaPss02.WAV");
		PlayWAV("sound\\Terran\\RAYNORM\\URaPss02.WAV");
		
	}
}

CIf({Force1,FP},CDeaths(FP,AtLeast,1,GameOver)) -- 패배트리거

Trigger {
	players = {Force1},
	conditions = {
		Label(0);
		CDeaths(FP,AtMost,0,TestMode);
		CDeaths(FP,AtLeast,1,GameOver);
	},
	actions = {
		Defeat();
	},
}
DoActionsX(FP,SetCDeaths(FP,Add,1,GameOver))
CIfEnd() -- 패배트리거 끝
for j = 0, 5 do -- 소환


Trigger { -- 소환 마린
	players = {j},
	conditions = {
		Command(j,AtLeast,1,"Terran Firebat");
	},
	actions = {
		RemoveUnitAt(1,"Terran Firebat","Anywhere",j);
		CreateUnitWithProperties(1,20,2,j,{energy = 100});
		DisplayText("\x02▶ \x1BH \x04Marine을 \x19소환\x04하였습니다. - \x1F"..MarCost.." O r e",4);
		PreserveTrigger();
	},
}
Trigger { -- 소환 갤마
	players = {j},
	conditions = {
		Command(j,AtLeast,1,2);
		Deaths(j,AtMost,23,125);
	},
	actions = {
		SetResources(j,Add,GMCost+MarCost,ore);
		RemoveUnitAt(1,2,"Anywhere",j);
		DisplayText("\x02▶ \x03G\x0Fa\x10L\x0Fa\x03X\x0Fy \x18M\x16arine \x19빠른 소환\x04 조건이 맞지 않습니다. (조건 - \x03G\x0Fa\x10L\x0Fa\x03X\x0Fy \x18M\x16arine \x0424기 조합) 자원 반환 + \x1F"..(GMCost+MarCost).." O r e",4);
		PreserveTrigger();
	},
}

Trigger { -- 소환 갤마
	players = {j},
	conditions = {
		Deaths(j,AtLeast,24,125);
		Command(j,AtLeast,1,2);
	},
	actions = {
		RemoveUnitAt(1,2,"Anywhere",j);
		DisplayText("\x02▶ \x1F광물\x04을 소모하여 \x03G\x0Fa\x10L\x0Fa\x03X\x0Fy \x18M\x16arine을 \x19소환\x04하였습니다. - \x1F"..(GMCost+MarCost).." O r e",4);
		CreateUnitWithProperties(1,100,2,j,{energy = 100});
		PreserveTrigger();
	},
}

--[[
Trigger { -- 조합 영웅마린
	players = {j},
	conditions = {
		Bring(j,AtLeast,1,0,3);
		Accumulate(j,AtLeast,10000,Ore);
	},
	actions = {
		ModifyUnitEnergy(1,0,j,3,0);
		SetResources(j,Subtract,10000,ore);
		RemoveUnitAt(1,0,3,j);
		CreateUnit(1,"H Marine",2,j);
		DisplayText("\x02▶ \x1F광물\x04을 소모하여 \x04Marine을 \x1BH \x04Marine으로 \x19변환\x04하였습니다. - \x1F10000 O r e",4);
		PreserveTrigger();
	},
}
]]
Trigger { -- 조합 갤럭시 마린
	players = {j},
	conditions = {
		Bring(j,AtLeast,1,20,3);
		Accumulate(j,AtLeast,GMCost,Ore);
	},
	actions = {
		ModifyUnitEnergy(1,20,j,3,0);
		SetResources(j,Subtract,GMCost,ore);
		RemoveUnitAt(1,20,3,j);
		CreateUnit(1,"GaLaXy Marine",2,j);
		SetDeaths(j,Add,1,125);
		DisplayText("\x02▶ \x1F광물\x04을 소모하여 \x1BH \x04Marine을 \x03G\x0Fa\x10L\x0Fa\x03X\x0Fy \x18M\x16arine으로 \x19변환\x04하였습니다. - \x1F"..GMCost.." O r e",4);
		PreserveTrigger();
	},
}


end

Trigger {
	players = {FP},
	conditions = {
		Label(0);
		CommandLeastAt(174,64);
	},
	actions = {
		SetCDeaths(FP,Add,1,Win);
	}
}
function InvDisable(Cond,UnitID,Player,Loc,Name)
txt = "\n\n\n\n\n\n\n\n\n\n\n\x13\x07※※※※※※※※※※※※\x1F ＮＯＴＩＣＥ\x07 ※※※※※※※※※※※※\n\n\n\x13\x03"..Name.."\x04의 \x08무적상태\x04가 해제되었습니다.\n\n\n\x13\x07※※※※※※※※※※※※\x1F ＮＯＴＩＣＥ\x07 ※※※※※※※※※※※※"
Wav = "staredit\\wav\\Unlock.ogg"
Trigger {
	players = {FP},
	conditions = {
		Label(0);
		Cond;
	},
	actions = {
		MoveLocation(1,UnitID,Player,Loc);
		SetInvincibility(Disable,UnitID,Player,Loc);
		SetMemory(0x6509B0, SetTo, 0);
		PlayWAV(Wav);
		PlayWAV(Wav);
		MinimapPing(1);
		DisplayText(txt,4);
		SetMemory(0x6509B0, SetTo, 1);
		PlayWAV(Wav);
		PlayWAV(Wav);
		MinimapPing(1);
		DisplayText(txt,4);
		SetMemory(0x6509B0, SetTo, 2);
		PlayWAV(Wav);
		PlayWAV(Wav);
		MinimapPing(1);
		DisplayText(txt,4);
		SetMemory(0x6509B0, SetTo, 3);
		PlayWAV(Wav);
		PlayWAV(Wav);
		MinimapPing(1);
		DisplayText(txt,4);
		SetMemory(0x6509B0, SetTo, 4);
		PlayWAV(Wav);
		PlayWAV(Wav);
		MinimapPing(1);
		DisplayText(txt,4);
		SetMemory(0x6509B0, SetTo, 5);
		PlayWAV(Wav);
		PlayWAV(Wav);
		MinimapPing(1);
		DisplayText(txt,4);
		SetMemory(0x6509B0, SetTo, 128);
		PlayWAV(Wav);
		PlayWAV(Wav);
		MinimapPing(1);
		DisplayText(txt,4);
		SetMemory(0x6509B0, SetTo, 129);
		PlayWAV(Wav);
		PlayWAV(Wav);
		MinimapPing(1);
		DisplayText(txt,4);
		SetMemory(0x6509B0, SetTo, 130);
		PlayWAV(Wav);
		PlayWAV(Wav);
		MinimapPing(1);
		DisplayText(txt,4);
		SetMemory(0x6509B0, SetTo, 131);
		PlayWAV(Wav);
		PlayWAV(Wav);
		MinimapPing(1);
		DisplayText(txt,4);
		SetMemory(0x6509B0, SetTo, FP);
	}
}
end
InvDisable({CDeaths(FP,AtLeast,2,GMode),CDeaths(FP,AtLeast,15,Chry_cond)},201,Force2,64,"Ｏｖｅｒｍｉｎｄ　Ｃｏｃｏｏｎ")
InvDisable({CDeaths(FP,AtLeast,4,CCode(0x1001,0)),CDeaths(FP,AtLeast,4,CCode(0x1001,1)),CDeaths(FP,AtLeast,2,CCode(0x1002,0)),CDeaths(FP,AtLeast,2,CCode(0x1002,1))},148,Force2,6,"ＯｖｅｒＭｉｎｄ")
InvDisable({CDeaths(FP,AtLeast,4,B_Chry_cond)},147,Force2,31,"Ｍｏｎｓｔｅｒ　Ｋｒａｋｅｎ")
InvDisable({CDeaths(FP,AtLeast,2,CCode(0x1001,2)),CDeaths(FP,AtLeast,1,CCode(0x1002,2))},175,Force2,37,"Ｘｅｌ＇Ｎａｇａ　Ｔｅｍｐｌｅ")
InvDisable({CDeaths(FP,AtLeast,2,CCode(0x1001,3)),CDeaths(FP,AtLeast,1,CCode(0x1002,3))},175,Force2,38,"Ｘｅｌ＇Ｎａｇａ　Ｔｅｍｐｌｅ")
InvDisable({CDeaths(FP,AtLeast,2,CCode(0x1001,4)),CDeaths(FP,AtLeast,1,CCode(0x1002,4))},175,Force2,39,"Ｘｅｌ＇Ｎａｇａ　Ｔｅｍｐｌｅ")
InvDisable({CDeaths(FP,AtLeast,2,GMode),CDeaths(FP,AtLeast,2,CCode(0x1001,5)),CDeaths(FP,AtLeast,1,CCode(0x1002,5))},190,Force2,40,"Ｃｏｒｅ　ｏｆ　ＧａＬａＸｙ")
InvDisable({CDeaths(FP,AtLeast,5,Sup_Cond)},173,Force2,41,"Ｆｏｒｍａｔｉｏｎ")
InvDisable({CDeaths(FP,AtLeast,5,Py_Cond)},173,Force2,42,"Ｆｏｒｍａｔｉｏｎ")
InvDisable({CDeaths(FP,AtLeast,1,OverCocooncomp),CDeaths(FP,AtLeast,2,BossKill)},168,Force2,36,"Ｓｔａｓｉｓ　Ｃｅｌｌ")
InvDisable({
CDeaths(FP,AtLeast,2,CCode(0x1001,6)),
CDeaths(FP,AtLeast,2,CCode(0x1001,7)),
CDeaths(FP,AtLeast,2,CCode(0x1001,8)),
CDeaths(FP,AtLeast,2,CCode(0x1001,9)),
CDeaths(FP,AtLeast,2,CCode(0x1002,6)),
CDeaths(FP,AtLeast,2,CCode(0x1002,7)),
CDeaths(FP,AtLeast,2,CCode(0x1002,8)),
CDeaths(FP,AtLeast,2,CCode(0x1002,9))},152,Force2,43,"Ｄａｇｇｏｔｈ")
InvDisable({
CDeaths(FP,AtLeast,2,CCode(0x1001,10)),
CDeaths(FP,AtLeast,4,CCode(0x1001,11)),
CDeaths(FP,AtLeast,11,CCode(0x1002,10)),
CDeaths(FP,AtLeast,1,CCode(0x1002,11))},152,Force2,44,"Ｄａｇｇｏｔｈ")
InvDisable({
CDeaths(FP,AtLeast,15,Chry_cond),
CDeaths(FP,AtLeast,10,SPGunCond),
CDeaths(FP,AtLeast,2,FormCon),
CDeaths(FP,AtLeast,3,BossKill)},174,Force2,64,"최후의　\x04Ｔｅｍｐｌｅ")
Trigger { -- 솔플 보너스
	players = {FP},
	conditions = {
		Label(0);
		CVar(FP,SetPlayers[2],Exactly,1);
	},
	actions = {
		SetResources(Force1,Add,80000,Ore);
		CreateUnit(7,20,2,Force1);
	},
}
CIf(FP,CDeaths(FP,AtLeast,1,Win))
DoActionsX(FP,SetCDeaths(FP,Add,1,Win))

Trigger { -- 템플 파괴시
	players = {FP},
	actions = {
		SetMemory(0x6509B0, SetTo, 0);
		DisplayText("\n\n\n\n\n\n\n\n\n\n\n\x13\x08※※※※※※※※※※※※\x07 N O T I C E\x08 ※※※※※※※※※※※※\n\n\n\x13\x08최후의 건물 \x04Temple이 \x08파괴\x04되었습니다.\n\n\n\x13\x08※※※※※※※※※※※※\x07 N O T I C E\x08 ※※※※※※※※※※※※",4);
		PlayWAV("staredit\\wav\\clear.ogg");
		PlayWAV("staredit\\wav\\clear.ogg");
		PlayWAV("staredit\\wav\\clear.ogg");
		SetMemory(0x6509B0, SetTo, 1);
		DisplayText("\n\n\n\n\n\n\n\n\n\n\n\x13\x08※※※※※※※※※※※※\x07 N O T I C E\x08 ※※※※※※※※※※※※\n\n\n\x13\x08최후의 건물 \x04Temple이 \x08파괴\x04되었습니다.\n\n\n\x13\x08※※※※※※※※※※※※\x07 N O T I C E\x08 ※※※※※※※※※※※※",4);
		PlayWAV("staredit\\wav\\clear.ogg");
		PlayWAV("staredit\\wav\\clear.ogg");
		PlayWAV("staredit\\wav\\clear.ogg");
		SetMemory(0x6509B0, SetTo, 2);
		DisplayText("\n\n\n\n\n\n\n\n\n\n\n\x13\x08※※※※※※※※※※※※\x07 N O T I C E\x08 ※※※※※※※※※※※※\n\n\n\x13\x08최후의 건물 \x04Temple이 \x08파괴\x04되었습니다.\n\n\n\x13\x08※※※※※※※※※※※※\x07 N O T I C E\x08 ※※※※※※※※※※※※",4);
		PlayWAV("staredit\\wav\\clear.ogg");
		PlayWAV("staredit\\wav\\clear.ogg");
		PlayWAV("staredit\\wav\\clear.ogg");
		SetMemory(0x6509B0, SetTo, 3);
		DisplayText("\n\n\n\n\n\n\n\n\n\n\n\x13\x08※※※※※※※※※※※※\x07 N O T I C E\x08 ※※※※※※※※※※※※\n\n\n\x13\x08최후의 건물 \x04Temple이 \x08파괴\x04되었습니다.\n\n\n\x13\x08※※※※※※※※※※※※\x07 N O T I C E\x08 ※※※※※※※※※※※※",4);
		PlayWAV("staredit\\wav\\clear.ogg");
		PlayWAV("staredit\\wav\\clear.ogg");
		PlayWAV("staredit\\wav\\clear.ogg");
		SetMemory(0x6509B0, SetTo, 4);
		DisplayText("\n\n\n\n\n\n\n\n\n\n\n\x13\x08※※※※※※※※※※※※\x07 N O T I C E\x08 ※※※※※※※※※※※※\n\n\n\x13\x08최후의 건물 \x04Temple이 \x08파괴\x04되었습니다.\n\n\n\x13\x08※※※※※※※※※※※※\x07 N O T I C E\x08 ※※※※※※※※※※※※",4);
		PlayWAV("staredit\\wav\\clear.ogg");
		PlayWAV("staredit\\wav\\clear.ogg");
		PlayWAV("staredit\\wav\\clear.ogg");
		SetMemory(0x6509B0, SetTo, 5);
		DisplayText("\n\n\n\n\n\n\n\n\n\n\n\x13\x08※※※※※※※※※※※※\x07 N O T I C E\x08 ※※※※※※※※※※※※\n\n\n\x13\x08최후의 건물 \x04Temple이 \x08파괴\x04되었습니다.\n\n\n\x13\x08※※※※※※※※※※※※\x07 N O T I C E\x08 ※※※※※※※※※※※※",4);
		PlayWAV("staredit\\wav\\clear.ogg");
		PlayWAV("staredit\\wav\\clear.ogg");
		PlayWAV("staredit\\wav\\clear.ogg");
		SetMemory(0x6509B0, SetTo, FP);
},
}

Trigger { -- 템플 파괴시 관전자
	players = {FP},
	actions = {
		SetMemory(0x6509B0, SetTo, 128);		
		DisplayText("\n\n\n\n\n\n\n\n\n\n\n\x13\x08※※※※※※※※※※※※\x07 N O T I C E\x08 ※※※※※※※※※※※※\n\n\n\x13\x08최후의 건물 \x04Temple 이 \x08파괴\x04되었습니다.\n\n\n\x13\x08※※※※※※※※※※※※\x07 N O T I C E\x08 ※※※※※※※※※※※※",4);
		PlayWAV("staredit\\wav\\clear.ogg");
		PlayWAV("staredit\\wav\\clear.ogg");
		PlayWAV("staredit\\wav\\clear.ogg");
		SetMemory(0x6509B0, SetTo, 129);		
		DisplayText("\n\n\n\n\n\n\n\n\n\n\n\x13\x08※※※※※※※※※※※※\x07 N O T I C E\x08 ※※※※※※※※※※※※\n\n\n\x13\x08최후의 건물 \x04Temple 이 \x08파괴\x04되었습니다.\n\n\n\x13\x08※※※※※※※※※※※※\x07 N O T I C E\x08 ※※※※※※※※※※※※",4);
		PlayWAV("staredit\\wav\\clear.ogg");
		PlayWAV("staredit\\wav\\clear.ogg");
		PlayWAV("staredit\\wav\\clear.ogg");
		SetMemory(0x6509B0, SetTo, 130);
		DisplayText("\n\n\n\n\n\n\n\n\n\n\n\x13\x08※※※※※※※※※※※※\x07 N O T I C E\x08 ※※※※※※※※※※※※\n\n\n\x13\x08최후의 건물 \x04Temple이 \x08파괴\x04되었습니다.\n\n\n\x13\x08※※※※※※※※※※※※\x07 N O T I C E\x08 ※※※※※※※※※※※※",4);
		PlayWAV("staredit\\wav\\clear.ogg");
		PlayWAV("staredit\\wav\\clear.ogg");
		PlayWAV("staredit\\wav\\clear.ogg");
		SetMemory(0x6509B0, SetTo, 131);
		DisplayText("\n\n\n\n\n\n\n\n\n\n\n\x13\x08※※※※※※※※※※※※\x07 N O T I C E\x08 ※※※※※※※※※※※※\n\n\n\x13\x08최후의 건물 \x04Temple이 \x08파괴\x04되었습니다.\n\n\n\x13\x08※※※※※※※※※※※※\x07 N O T I C E\x08 ※※※※※※※※※※※※",4);
		PlayWAV("staredit\\wav\\clear.ogg");
		PlayWAV("staredit\\wav\\clear.ogg");
		PlayWAV("staredit\\wav\\clear.ogg");
		SetMemory(0x6509B0, SetTo, 5);
},
}
ClearText = "\n\n\n\n\n\n\n\n\n\n\n\x13\x04-\n\n\n\n\x13\x04-\n\n\n"
Trigger { -- 게임승리
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtLeast,150,Win);
		},
	actions = {
		SetMemory(0x6509B0, SetTo, 0);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 1);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 2);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 3);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 4);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 5);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, FP);
		},
	}
Trigger { -- 게임승리 관전자
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtLeast,150,Win);
		},
	actions = {
		SetMemory(0x6509B0, SetTo, 128);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 129);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 130);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 131);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, FP);
		},
	}
ClearText = "\n\n\n\n\n\n\n\n\n\n\n\x13\x04- -\n\n\n\n\x13\x04- -\n\n\n"
Trigger { -- 게임승리
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtLeast,160,Win);
		},
	actions = {
		SetMemory(0x6509B0, SetTo, 0);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 1);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 2);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 3);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 4);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 5);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, FP);
		},
	}
Trigger { -- 게임승리 관전자
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtLeast,160,Win);
		},
	actions = {
		SetMemory(0x6509B0, SetTo, 128);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 129);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 130);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 131);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, FP);
		},
	}
ClearText = "\n\n\n\n\n\n\n\n\n\n\n\x13\x04- - -\n\n\n\n\x13\x04- - -\n\n\n"
Trigger { -- 게임승리
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtLeast,170,Win);
		},
	actions = {
		SetMemory(0x6509B0, SetTo, 0);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 1);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 2);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 3);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 4);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 5);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, FP);
		},
	}
Trigger { -- 게임승리 관전자
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtLeast,170,Win);
		},
	actions = {
		SetMemory(0x6509B0, SetTo, 128);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 129);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 130);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 131);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, FP);
		},
	}
ClearText = "\n\n\n\n\n\n\n\n\n\n\n\x13\x04- - - -\n\n\n\n\x13\x04- - - -\n\n\n"
Trigger { -- 게임승리
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtLeast,180,Win);
		},
	actions = {
		SetMemory(0x6509B0, SetTo, 0);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 1);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 2);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 3);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 4);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 5);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, FP);
		},
	}
Trigger { -- 게임승리 관전자
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtLeast,180,Win);
		},
	actions = {
		SetMemory(0x6509B0, SetTo, 128);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 129);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 130);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 131);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, FP);
		},
	}
ClearText = "\n\n\n\n\n\n\n\n\n\n\n\x13\x04- - - - -\n\n\n\n\x13\x04- - - - -\n\n\n"
Trigger { -- 게임승리
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtLeast,190,Win);
		},
	actions = {
		SetMemory(0x6509B0, SetTo, 0);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 1);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 2);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 3);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 4);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 5);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, FP);
		},
	}
Trigger { -- 게임승리 관전자
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtLeast,190,Win);
		},
	actions = {
		SetMemory(0x6509B0, SetTo, 128);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 129);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 130);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 131);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, FP);
		},
	}
ClearText = "\n\n\n\n\n\n\n\n\n\n\n\x13\x04- - - - - -\n\n\n\n\x13\x04- - - - - -\n\n\n"
Trigger { -- 게임승리
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtLeast,200,Win);
		},
	actions = {
		SetMemory(0x6509B0, SetTo, 0);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 1);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 2);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 3);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 4);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 5);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, FP);
		},
	}
Trigger { -- 게임승리 관전자
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtLeast,200,Win);
		},
	actions = {
		SetMemory(0x6509B0, SetTo, 128);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 129);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 130);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 131);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, FP);
		},
	}
ClearText = "\n\n\n\n\n\n\n\n\n\n\n\x13\x04- - - - - - -\n\n\n\n\x13\x04- - - - - - -\n\n\n"
Trigger { -- 게임승리
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtLeast,210,Win);
		},
	actions = {
		SetMemory(0x6509B0, SetTo, 0);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 1);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 2);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 3);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 4);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 5);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, FP);
		},
	}
Trigger { -- 게임승리 관전자
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtLeast,210,Win);
		},
	actions = {
		SetMemory(0x6509B0, SetTo, 128);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 129);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 130);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 131);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, FP);
		},
	}
ClearText = "\n\n\n\n\n\n\n\n\n\n\n\x13\x04- - - - - - - -\n\n\n\n\x13\x04- - - - - - - -\n\n\n"
Trigger { -- 게임승리
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtLeast,220,Win);
		},
	actions = {
		SetMemory(0x6509B0, SetTo, 0);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 1);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 2);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 3);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 4);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 5);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, FP);
		},
	}
Trigger { -- 게임승리 관전자
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtLeast,220,Win);
		},
	actions = {
		SetMemory(0x6509B0, SetTo, 128);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 129);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 130);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 131);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, FP);
		},
	}
ClearText = "\n\n\n\n\n\n\n\n\n\n\n\x13\x04- - - - - - - - -\n\n\n\n\x13\x04- - - - - - - - -\n\n\n"
Trigger { -- 게임승리
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtLeast,230,Win);
		},
	actions = {
		SetMemory(0x6509B0, SetTo, 0);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 1);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 2);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 3);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 4);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 5);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, FP);
		},
	}
Trigger { -- 게임승리 관전자
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtLeast,230,Win);
		},
	actions = {
		SetMemory(0x6509B0, SetTo, 128);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 129);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 130);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 131);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, FP);
		},
	}
ClearText = "\n\n\n\n\n\n\n\n\n\n\n\x13\x04- - - - - - - - - -\n\n\n\n\x13\x04- - - - - - - - - -\n\n\n"
Trigger { -- 게임승리
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtLeast,240,Win);
		},
	actions = {
		SetMemory(0x6509B0, SetTo, 0);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 1);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 2);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 3);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 4);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 5);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, FP);
		},
	}
Trigger { -- 게임승리 관전자
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtLeast,240,Win);
		},
	actions = {
		SetMemory(0x6509B0, SetTo, 128);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 129);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 130);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 131);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, FP);
		},
	}

ClearText = "\n\n\n\n\n\n\n\n\n\n\n\x13\x04- - - - - - - - - - -\n\n\n\n\x13\x04- - - - - - - - - - -\n\n\n"
Trigger { -- 게임승리
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtLeast,250,Win);
		},
	actions = {
		SetMemory(0x6509B0, SetTo, 0);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 1);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 2);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 3);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 4);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 5);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, FP);
		},
	}
Trigger { -- 게임승리 관전자
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtLeast,250,Win);
		},
	actions = {
		SetMemory(0x6509B0, SetTo, 128);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 129);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 130);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 131);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, FP);
		},
	}
ClearText = "\n\n\n\n\n\n\n\n\n\n\n\x13\x04- - - - - - - - - - - -\n\n\n\n\x13\x04- - - - - - - - - - - -\n\n\n"
Trigger { -- 게임승리
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtLeast,260,Win);
		},
	actions = {
		SetMemory(0x6509B0, SetTo, 0);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 1);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 2);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 3);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 4);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 5);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, FP);
		},
	}
	
Trigger { -- 게임승리 관전자
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtLeast,260,Win);
		},
	actions = {
		SetMemory(0x6509B0, SetTo, 128);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 129);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 130);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 131);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, FP);
		},
	}
ClearText = "\n\n\n\n\n\n\n\n\n\n\n\x13\x04- - - - - - - - - - - - -\n\n\n\n\x13\x04- - - - - - - - - - - - -\n\n\n"
Trigger { -- 게임승리
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtLeast,270,Win);
		},
	actions = {
		SetMemory(0x6509B0, SetTo, 0);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 1);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 2);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 3);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 4);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 5);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, FP);
		},
	}
Trigger { -- 게임승리 관전자
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtLeast,270,Win);
		},
	actions = {
		SetMemory(0x6509B0, SetTo, 128);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 129);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 130);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 131);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, FP);
		},
	}
ClearText = "\n\n\n\n\n\n\n\n\n\n\n\x13\x04- - - - - - - - - - - - - -\n\n\n\n\x13\x04- - - - - - - - - - - - - -\n\n\n"
Trigger { -- 게임승리
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtLeast,270,Win);
		},
	actions = {
		SetMemory(0x6509B0, SetTo, 0);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 1);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 2);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 3);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 4);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 5);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, FP);
		},
	}
Trigger { -- 게임승리 관전자
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtLeast,280,Win);
		},
	actions = {
		SetMemory(0x6509B0, SetTo, 128);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 129);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 130);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, 131);
		DisplayText(ClearText,4);
		SetMemory(0x6509B0, SetTo, FP);
		},
	}


PlayersT = {"\x081인","\x0E2인","\x0F3인","\x104인","\x115인","\x156인"}
GModeT = {"\x0EEASY","\x08HARD","\x11BURST"}
BGMT = {"\x0E신나는","\x08진지한","\x11강렬한","\x10강렬한2","\x17메모리","\x1F익시드","\x1C스페셜"}
CIf(FP,CDeaths(FP,AtMost,6,HiddenMode))
for i = 1, 3 do
for j = 1, 7 do
for k = 1, 6 do

ClearText1 = "\n\n\n\n\n\n\n\n\n\x13\x0E★\x10☆\x0E★\x10☆\x0E★\x10☆\x0E★\x10☆\x0E★\x10☆\x04 축하드립니다 \x0E★\x10☆\x0E★\x10☆\x0E★\x10☆\x0E★\x10☆\x0E★\x10☆\n\x13\x04- - - - - - - - - - - - - -\n\x13\x03★ \x04마 린 키 우 기 \x03G\x0Fa\x10L\x0Fa\x03X\x0Fy\x04.2 \x03★"
ClearText2 = "\x13"..PlayersT[k]..", "..GModeT[i].." Mode, "..BGMT[j].." BGM\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D"
ClearText3 = "\x13\x04클리어 하셨습니다.\n\x13\x04Creator - GALAXY_BURST\n\x13\x04- - - - - - - - - - - - - -\n\x13\x04Thanks For Playing\n\x13\x0E★\x10☆\x0E★\x10☆\x0E★\x10☆\x0E★\x10☆\x0E★\x10☆\x04 축하드립니다 \x0E★\x10☆\x0E★\x10☆\x0E★\x10☆\x0E★\x10☆\x0E★\x10☆"


Trigger { -- 게임승리
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,Exactly,i,GMode);
		CDeaths(FP,Exactly,j,BGMMode);
		CVar(FP,SetPlayers[2],Exactly,k);
		CDeaths(FP,AtLeast,280,Win);
		},
	actions = {
		SetMemory(0x6509B0, SetTo, 0);
		DisplayText(ClearText1,4);
		DisplayText(ClearText2,4);
		DisplayText(ClearText3,4);
		PlayWAV("staredit\\wav\\clear2.ogg");
		PlayWAV("staredit\\wav\\clear2.ogg");
		PlayWAV("staredit\\wav\\clear2.ogg");
		SetMemory(0x6509B0, SetTo, 1);
		DisplayText(ClearText1,4);
		DisplayText(ClearText2,4);
		DisplayText(ClearText3,4);
		PlayWAV("staredit\\wav\\clear2.ogg");
		PlayWAV("staredit\\wav\\clear2.ogg");
		PlayWAV("staredit\\wav\\clear2.ogg");
		SetMemory(0x6509B0, SetTo, 2);
		DisplayText(ClearText1,4);
		DisplayText(ClearText2,4);
		DisplayText(ClearText3,4);
		PlayWAV("staredit\\wav\\clear2.ogg");
		PlayWAV("staredit\\wav\\clear2.ogg");
		PlayWAV("staredit\\wav\\clear2.ogg");
		SetMemory(0x6509B0, SetTo, 3);
		DisplayText(ClearText1,4);
		DisplayText(ClearText2,4);
		DisplayText(ClearText3,4);
		PlayWAV("staredit\\wav\\clear2.ogg");
		PlayWAV("staredit\\wav\\clear2.ogg");
		PlayWAV("staredit\\wav\\clear2.ogg");
		SetMemory(0x6509B0, SetTo, 4);
		DisplayText(ClearText1,4);
		DisplayText(ClearText2,4);
		DisplayText(ClearText3,4);
		PlayWAV("staredit\\wav\\clear2.ogg");
		PlayWAV("staredit\\wav\\clear2.ogg");
		PlayWAV("staredit\\wav\\clear2.ogg");
		SetMemory(0x6509B0, SetTo, 5);
		DisplayText(ClearText1,4);
		DisplayText(ClearText2,4);
		DisplayText(ClearText3,4);
		PlayWAV("staredit\\wav\\clear2.ogg");
		PlayWAV("staredit\\wav\\clear2.ogg");
		PlayWAV("staredit\\wav\\clear2.ogg");
		SetMemory(0x6509B0, SetTo, FP);
		},
	}
Trigger { -- 게임승리
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,Exactly,i,GMode);
		CDeaths(FP,Exactly,j,BGMMode);
		CVar(FP,SetPlayers[2],Exactly,k);
		CDeaths(FP,AtLeast,280,Win);
		},
	actions = {
		SetMemory(0x6509B0, SetTo, 128);
		DisplayText(ClearText1,4);
		DisplayText(ClearText2,4);
		DisplayText(ClearText3,4);
		PlayWAV("staredit\\wav\\clear2.ogg");
		PlayWAV("staredit\\wav\\clear2.ogg");
		PlayWAV("staredit\\wav\\clear2.ogg");
		SetMemory(0x6509B0, SetTo, 129);
		DisplayText(ClearText1,4);
		DisplayText(ClearText2,4);
		DisplayText(ClearText3,4);
		PlayWAV("staredit\\wav\\clear2.ogg");
		PlayWAV("staredit\\wav\\clear2.ogg");
		PlayWAV("staredit\\wav\\clear2.ogg");
		SetMemory(0x6509B0, SetTo, 130);
		DisplayText(ClearText1,4);
		DisplayText(ClearText2,4);
		DisplayText(ClearText3,4);
		PlayWAV("staredit\\wav\\clear2.ogg");
		PlayWAV("staredit\\wav\\clear2.ogg");
		PlayWAV("staredit\\wav\\clear2.ogg");
		SetMemory(0x6509B0, SetTo, 131);
		DisplayText(ClearText1,4);
		DisplayText(ClearText2,4);
		DisplayText(ClearText3,4);
		PlayWAV("staredit\\wav\\clear2.ogg");
		PlayWAV("staredit\\wav\\clear2.ogg");
		PlayWAV("staredit\\wav\\clear2.ogg");
		SetMemory(0x6509B0, SetTo, FP);
		},
	}
end
end
end
CIfEnd()

CIf(FP,CDeaths(FP,AtLeast,7,HiddenMode))
for i = 1, 3 do
for j = 1, 7 do
for k = 1, 6 do

ClearText1 = "\n\n\n\n\n\n\n\n\n\x13\x0E★\x10☆\x0E★\x10☆\x0E★\x10☆\x0E★\x10☆\x0E★\x10☆\x04 축하드립니다 \x0E★\x10☆\x0E★\x10☆\x0E★\x10☆\x0E★\x10☆\x0E★\x10☆\n\x13\x04- - - - - - - - - - - - - -\n\x13\x03★ \x04마 린 키 우 기 \x03G\x0Fa\x10L\x0Fa\x03X\x0Fy\x04.2 \x03★"
ClearText2 = "\x13"..PlayersT[k]..", "..GModeT[i].." Mode, "..BGMT[j].." BGM\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D\x0D"
ClearText3 = "\x13\x04클리어 하셨습니다.\n\x13\x04Creator - GALAXY_BURST\n\x13\x04- - - - - - - - - - - - - -\n\x13\x04Thanks For Playing\n\x13\x0E★\x10☆\x0E★\x10☆\x0E★\x10☆\x0E★\x10☆\x0E★\x10☆\x04 축하드립니다 \x0E★\x10☆\x0E★\x10☆\x0E★\x10☆\x0E★\x10☆\x0E★\x10☆"

ClearText4 = "\x13\x18Hidden Mode \x04적용됨"
ClearText5 = "HD".._0D
Trigger { -- 게임승리
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,Exactly,i,GMode);
		CDeaths(FP,Exactly,j,BGMMode);
		CVar(FP,SetPlayers[2],Exactly,k);
		CDeaths(FP,AtLeast,280,Win);
		},
	actions = {
		SetMemory(0x6509B0, SetTo, 0);
		DisplayText(ClearText1,4);
		DisplayText(ClearText2,4);
		DisplayText(ClearText4,4);
		DisplayText(ClearText5,4);
		DisplayText(ClearText3,4);
		PlayWAV("staredit\\wav\\clear2.ogg");
		PlayWAV("staredit\\wav\\clear2.ogg");
		PlayWAV("staredit\\wav\\clear2.ogg");
		SetMemory(0x6509B0, SetTo, 1);
		DisplayText(ClearText1,4);
		DisplayText(ClearText2,4);
		DisplayText(ClearText4,4);
		DisplayText(ClearText5,4);
		DisplayText(ClearText3,4);
		PlayWAV("staredit\\wav\\clear2.ogg");
		PlayWAV("staredit\\wav\\clear2.ogg");
		PlayWAV("staredit\\wav\\clear2.ogg");
		SetMemory(0x6509B0, SetTo, 2);
		DisplayText(ClearText1,4);
		DisplayText(ClearText2,4);
		DisplayText(ClearText4,4);
		DisplayText(ClearText5,4);
		DisplayText(ClearText3,4);
		PlayWAV("staredit\\wav\\clear2.ogg");
		PlayWAV("staredit\\wav\\clear2.ogg");
		PlayWAV("staredit\\wav\\clear2.ogg");
		SetMemory(0x6509B0, SetTo, 3);
		DisplayText(ClearText1,4);
		DisplayText(ClearText2,4);
		DisplayText(ClearText4,4);
		DisplayText(ClearText5,4);
		DisplayText(ClearText3,4);
		PlayWAV("staredit\\wav\\clear2.ogg");
		PlayWAV("staredit\\wav\\clear2.ogg");
		PlayWAV("staredit\\wav\\clear2.ogg");
		SetMemory(0x6509B0, SetTo, 4);
		DisplayText(ClearText1,4);
		DisplayText(ClearText2,4);
		DisplayText(ClearText4,4);
		DisplayText(ClearText5,4);
		DisplayText(ClearText3,4);
		PlayWAV("staredit\\wav\\clear2.ogg");
		PlayWAV("staredit\\wav\\clear2.ogg");
		PlayWAV("staredit\\wav\\clear2.ogg");
		SetMemory(0x6509B0, SetTo, 5);
		DisplayText(ClearText1,4);
		DisplayText(ClearText2,4);
		DisplayText(ClearText4,4);
		DisplayText(ClearText5,4);
		DisplayText(ClearText3,4);
		PlayWAV("staredit\\wav\\clear2.ogg");
		PlayWAV("staredit\\wav\\clear2.ogg");
		PlayWAV("staredit\\wav\\clear2.ogg");
		SetMemory(0x6509B0, SetTo, FP);
		},
	}
Trigger { -- 게임승리
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,Exactly,i,GMode);
		CDeaths(FP,Exactly,j,BGMMode);
		CVar(FP,SetPlayers[2],Exactly,k);
		CDeaths(FP,AtLeast,280,Win);
		},
	actions = {
		SetMemory(0x6509B0, SetTo, 128);
		DisplayText(ClearText1,4);
		DisplayText(ClearText2,4);
		DisplayText(ClearText4,4);
		DisplayText(ClearText5,4);
		DisplayText(ClearText3,4);
		PlayWAV("staredit\\wav\\clear2.ogg");
		PlayWAV("staredit\\wav\\clear2.ogg");
		PlayWAV("staredit\\wav\\clear2.ogg");
		SetMemory(0x6509B0, SetTo, 129);
		DisplayText(ClearText1,4);
		DisplayText(ClearText2,4);
		DisplayText(ClearText4,4);
		DisplayText(ClearText5,4);
		DisplayText(ClearText3,4);
		PlayWAV("staredit\\wav\\clear2.ogg");
		PlayWAV("staredit\\wav\\clear2.ogg");
		PlayWAV("staredit\\wav\\clear2.ogg");
		SetMemory(0x6509B0, SetTo, 130);
		DisplayText(ClearText1,4);
		DisplayText(ClearText2,4);
		DisplayText(ClearText4,4);
		DisplayText(ClearText5,4);
		DisplayText(ClearText3,4);
		PlayWAV("staredit\\wav\\clear2.ogg");
		PlayWAV("staredit\\wav\\clear2.ogg");
		PlayWAV("staredit\\wav\\clear2.ogg");
		SetMemory(0x6509B0, SetTo, 131);
		DisplayText(ClearText1,4);
		DisplayText(ClearText2,4);
		DisplayText(ClearText4,4);
		DisplayText(ClearText5,4);
		DisplayText(ClearText3,4);
		PlayWAV("staredit\\wav\\clear2.ogg");
		PlayWAV("staredit\\wav\\clear2.ogg");
		PlayWAV("staredit\\wav\\clear2.ogg");
		SetMemory(0x6509B0, SetTo, FP);
		},
	}
end
end
end
CIfEnd()

Trigger { -- 게임승리 빅토리 트리거
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtMost,6,HiddenMode);
		CDeaths(FP,AtLeast,499,Win);
		},
	actions = {
		SetMemory(0x6509B0, SetTo, 0);
		PlayWAV("staredit\\wav\\button3.wav");
		DisplayText("\x13\x18히든 \x04커맨드는? : \x17Mininii",4);
		SetMemory(0x6509B0, SetTo, 1);
		PlayWAV("staredit\\wav\\button3.wav");
		DisplayText("\x13\x18히든 \x04커맨드는? : \x17Mininii",4);
		SetMemory(0x6509B0, SetTo, 2);
		PlayWAV("staredit\\wav\\button3.wav");
		DisplayText("\x13\x18히든 \x04커맨드는? : \x17Mininii",4);
		SetMemory(0x6509B0, SetTo, 3);
		PlayWAV("staredit\\wav\\button3.wav");
		DisplayText("\x13\x18히든 \x04커맨드는? : \x17Mininii",4);
		SetMemory(0x6509B0, SetTo, 4);
		PlayWAV("staredit\\wav\\button3.wav");
		DisplayText("\x13\x18히든 \x04커맨드는? : \x17Mininii",4);
		SetMemory(0x6509B0, SetTo, 5);
		PlayWAV("staredit\\wav\\button3.wav");
		DisplayText("\x13\x18히든 \x04커맨드는? : \x17Mininii",4);
		SetMemory(0x6509B0, SetTo, FP);
		},
	}
Trigger { -- 게임승리 빅토리 트리거
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,AtMost,0,TestMode);
		CDeaths(FP,AtLeast,500,Win);
		},
	actions = {
		SetMemory(0x6509B0, SetTo, 0);
		Victory();
		SetMemory(0x6509B0, SetTo, 1);
		Victory();
		SetMemory(0x6509B0, SetTo, 2);
		Victory();
		SetMemory(0x6509B0, SetTo, 3);
		Victory();
		SetMemory(0x6509B0, SetTo, 4);
		Victory();
		SetMemory(0x6509B0, SetTo, 5);
		Victory();
		SetMemory(0x6509B0, SetTo, FP);
		},
	}

CIfEnd()

Trigger { -- 가스통깨면 가스추가
	players = {FP},
	conditions = {
		Label(0);
		Deaths(P12,AtLeast,1,188);
	},
	actions = {
		SetCVar(FP,CanC[2],Add,1);
		SetDeaths(P12,Subtract,1,188);
		PreserveTrigger();
		},
	}

--for i = 1, 11 do
--Trigger { -- No comment (147F3623)
--	players = {Force1},
--	conditions = {
--		Kills(CurrentPlayer,AtLeast,i,"Mineral Field (Type 1)");
--	},
--	actions = {
--		SetScore(Force1,Add,40000,Kills);
--	},
--}
--Trigger { -- No comment (147F3623)
--	players = {Force1},
--	conditions = {
--		Kills(CurrentPlayer,AtLeast,i,"Mineral Field (Type 2)");
--	},
--	actions = {
--		SetScore(Force1,Add,40000,Kills);
--	},
--}
--Trigger { -- No comment (147F3623)
--	players = {Force1},
--	conditions = {
--		Kills(CurrentPlayer,AtLeast,i,"Mineral Field (Type 3)");
--	},
--	actions = {
--		SetScore(Force1,Add,40000,Kills);
--	},
--}
--end

-- 난이도별 인터페이스 설정 - 다인플
CIfX(Force1,{
CVar(FP,HiddenPts[2],AtLeast,1),
CVar(FP,HiddenATK[2],AtLeast,1),
CVar(FP,HiddenHP[2],AtLeast,1)
})
Trigger { -- 조합 네뷸라
	players = {Force1},
	conditions = {
		Bring(CurrentPlayer,AtLeast,1,100,3);
		Accumulate(CurrentPlayer,AtLeast,NeCost,Ore);
	},
	actions = {
		ModifyUnitEnergy(1,100,CurrentPlayer,3,0);
		SetResources(CurrentPlayer,Subtract,NeCost,ore);
		RemoveUnitAt(1,100,3,CurrentPlayer);
		CreateUnitWithProperties(1,16,2,CurrentPlayer,{energy = 100});
		DisplayText("\x02▶ \x1F광물\x04을 소모하여 \x03G\x0Fa\x10L\x0Fa\x03X\x0Fy \x18M\x16arine 을 \x11Ｎ\x07Ｅ\x1FＢ\x1CＵ\x17Ｌ\x11Ａ 으로 \x19변환\x04하였습니다. - \x1F"..NeCost.." O r e\n\x02▶ \x04모든 옵션 적용으로 \x11얼마든지 \x04보유 가능",4);
		PreserveTrigger();
	},
}
CElseX()
CIf(Force1,CVar(FP,SetPlayers[2],AtLeast,2))
CIf(Force1,CDeaths(FP,Exactly,1,GMode))
Trigger { -- 조합 네뷸라
	players = {Force1},
	conditions = {
		Command(CurrentPlayer,AtMost,23,16);
		Bring(CurrentPlayer,AtLeast,1,100,3);
		Accumulate(CurrentPlayer,AtLeast,NeCost,Ore);
	},
	actions = {
		ModifyUnitEnergy(1,100,CurrentPlayer,3,0);
		SetResources(CurrentPlayer,Subtract,NeCost,ore);
		RemoveUnitAt(1,100,3,CurrentPlayer);
		CreateUnitWithProperties(1,16,2,CurrentPlayer,{energy = 100});
		DisplayText("\x02▶ \x1F광물\x04을 소모하여 \x03G\x0Fa\x10L\x0Fa\x03X\x0Fy \x18M\x16arine 을 \x11Ｎ\x07Ｅ\x1FＢ\x1CＵ\x17Ｌ\x11Ａ 으로 \x19변환\x04하였습니다. - \x1F"..NeCost.." O r e\n\x02▶ \x08주의\x04 : 총 \x1124\x04기 보유 가능",4);
		PreserveTrigger();
	},
}

CIfEnd()
CIf(Force1,CDeaths(FP,Exactly,2,GMode))
Trigger { -- 조합 네뷸라
	players = {Force1},
	conditions = {
		Command(CurrentPlayer,AtMost,11,16);
		Bring(CurrentPlayer,AtLeast,1,100,3);
		Accumulate(CurrentPlayer,AtLeast,NeCost,Ore);
	},
	actions = {
		ModifyUnitEnergy(1,100,CurrentPlayer,3,0);
		SetResources(CurrentPlayer,Subtract,NeCost,ore);
		RemoveUnitAt(1,100,3,CurrentPlayer);
		CreateUnitWithProperties(1,16,2,CurrentPlayer,{energy = 100});
		DisplayText("\x02▶ \x1F광물\x04을 소모하여 \x03G\x0Fa\x10L\x0Fa\x03X\x0Fy \x18M\x16arine 을 \x11Ｎ\x07Ｅ\x1FＢ\x1CＵ\x17Ｌ\x11Ａ 으로 \x19변환\x04하였습니다. - \x1F"..NeCost.." O r e\n\x02▶ \x08주의\x04 : 총 \x1112\x04기 보유 가능",4);
		PreserveTrigger();
	},
}

CIfEnd()
CIf(Force1,CDeaths(FP,Exactly,3,GMode))
Trigger { -- 조합 네뷸라
	players = {Force1},
	conditions = {
		Command(CurrentPlayer,AtMost,5,16);
		Bring(CurrentPlayer,AtLeast,1,100,3);
		Accumulate(CurrentPlayer,AtLeast,NeCost,Ore);
	},
	actions = {
		ModifyUnitEnergy(1,100,CurrentPlayer,3,0);
		SetResources(CurrentPlayer,Subtract,NeCost,ore);
		RemoveUnitAt(1,100,3,CurrentPlayer);
		CreateUnitWithProperties(1,16,2,CurrentPlayer,{energy = 100});
		DisplayText("\x02▶ \x1F광물\x04을 소모하여 \x03G\x0Fa\x10L\x0Fa\x03X\x0Fy \x18M\x16arine 을 \x11Ｎ\x07Ｅ\x1FＢ\x1CＵ\x17Ｌ\x11Ａ 으로 \x19변환\x04하였습니다. - \x1F"..NeCost.." O r e\n\x02▶ \x08주의\x04 : 총 \x116\x04기 보유 가능",4);
		PreserveTrigger();
	},
}

CIfEnd()
CIfEnd()
CIfXEnd()
-- 난이도별 인터페이스 설정 - 솔로
CIf(Force1,CVar(FP,SetPlayers[2],Exactly,1))
CIf(Force1,CDeaths(FP,Exactly,1,GMode))
Trigger { -- 조합 네뷸라
	players = {Force1},
	conditions = {
		Command(CurrentPlayer,AtMost,35,16);
		Bring(CurrentPlayer,AtLeast,1,100,3);
		Accumulate(CurrentPlayer,AtLeast,NeCost,Ore);
	},
	actions = {
		ModifyUnitEnergy(1,100,CurrentPlayer,3,0);
		SetResources(CurrentPlayer,Subtract,NeCost,ore);
		RemoveUnitAt(1,100,3,CurrentPlayer);
		CreateUnitWithProperties(1,16,2,CurrentPlayer,{energy = 100});
		DisplayText("\x02▶ \x1F광물\x04을 소모하여 \x03G\x0Fa\x10L\x0Fa\x03X\x0Fy \x18M\x16arine 을 \x11Ｎ\x07Ｅ\x1FＢ\x1CＵ\x17Ｌ\x11Ａ 으로 \x19변환\x04하였습니다. - \x1F"..NeCost.." O r e\n\x02▶ \x08주의\x04 : 총 \x1136\x04기 보유 가능",4);
		PreserveTrigger();
	},
}

CIfEnd()
CIf(Force1,CDeaths(FP,Exactly,2,GMode))
Trigger { -- 조합 네뷸라
	players = {Force1},
	conditions = {
		Command(CurrentPlayer,AtMost,23,16);
		Bring(CurrentPlayer,AtLeast,1,100,3);
		Accumulate(CurrentPlayer,AtLeast,NeCost,Ore);
	},
	actions = {
		ModifyUnitEnergy(1,100,CurrentPlayer,3,0);
		SetResources(CurrentPlayer,Subtract,NeCost,ore);
		RemoveUnitAt(1,100,3,CurrentPlayer);
		CreateUnitWithProperties(1,16,2,CurrentPlayer,{energy = 100});
		DisplayText("\x02▶ \x1F광물\x04을 소모하여 \x03G\x0Fa\x10L\x0Fa\x03X\x0Fy \x18M\x16arine 을 \x11Ｎ\x07Ｅ\x1FＢ\x1CＵ\x17Ｌ\x11Ａ 으로 \x19변환\x04하였습니다. - \x1F"..NeCost.." O r e\n\x02▶ \x08주의\x04 : 총 \x1124\x04기 보유 가능",4);
		PreserveTrigger();
	},
}

CIfEnd()
CIf(Force1,CDeaths(FP,Exactly,3,GMode))
Trigger { -- 조합 네뷸라
	players = {Force1},
	conditions = {
		Command(CurrentPlayer,AtMost,11,16);
		Bring(CurrentPlayer,AtLeast,1,100,3);
		Accumulate(CurrentPlayer,AtLeast,NeCost,Ore);
	},
	actions = {
		ModifyUnitEnergy(1,100,CurrentPlayer,3,0);
		SetResources(CurrentPlayer,Subtract,NeCost,ore);
		RemoveUnitAt(1,100,3,CurrentPlayer);
		CreateUnitWithProperties(1,16,2,CurrentPlayer,{energy = 100});
		DisplayText("\x02▶ \x1F광물\x04을 소모하여 \x03G\x0Fa\x10L\x0Fa\x03X\x0Fy \x18M\x16arine 을 \x11Ｎ\x07Ｅ\x1FＢ\x1CＵ\x17Ｌ\x11Ａ 으로 \x19변환\x04하였습니다. - \x1F"..NeCost.." O r e\n\x02▶ \x08주의\x04 : 총 \x1112\x04기 보유 가능",4);
		PreserveTrigger();
	},
}

CIfEnd()
CIfEnd()


CMov(FP,MarUpData,0)

for i=0, 5 do
CIf(FP,Deaths(i,Exactly,1,217))
CIfX(FP,PlayerCheck(i,1))
CAdd(FP,MarUpData,_Div(_Read(DefUpgradePtrArr[i+1],255*(256^DefUpgradeMaskRetArr[i+1])),256^DefUpgradeMaskRetArr[i+1]))
CElseX()
CAdd(FP,MarUpData,255)
CIfXEnd()
CIfEnd()
end
CIf(FP,{TTCVar(FP,InputMarUpData[2],NotSame,MarUpData)})

CIfX(FP,{CVar(FP,HiddenHP[2],Exactly,0),CVar(FP,HiddenHPM[2],Exactly,0)})
CMov(FP,MarHP,_Div(_Mov(5000*256),_Mul(SetPlayers,_Mov(255))))
CIfX(FP,{TMemory(_Mem(MarUpData),Exactly,_Mul(SetPlayers,_Mov(255)))})
CMov(FP,0x6624E0,(9999*256)+1)
CElseX()
CMov(FP,0x6624E0,_Mul(MarHP,MarUpData),(4999*256)+5)
CIfXEnd()


CElseIfX(CVar(FP,HiddenHP[2],AtLeast,1))

CMov(FP,MarHP,_Div(_Add(_Mul(HiddenHP,_Mov(4000*256)),5000*256),_Mul(SetPlayers,_Mov(255))))
CMov(FP,0x6624E0,_Mul(MarHP,MarUpData),(4999*256)+5)

CElseIfX(CVar(FP,HiddenHPM[2],AtLeast,1))


CIf(FP,CVar(FP,HiddenHPM[2],AtMost,4))

CMov(FP,MarHP,_Div(_Sub(_Mov(5000*256),_Mul(HiddenHPM,_Mov(1000*256))),_Mul(SetPlayers,_Mov(255))))
CIfX(FP,{TMemory(_Mem(MarUpData),Exactly,_Mul(SetPlayers,_Mov(255)))})
CMov(FP,0x6624E0,_Add(_Sub(_Mov(5000*256),_Mul(HiddenHPM,_Mov(1000*256))),5000*256))
CElseX()
CMov(FP,0x6624E0,_Mul(MarHP,MarUpData),(4999*256)+5)
CIfXEnd()

CIfEnd()


CIfXEnd()
CMov(FP,InputMarUpData,MarUpData)

CIfEnd()


CIf(Force1,	Command(CurrentPlayer,AtLeast,1,"Protoss Reaver"))
Trigger { -- 기부 금액 변경
	players = {Force1},
	conditions = {
		Label(0);
		CDeaths("X",Exactly,0,GiveRate);
		Command(CurrentPlayer,AtLeast,1,"Protoss Reaver");
	},
	actions = {
		GiveUnits(All,"Protoss Reaver",CurrentPlayer,"Anywhere",11);
		RemoveUnitAt(All,"Protoss Reaver","Anywhere",11);
		DisplayText("\x07『 \x04기부금액 단위가 \x1F5000 Ore\x04 \x04로 변경되었습니다.\x07 』",4);
		SetCDeaths("X",SetTo,1,GiveRate);
		PreserveTrigger();
		},
}
Trigger { -- 기부 금액 변경
	players = {Force1},
	conditions = {
		Label(0);
		CDeaths("X",Exactly,1,GiveRate);
		Command(CurrentPlayer,AtLeast,1,"Protoss Reaver");
	},
	actions = {
		GiveUnits(All,"Protoss Reaver",CurrentPlayer,"Anywhere",11);
		RemoveUnitAt(All,"Protoss Reaver","Anywhere",11);
		DisplayText("\x07『 \x04기부금액 단위가 \x1F10000 Ore \x04로 변경되었습니다.\x07 』",4);
		SetCDeaths("X",SetTo,2,GiveRate);
		PreserveTrigger();
		},
}
Trigger { -- 기부 금액 변경
	players = {Force1},
	conditions = {
		Label(0);
		CDeaths("X",Exactly,2,GiveRate);
		Command(CurrentPlayer,AtLeast,1,"Protoss Reaver");
	},
	actions = {
		GiveUnits(All,"Protoss Reaver",CurrentPlayer,"Anywhere",11);
		RemoveUnitAt(All,"Protoss Reaver","Anywhere",11);
		DisplayText("\x07『 \x04기부금액 단위가 \x1F50000 Ore \x04로 변경되었습니다.\x07 』",4);
		SetCDeaths("X",SetTo,3,GiveRate);
		PreserveTrigger();
		},
}
Trigger { -- 기부 금액 변경
	players = {Force1},
	conditions = {
		Label(0);
		CDeaths("X",Exactly,3,GiveRate);
		Command(CurrentPlayer,AtLeast,1,"Protoss Reaver");
	},
	actions = {
		GiveUnits(All,"Protoss Reaver",CurrentPlayer,"Anywhere",11);
		RemoveUnitAt(All,"Protoss Reaver","Anywhere",11);
		DisplayText("\x07『 \x04기부금액 단위가 \x1F100000 Ore \x04로 변경되었습니다.\x07 』",4);
		SetCDeaths("X",SetTo,4,GiveRate);
		PreserveTrigger();
		},
}
Trigger { -- 기부 금액 변경
	players = {Force1},
	conditions = {
		Label(0);
		CDeaths("X",Exactly,4,GiveRate);
		Command(CurrentPlayer,AtLeast,1,"Protoss Reaver");
	},
	actions = {
		GiveUnits(All,"Protoss Reaver",CurrentPlayer,"Anywhere",11);
		RemoveUnitAt(All,"Protoss Reaver","Anywhere",11);
		DisplayText("\x07『 \x04기부금액 단위가 \x1F500000 Ore \x04로 변경되었습니다.\x07 』",4);
		SetCDeaths("X",SetTo,5,GiveRate);
		PreserveTrigger();
		},
}
Trigger { -- 기부 금액 변경
	players = {Force1},
	conditions = {
		Label(0);
		CDeaths("X",Exactly,5,GiveRate);
		Command(CurrentPlayer,AtLeast,1,"Protoss Reaver");
	},
	actions = {
		GiveUnits(All,"Protoss Reaver",CurrentPlayer,"Anywhere",11);
		RemoveUnitAt(All,"Protoss Reaver","Anywhere",11);
		DisplayText("\x07『 \x04기부금액 단위가 \x1F1000 Ore \x04로 변경되었습니다.\x07 』",4);
		SetCDeaths("X",SetTo,0,GiveRate);
		PreserveTrigger();
		},
}
CIfEnd()
Trigger { -- BGM On Off
	players = {Force1},
	conditions = {
		DeathsX(CurrentPlayer,Exactly,0,440,0xFF000000);
		Command(CurrentPlayer,AtLeast,1,3);
	},
	actions = {
		GiveUnits(All,3,CurrentPlayer,"Anywhere",11);
		RemoveUnitAt(All,3,"Anywhere",11);
		DisplayText("\x07『 \x1CBGM\x04을 듣지 않습니다. \x07』",4);
		SetDeathsX(CurrentPlayer,SetTo,1*16777216,440,0xFF000000);
		PreserveTrigger();
		},
	}
	Trigger { -- BGM On Off
	players = {Force1},
	conditions = {
		DeathsX(CurrentPlayer,Exactly,1*16777216,440,0xFF000000);
		Command(CurrentPlayer,AtLeast,1,3);
	},
	actions = {
		GiveUnits(All,3,CurrentPlayer,"Anywhere",11);
		RemoveUnitAt(All,3,"Anywhere",11);
		DisplayText("\x07『 \x1CBGM\x04을 듣습니다. \x07』",4);
		SetDeathsX(CurrentPlayer,SetTo,0*16777216,440,0xFF000000);
		PreserveTrigger();
	},
	}

	Trigger { -- BGM On Off
	players = {Force1},
	conditions = {
		Switch("Switch 101",Set);
		DeathsX(CurrentPlayer,Exactly,0,441,0xFF000000);
		Command(CurrentPlayer,AtLeast,1,54);
	},
	actions = {
		GiveUnits(All,54,CurrentPlayer,"Anywhere",11);
		RemoveUnitAt(All,54,"Anywhere",11);
		DisplayText("\x07『 \x1C상시 \x1CBGM\x04을 듣지 않습니다. \x07』",4);
		SetDeathsX(CurrentPlayer,SetTo,1*16777216,441,0xFF000000);
		PreserveTrigger();
		},
	}
	Trigger { -- BGM On Off
	players = {Force1},
	conditions = {
		Switch("Switch 101",Set);
		DeathsX(CurrentPlayer,Exactly,1*16777216,441,0xFF000000);
		Command(CurrentPlayer,AtLeast,1,54);
	},
	actions = {
		GiveUnits(All,54,CurrentPlayer,"Anywhere",11);
		RemoveUnitAt(All,54,"Anywhere",11);
		DisplayText("\x07『 \x1C상시 \x1CBGM\x04을 듣습니다. \x07』",4);
		SetDeathsX(CurrentPlayer,SetTo,0*16777216,441,0xFF000000);
		PreserveTrigger();
	},
	}
	Trigger { -- BGM On Off
	players = {Force1},
	conditions = {
		Switch("Switch 101",Cleared);
		Command(CurrentPlayer,AtLeast,1,54);
	},
	actions = {
		GiveUnits(All,54,CurrentPlayer,"Anywhere",11);
		RemoveUnitAt(All,54,"Anywhere",11);
		DisplayText("\x07『 \x1C스페셜 \x1CBGM\x04 전용 기능입니다. \x07』",4);
		PreserveTrigger();
	},
	}
for i=0, 5 do
Trigger { -- 예약메딕
	players = {i},
	conditions = {
	},
	actions = {
		SetMemoryB(0x57F27C+(228*i)+9,SetTo,0); -- 9, 34 활성화하고 비활성화할 유닛 인덱스
	},
	}
Trigger { -- 예약메딕
	players = {i},
	conditions = {
		Label(0);
		CDeaths(i,Exactly,0,Test1);
		Command(i,AtLeast,1,72);
	},
	actions = {
		DisplayText("\x07『 \x1D예약메딕\x04 기능을 사용합니다. - \x1F350 Ore\x07 』",4);
		GiveUnits(All,72,i,"Anywhere",11);
		RemoveUnitAt(1,72,"Anywhere",11);
		SetMemoryB(0x57F27C+(228*i)+9,SetTo,1); -- 9, 34 활성화하고 비활성화할 유닛 인덱스
		SetMemoryB(0x57F27C+(228*i)+34,SetTo,0);
		SetCDeaths(i,SetTo,1,Test1);
		PreserveTrigger();
	},
	}
Trigger { -- 예약메딕
	players = {i},
	conditions = {
		Label(0);
		CDeaths(i,Exactly,1,Test1);
		Command(i,AtLeast,1,72);
	},
	actions = {
		DisplayText("\x07『 \x1D예약메딕\x04 기능을 \x1B사용하지\x04 않습니다. - \x1F250 Ore\x07 』",4);
		GiveUnits(All,72,i,"Anywhere",11);
		RemoveUnitAt(1,72,"Anywhere",11);
		SetMemoryB(0x57F27C+(228*i)+9,SetTo,0);
		SetMemoryB(0x57F27C+(228*i)+34,SetTo,1);
		SetCDeaths(i,SetTo,0,Test1);
		PreserveTrigger();
	},
	}
end
for k=0, 5 do -- 기부시스템
for j=0, 5 do
if k~=j then
CIf(k,Command(k,AtLeast,1,GiveUnitID[j+1]))
for i=0, 5 do
Trigger { -- 돈 기부 시스템
	players = {k},
	conditions = {
		Label(0);
		--MemoryB(0x58D2B0+(46*k)+GiveUnitID[j+1],AtLeast,1);
		Command(k,AtLeast,1,GiveUnitID[j+1]);
		PlayerCheck(j,1);
		CDeaths(k,Exactly,i,GiveRate);
		Accumulate(k,AtMost,GiveRate2[i+1],Ore);
	},
	actions = {
		--SetMemoryB(0x58D2B0+(46*k)+GiveUnitID[j+1],SetTo,0);
		RemoveUnitAt(1,GiveUnitID[j+1],"Anywhere",k);
		DisplayText("\x07『 \x04잔액이 부족합니다. \x07』",4);
		PreserveTrigger();
	},
	}
Trigger { -- 돈 기부 시스템
	players = {k},
	conditions = {
		Label(0);
		--MemoryB(0x58D2B0+(46*k)+GiveUnitID[j+1],AtLeast,1);
		Command(k,AtLeast,1,GiveUnitID[j+1]);
		PlayerCheck(j,1);
		CDeaths(k,Exactly,i,GiveRate);
		Accumulate(k,AtLeast,GiveRate2[i+1],Ore);
		Accumulate(k,AtMost,0x7FFFFFFF,Ore);
	},
	actions = {
		SetResources(k,Subtract,GiveRate2[i+1],Ore);
		SetResources(j,Add,GiveRate2[i+1],Ore);
		--SetMemoryB(0x58D2B0+(46*k)+GiveUnitID[j+1],SetTo,0);
		
		RemoveUnitAt(1,GiveUnitID[j+1],"Anywhere",k);
		DisplayText("\x07『 "..Player[j+1].."\x04에게 \x1F"..GiveRate2[i+1].." Ore\x04를 기부하였습니다. \x07』",4);
		SetMemory(0x6509B0,SetTo,j);
		DisplayText("\x12\x07『"..Player[k+1].."\x04에게 \x1F"..GiveRate2[i+1].." Ore\x04를 기부받았습니다.\x02 \x07』",4);
		SetMemory(0x6509B0,SetTo,k);
		PreserveTrigger();
	},
	}
end
Trigger { -- 돈 기부 시스템
	players = {k},
	conditions = {
		--MemoryB(0x58D2B0+(46*k)+GiveUnitID[j+1],AtLeast,1);
		Command(k,AtLeast,1,GiveUnitID[j+1]);
		PlayerCheck(j,0);
	},
	actions = {
		DisplayText("\x07『 "..Player[j+1].."\x04이(가) 존재하지 않습니다. \x07』",4);
		--SetMemoryB(0x58D2B0+(46*k)+GiveUnitID[j+1],SetTo,0);
		RemoveUnitAt(1,GiveUnitID[j+1],"Anywhere",k);
		PreserveTrigger();
	},
	}
CIfEnd()
end end end

for NB = 0, 4 do -- 중벙 트리거
Trigger {
	players = {Force1},
	conditions = {
		Bring(CurrentPlayer,AtLeast,1,"Men",NB+19);
		Bring(P12,AtLeast,1,125,NB+19);
	},
	actions = {
		GiveUnits(All,125,P12,NB+19,CurrentPlayer);
		PreserveTrigger();
	},
}
Trigger {
	players = {Force1},
	conditions = {
		Bring(CurrentPlayer,Exactly,0,"Men",NB+19);
		Bring(CurrentPlayer,AtLeast,1,125,NB+19);
	},
	actions = {
		GiveUnits(All,125,CurrentPlayer,NB+19,P12);
		PreserveTrigger();
	},
}
end
for i=0, 5 do
NJump(i,0x500+i,Deaths(i,Exactly,0,111))
CIf(i,Score(i,Kills,AtLeast,1000))
CAdd(i,0x57F0F0+(i*4),_Mul(_DIv(_Read(0x581F04+(i*4)),1000),{FP,ExchangeRate[2],nil,"V"}))
CMov(i,0x581F04+(i*4),_Mod(_Read(0x581F04+(i*4)),1000))
CIfEnd()
DoActions(i,SetDeaths(i,Subtract,1,111))
NJumpEnd(i,0x500+i)
end
for i = 0, 5 do
Trigger {
	players = {i},
	conditions = {
		Bring(i,AtLeast,1,"Men",18);
	},
	actions = {
		SetDeaths(i,Add,1,111);
		PreserveTrigger();
	}
}
Trigger {
	players = {i},
	conditions = {
		Deaths(i,AtLeast,1,204+i);
		Deaths(i,AtMost,0,111);
	},
	actions = {
		SetDeaths(i,Add,50,111);
		SetDeaths(i,SetTo,0,204+i);
		DisplayText("\x07『 \x1F자동환전\x04을 사용하셨습니다. \x07』",4);
		PreserveTrigger();
	}
}
end

CIfEnd()-- GameStart End

BGMArr = {}
for i = 1, 364 do
	if i <= 9 then
		table.insert(BGMArr,"staredit\\wav\\BGM00"..i..".ogg")
	elseif i >= 10 and i<= 99 then
		table.insert(BGMArr,"staredit\\wav\\BGM0"..i..".ogg")
	else
		table.insert(BGMArr,"staredit\\wav\\BGM"..i..".ogg")
	end
end

CIf({Force1,FP},Switch("Switch 101",Set))
for i = 0, 363 do
	Trigger { -- 상시브금
		players = {Force1},
		conditions = {
			Deaths(CurrentPlayer,Exactly,i,441);
			DeathsX(CurrentPlayer,AtMost,0,440,0xFFFFFF);
		},
		actions = {
			PlayWAV(BGMArr[i+1]); 
			SetDeathsX(CurrentPlayer,Add,2000,440,0xFFFFFF);
			SetDeathsX(CurrentPlayer,Add,1,441,0xFFFFFF);
			PreserveTrigger();
			
			},
		}
	Trigger { -- 상시브금
		players = {FP},
		conditions = {
			Deaths(FP,Exactly,i,441);
			DeathsX(FP,AtMost,0,440,0xFFFFFF);
		},
		actions = {
			RotatePlayer({PlayWAVX(BGMArr[i+1])},{128,129,130,131},FP);
			SetDeathsX(FP,Add,2000,440,0xFFFFFF);
			SetDeathsX(FP,Add,1,441,0xFFFFFF);
			PreserveTrigger();
			},
		}
	end
	Trigger { -- 상시브금
		players = {Force1},
		conditions = {
			Deaths(CurrentPlayer,AtLeast,364,441);
			DeathsX(CurrentPlayer,Exactly,0,441,0xFF000000);
			DeathsX(CurrentPlayer,AtMost,0,440,0xFFFFFF);
		},
		actions = {
			PlayWAV(BGMArr[1]); 
			PlayWAV(BGMArr[1]); 
			SetDeathsX(CurrentPlayer,Add,2000,440,0xFFFFFF);
			SetDeathsX(CurrentPlayer,SetTo,1,441,0xFFFFFF);
			PreserveTrigger();
			
			},
		}
		
Trigger { -- 상시브금
	players = {FP},
	conditions = {
		Deaths(FP,AtLeast,364,441);
		DeathsX(FP,AtMost,0,440,0xFFFFFF);
	},
	actions = {
		RotatePlayer({PlayWAVX(BGMArr[1])},{128,129,130,131},FP);
		SetDeathsX(FP,Add,2000,440,0xFFFFFF);
		SetDeathsX(FP,SetTo,1,441,0xFFFFFF);
		PreserveTrigger();
		},
	}

CIfEnd()
--]]
BGMVarArr1 = {58 * 1000 , 60 * 1000 , 59 * 1000, 83640, 182 * 1000}
BGMFileArr1 = {"staredit\\wav\\Opening1.ogg","staredit\\wav\\bgm1_1.ogg" ,"staredit\\wav\\bgm1_2.ogg","staredit\\wav\\bgm1_3.ogg","staredit\\wav\\bgm_sp1.ogg"} 
BGMArr1 = #BGMVarArr1
BGMVarArr2 = {48 * 1000 , 56 * 1000 , 47 * 1000 , 92 * 1000 , 185 * 1000}
BGMFileArr2 = {"staredit\\wav\\Opening2.ogg","staredit\\wav\\bgm2_1.ogg" ,"staredit\\wav\\bgm2_2.ogg","staredit\\wav\\bgm2_3.ogg","staredit\\wav\\bgm_sp2.ogg"} 
BGMArr2 = #BGMVarArr2
BGMInfo2 = {}
BGMVarArr3 = {54 * 1000 , 44 * 1000 , 59 * 1000 , 84 * 1000 , 182 * 1000}
BGMFileArr3 = {"staredit\\wav\\Opening3.ogg","staredit\\wav\\bgm3_1.ogg" ,"staredit\\wav\\bgm3_2.ogg","staredit\\wav\\bgm3_3.ogg","staredit\\wav\\bgm_sp3.ogg"} 
BGMArr3 = #BGMVarArr3
BGMInfo3 = {}
BGMVarArr4 = {60 * 1000 , 56 * 1000 , 82 * 1000 , 119 * 1000 , 194 * 1000}
BGMFileArr4 = {"staredit\\wav\\Opening4.ogg","staredit\\wav\\bgm4_1.ogg" ,"staredit\\wav\\bgm4_2.ogg","staredit\\wav\\bgm4_3.ogg","staredit\\wav\\bgm_sp4.ogg"} 
BGMArr4 = #BGMVarArr4
BGMInfo4 = {}
BGMVarArr5 = {53 * 1000 , 61 * 1000 , 68 * 1000 , 102 * 1000 , 184 * 1000}
BGMFileArr5 = {"staredit\\wav\\Opening5.ogg","staredit\\wav\\bgm5_1.ogg" ,"staredit\\wav\\bgm5_2.ogg","staredit\\wav\\bgm5_3.ogg","staredit\\wav\\bgm_sp5.ogg"} 
BGMArr5 = #BGMVarArr5
BGMInfo5 = {}
BGMVarArr6 = {65500 , 42 * 1000 , 60 * 1000 , 79 * 1000 , 180 * 1000}
BGMFileArr6 = {"staredit\\wav\\ExceedOP.ogg","staredit\\wav\\Ex01.ogg" ,"staredit\\wav\\Ex02.ogg","staredit\\wav\\Ex03.ogg","staredit\\wav\\exSp.ogg"} 
BGMArr6 = #BGMVarArr5

BGMVarArr7 = {0 , 45500 , 63 * 1000 , 94 * 1000 , 170 * 1000}
BGMFileArr7 = {"staredit\\wav\\none.ogg","staredit\\wav\\sp_L.ogg" ,"staredit\\wav\\sp_H.ogg","staredit\\wav\\sp_S.ogg","staredit\\wav\\sp_sp.ogg"} 
BGMArr7 = #BGMVarArr7

CIf(FP,CDeaths(FP,AtLeast,1,BGMType))
Trigger {
	players = {FP},
		conditions = {
		Label(0);
		CDeaths(FP,Exactly,1,BGMType);
		Switch("Switch 100",Set);
			},
	actions = {
		SetCDeaths(FP,Add,1,BGMType);
		PreserveTrigger();
	},
	}
CIfX(FP,{Deaths(FP,AtMost,2001,440)})
function BGMOb(ModeIndex,Index,Value,BGMFile)
Trigger { -- 브금재생 j번 - 관전자
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,Exactly,Index,BGMType);
		CDeaths(FP,Exactly,ModeIndex,BGMMode);
	},
		actions = {
		SetMemory(0x6509B0,SetTo,128);
		PlayWAV(BGMFile);
		PlayWAV(BGMFile);
		SetMemory(0x6509B0,SetTo,129);
		PlayWAV(BGMFile);
		PlayWAV(BGMFile);
		SetMemory(0x6509B0,SetTo,130);
		PlayWAV(BGMFile);
		PlayWAV(BGMFile);
		SetMemory(0x6509B0,SetTo,131);
		PlayWAV(BGMFile);
		PlayWAV(BGMFile);
		SetMemory(0x6509B0,SetTo,FP);
		SetDeaths(FP,SetTo,Value,400,0xFFFFFF);
		PreserveTrigger();
	},
	}
end
for i = 1, BGMArr1 do
BGMOb(1,i,BGMVarArr1[i] ,BGMFileArr1[i])
end
for i = 1, BGMArr2 do
BGMOb(2,i,BGMVarArr2[i] ,BGMFileArr2[i])
end
for i = 1, BGMArr3 do
BGMOb(3,i,BGMVarArr3[i] ,BGMFileArr3[i])
end
for i = 1, BGMArr4 do
BGMOb(4,i,BGMVarArr4[i] ,BGMFileArr4[i])
end
for i = 1, BGMArr5 do
BGMOb(5,i,BGMVarArr5[i] ,BGMFileArr5[i])
end
for i = 1, BGMArr6 do
BGMOb(6,i,BGMVarArr6[i] ,BGMFileArr6[i])
end
for i = 1, BGMArr7 do
BGMOb(7,i,BGMVarArr7[i] ,BGMFileArr7[i])
end
CElseX()
Trigger { -- 브금재생시 스킵 관전자
	players = {FP},
	conditions = {
	},
		actions = {
		SetMemory(0x6509B0,SetTo,128);
		PlayWAV("staredit\\wav\\BGM_Skip.ogg");
		PlayWAV("staredit\\wav\\BGM_Skip.ogg");
		SetMemory(0x6509B0,SetTo,129);
		PlayWAV("staredit\\wav\\BGM_Skip.ogg");
		PlayWAV("staredit\\wav\\BGM_Skip.ogg");
		SetMemory(0x6509B0,SetTo,130);
		PlayWAV("staredit\\wav\\BGM_Skip.ogg");
		PlayWAV("staredit\\wav\\BGM_Skip.ogg");
		SetMemory(0x6509B0,SetTo,131);
		PlayWAV("staredit\\wav\\BGM_Skip.ogg");
		PlayWAV("staredit\\wav\\BGM_Skip.ogg");
		SetMemory(0x6509B0,SetTo,FP);
		PreserveTrigger();
	},
	}
CIfXEnd()
CMov(FP,0x6509B0,0)
CWhile(FP,Memory(0x6509B0,AtMost,5))
CIf(FP,Bring(CurrentPlayer,AtLeast,1,111,64))
CIfX(FP,{Deaths(CurrentPlayer,AtMost,2001,440)})
function BGMPlayer(ModeIndex,Index,Value,BGMFile)
Trigger { -- 브금재생 j번
	players = {FP},
	conditions = {
		Label(0);
		CDeaths(FP,Exactly,Index,BGMType);
		CDeaths(FP,Exactly,ModeIndex,BGMMode);
	},
		actions = {
		PlayWAV(BGMFile);
		PlayWAV(BGMFile);
		SetDeathsX(CurrentPlayer,SetTo,Value,440,0xFFFFFF);
		PreserveTrigger();
	},
	}
end
for i = 1, BGMArr1 do
BGMPlayer(1,i,BGMVarArr1[i] ,BGMFileArr1[i])
end
for i = 1, BGMArr2 do
BGMPlayer(2,i,BGMVarArr2[i] ,BGMFileArr2[i])
end
for i = 1, BGMArr3 do
BGMPlayer(3,i,BGMVarArr3[i] ,BGMFileArr3[i])
end
for i = 1, BGMArr4 do
BGMPlayer(4,i,BGMVarArr4[i] ,BGMFileArr4[i])
end
for i = 1, BGMArr5 do
BGMPlayer(5,i,BGMVarArr5[i] ,BGMFileArr5[i])
end
for i = 1, BGMArr6 do
BGMPlayer(6,i,BGMVarArr6[i] ,BGMFileArr6[i])
end
for i = 1, BGMArr7 do
BGMPlayer(7,i,BGMVarArr7[i] ,BGMFileArr7[i])
end
CElseX()
Trigger { -- 브금재생시 스킵
	players = {FP},
		actions = {
		PlayWAV("staredit\\wav\\BGM_Skip.ogg");
		PlayWAV("staredit\\wav\\BGM_Skip.ogg");
		PreserveTrigger();
	},
	}
CIfXEnd()
CIfEnd()
CAdd(FP,0x6509B0,1)
CWhileEnd()
DoActionsX(FP,{SetCDeaths(FP,SetTo,0,BGMType),SetMemory(0x6509B0,SetTo,FP)})
CIfEnd()
--]]
DoActions(FP,{KillUnit(84,FP),KillUnit(72,FP),KillUnit(22,FP),KillUnit(9,FP),SetMemoryX(0x666458, SetTo, 546,0xFFFF),RemoveUnit(33,FP)})
CJump(AllPlayers,0xF03)
for i = 1, VIndex do
CVariable(AllPlayers,i)
end
CJumpEnd(AllPlayers,0xF03)
EndCtrig()
ErrorCheck()
EUDTurbo(FP)
